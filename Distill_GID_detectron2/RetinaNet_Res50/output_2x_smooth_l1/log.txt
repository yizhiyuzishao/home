[03/08 10:41:58] detectron2 INFO: Rank of current process: 0. World size: 1
[03/08 10:41:59] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.12 (default, Oct 12 2021, 13:49:34) [GCC 7.5.0]
numpy                   1.21.2
detectron2              0.6 @/mnt/GZY/GZY1/detectron2
Compiler                GCC 9.3
CUDA compiler           CUDA 11.2
detectron2 arch flags   8.6
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.2 @/home/charel/workspace_lh/anaconda3/envs/GZY1/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce GTX 1080 (arch=6.1)
Driver version          470.103.01
CUDA_HOME               /usr
Pillow                  9.0.1
torchvision             0.11.3 @/home/charel/workspace_lh/anaconda3/envs/GZY1/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5
iopath                  0.1.9
cv2                     4.5.5
----------------------  ---------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/08 10:41:59] detectron2 INFO: Command line arguments: Namespace(config_file='', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/08 10:41:59] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 1
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - coco_val
  TRAIN:
  - coco_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: true
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 640
  MAX_SIZE_TRAIN: 640
  MIN_SIZE_TEST: 640
  MIN_SIZE_TRAIN:
  - 512
  - 768
  MIN_SIZE_TRAIN_SAMPLING: range
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 40.31747359663594
      - 50.79683366298238
    - - 64
      - 80.63494719327188
      - 101.59366732596476
    - - 128
      - 161.26989438654377
      - 203.18733465192952
    - - 256
      - 322.53978877308754
      - 406.37466930385904
    - - 512
      - 645.0795775461751
      - 812.7493386077181
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_retinanet_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES:
    - res3
    - res4
    - res5
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: RetinaNet
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 8
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: /mnt/GZY/GZY1/detectron2/tools/R-50.pkl
OUTPUT_DIR: output_2x_smooth_l1
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.002
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 186
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 2243
  MOMENTUM: 0.9
  NESTEROV: false
  REFERENCE_WORLD_SIZE: 0
  STEPS:
  - 7000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 187
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[03/08 10:41:59] detectron2 INFO: Full config saved to output_2x_smooth_l1/config.yaml
[03/08 10:41:59] d2.utils.env INFO: Using a generated random seed 59606750
[03/08 10:42:01] d2.engine.defaults INFO: Model:
RetinaNet(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(2048, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (head): RetinaNetHead(
    (cls_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (bbox_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (cls_score): Conv2d(256, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bbox_pred): Conv2d(256, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (anchor_generator): DefaultAnchorGenerator(
    (cell_anchors): BufferList()
  )
)
[03/08 10:43:18] detectron2 INFO: Rank of current process: 0. World size: 1
[03/08 10:43:18] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.12 (default, Oct 12 2021, 13:49:34) [GCC 7.5.0]
numpy                   1.21.2
detectron2              0.6 @/mnt/GZY/GZY1/detectron2
Compiler                GCC 9.3
CUDA compiler           CUDA 11.2
detectron2 arch flags   8.6
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.2 @/home/charel/workspace_lh/anaconda3/envs/GZY1/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce GTX 1080 (arch=6.1)
Driver version          470.103.01
CUDA_HOME               /usr
Pillow                  9.0.1
torchvision             0.11.3 @/home/charel/workspace_lh/anaconda3/envs/GZY1/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5
iopath                  0.1.9
cv2                     4.5.5
----------------------  ---------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/08 10:43:18] detectron2 INFO: Command line arguments: Namespace(config_file='', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/08 10:43:18] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 1
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - coco_val
  TRAIN:
  - coco_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: true
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 640
  MAX_SIZE_TRAIN: 640
  MIN_SIZE_TEST: 640
  MIN_SIZE_TRAIN:
  - 512
  - 768
  MIN_SIZE_TRAIN_SAMPLING: range
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 40.31747359663594
      - 50.79683366298238
    - - 64
      - 80.63494719327188
      - 101.59366732596476
    - - 128
      - 161.26989438654377
      - 203.18733465192952
    - - 256
      - 322.53978877308754
      - 406.37466930385904
    - - 512
      - 645.0795775461751
      - 812.7493386077181
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_retinanet_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES:
    - res3
    - res4
    - res5
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: RetinaNet
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 8
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: /mnt/GZY/GZY1/detectron2/tools/R-50.pkl
OUTPUT_DIR: output_2x_smooth_l1
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.002
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 186
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 2243
  MOMENTUM: 0.9
  NESTEROV: false
  REFERENCE_WORLD_SIZE: 0
  STEPS:
  - 7000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 187
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[03/08 10:43:18] detectron2 INFO: Full config saved to output_2x_smooth_l1/config.yaml
[03/08 10:43:18] d2.utils.env INFO: Using a generated random seed 19082437
[03/08 10:43:20] d2.engine.defaults INFO: Model:
RetinaNet(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(2048, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (head): RetinaNetHead(
    (cls_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (bbox_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (cls_score): Conv2d(256, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bbox_pred): Conv2d(256, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (anchor_generator): DefaultAnchorGenerator(
    (cell_anchors): BufferList()
  )
)
[03/08 10:43:20] d2.data.datasets.coco INFO: Loaded 495 images in COCO format from /mnt/GZY/GZY1/detectron2/data/datasets/coco/annontations/train2022.json
[03/08 10:43:20] d2.data.build INFO: Removed 0 images with no usable annotations. 495 images left.
[03/08 10:43:20] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [RandomCrop(crop_type='relative_range', crop_size=[0.9, 0.9]), ResizeShortestEdge(short_edge_length=(512, 768), max_size=640), RandomFlip()]
[03/08 10:43:20] d2.data.build INFO: Using training sampler TrainingSampler
[03/08 10:43:20] d2.data.common INFO: Serializing 495 elements to byte tensors and concatenating them all ...
[03/08 10:43:20] d2.data.common INFO: Serialized dataset takes 0.20 MiB
[03/08 10:43:20] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[03/08 10:43:20] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /mnt/GZY/GZY1/detectron2/tools/R-50.pkl ...
[03/08 10:43:20] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[03/08 10:43:20] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[03/08 10:43:20] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.fpn_lateral3.{bias, weight}[0m
[34mbackbone.fpn_lateral4.{bias, weight}[0m
[34mbackbone.fpn_lateral5.{bias, weight}[0m
[34mbackbone.fpn_output3.{bias, weight}[0m
[34mbackbone.fpn_output4.{bias, weight}[0m
[34mbackbone.fpn_output5.{bias, weight}[0m
[34mbackbone.top_block.p6.{bias, weight}[0m
[34mbackbone.top_block.p7.{bias, weight}[0m
[34mhead.bbox_pred.{bias, weight}[0m
[34mhead.bbox_subnet.0.{bias, weight}[0m
[34mhead.bbox_subnet.2.{bias, weight}[0m
[34mhead.bbox_subnet.4.{bias, weight}[0m
[34mhead.bbox_subnet.6.{bias, weight}[0m
[34mhead.cls_score.{bias, weight}[0m
[34mhead.cls_subnet.0.{bias, weight}[0m
[34mhead.cls_subnet.2.{bias, weight}[0m
[34mhead.cls_subnet.4.{bias, weight}[0m
[34mhead.cls_subnet.6.{bias, weight}[0m
[03/08 10:43:20] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.bias[0m
[03/08 10:43:20] d2.engine.train_loop INFO: Starting training from iteration 0
[03/08 10:43:52] d2.utils.events INFO:  eta: 0:59:15  iter: 19  total_loss: 2.264  loss_cls: 1.577  loss_box_reg: 0.6863  time: 1.5932  data_time: 0.1792  lr: 3.9962e-05  max_mem: 5161M
[03/08 10:44:21] d2.utils.events INFO:  eta: 0:58:14  iter: 39  total_loss: 1.623  loss_cls: 1.134  loss_box_reg: 0.4838  time: 1.5130  data_time: 0.1737  lr: 7.9922e-05  max_mem: 5161M
[03/08 10:44:50] d2.utils.events INFO:  eta: 0:52:41  iter: 59  total_loss: 1.579  loss_cls: 1.105  loss_box_reg: 0.474  time: 1.4869  data_time: 0.1947  lr: 0.00011988  max_mem: 5161M
[03/08 10:45:19] d2.utils.events INFO:  eta: 0:51:46  iter: 79  total_loss: 1.571  loss_cls: 1.099  loss_box_reg: 0.4713  time: 1.4760  data_time: 0.1886  lr: 0.00015984  max_mem: 5161M
[03/08 10:45:48] d2.utils.events INFO:  eta: 0:51:18  iter: 99  total_loss: 1.655  loss_cls: 1.155  loss_box_reg: 0.4999  time: 1.4711  data_time: 0.1750  lr: 0.0001998  max_mem: 5161M
[03/08 10:46:18] d2.utils.events INFO:  eta: 0:50:49  iter: 119  total_loss: 1.538  loss_cls: 1.082  loss_box_reg: 0.4628  time: 1.4694  data_time: 0.1871  lr: 0.00023976  max_mem: 5161M
[03/08 10:46:47] d2.utils.events INFO:  eta: 0:50:17  iter: 139  total_loss: 1.572  loss_cls: 1.099  loss_box_reg: 0.4722  time: 1.4649  data_time: 0.1878  lr: 0.00027972  max_mem: 5161M
[03/08 10:47:16] d2.utils.events INFO:  eta: 0:49:35  iter: 159  total_loss: 1.607  loss_cls: 1.124  loss_box_reg: 0.4823  time: 1.4606  data_time: 0.1905  lr: 0.00031968  max_mem: 5161M
[03/08 10:47:45] d2.utils.events INFO:  eta: 0:48:39  iter: 179  total_loss: 1.584  loss_cls: 1.112  loss_box_reg: 0.4726  time: 1.4531  data_time: 0.1759  lr: 0.00035964  max_mem: 5161M
[03/08 10:47:54] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0000185.pth
[03/08 10:47:55] d2.data.datasets.coco INFO: Loaded 22 images in COCO format from /mnt/GZY/GZY1/detectron2/data/datasets/coco/annontations/test2022.json
[03/08 10:47:55] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[03/08 10:47:55] d2.data.common INFO: Serializing 22 elements to byte tensors and concatenating them all ...
[03/08 10:47:55] d2.data.common INFO: Serialized dataset takes 0.01 MiB
[03/08 10:47:55] d2.evaluation.evaluator INFO: Start inference on 22 batches
[03/08 10:47:56] d2.evaluation.evaluator INFO: Inference done 11/22. Dataloading: 0.0006 s/iter. Inference: 0.0383 s/iter. Eval: 0.0000 s/iter. Total: 0.0390 s/iter. ETA=0:00:00
[03/08 10:47:56] d2.evaluation.evaluator INFO: Total inference time: 0:00:00.686166 (0.040363 s / iter per device, on 1 devices)
[03/08 10:47:56] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.037935 s / iter per device, on 1 devices)
[03/08 10:47:56] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[03/08 10:47:56] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[03/08 10:47:56] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[03/08 10:47:56] d2.evaluation.coco_evaluation WARNING: No predictions from the model!
[03/08 10:47:56] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[03/08 10:47:56] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/08 10:47:56] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[03/08 10:47:56] d2.evaluation.testing INFO: copypaste: nan,nan,nan,nan,nan,nan
[03/08 10:48:14] d2.utils.events INFO:  eta: 0:48:02  iter: 199  total_loss: 1.499  loss_cls: 1.054  loss_box_reg: 0.4467  time: 1.4470  data_time: 0.1747  lr: 0.0003996  max_mem: 5161M
[03/08 10:48:43] d2.utils.events INFO:  eta: 0:47:21  iter: 219  total_loss: 1.691  loss_cls: 1.184  loss_box_reg: 0.5104  time: 1.4418  data_time: 0.1734  lr: 0.00043956  max_mem: 5161M
[03/08 10:49:11] d2.utils.events INFO:  eta: 0:46:45  iter: 239  total_loss: 1.571  loss_cls: 1.098  loss_box_reg: 0.4734  time: 1.4375  data_time: 0.1728  lr: 0.00047952  max_mem: 5161M
[03/08 10:49:40] d2.utils.events INFO:  eta: 0:46:14  iter: 259  total_loss: 1.582  loss_cls: 1.117  loss_box_reg: 0.4648  time: 1.4340  data_time: 0.1754  lr: 0.00051948  max_mem: 5161M
[03/08 10:50:08] d2.utils.events INFO:  eta: 0:45:40  iter: 279  total_loss: 1.329  loss_cls: 0.925  loss_box_reg: 0.4008  time: 1.4308  data_time: 0.1722  lr: 0.00055944  max_mem: 5161M
[03/08 10:50:37] d2.utils.events INFO:  eta: 0:45:11  iter: 299  total_loss: 1.354  loss_cls: 0.9019  loss_box_reg: 0.4708  time: 1.4283  data_time: 0.1750  lr: 0.0005994  max_mem: 5161M
[03/08 10:51:05] d2.utils.events INFO:  eta: 0:44:41  iter: 319  total_loss: 1.128  loss_cls: 0.7439  loss_box_reg: 0.3898  time: 1.4260  data_time: 0.1755  lr: 0.00063936  max_mem: 5161M
[03/08 10:51:33] d2.utils.events INFO:  eta: 0:44:13  iter: 339  total_loss: 1.003  loss_cls: 0.6482  loss_box_reg: 0.4026  time: 1.4240  data_time: 0.1737  lr: 0.00067932  max_mem: 5161M
[03/08 10:52:02] d2.utils.events INFO:  eta: 0:43:44  iter: 359  total_loss: 1.023  loss_cls: 0.6381  loss_box_reg: 0.4028  time: 1.4222  data_time: 0.1750  lr: 0.00071928  max_mem: 5161M
[03/08 10:52:19] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0000371.pth
[03/08 10:52:22] d2.data.datasets.coco INFO: Loaded 22 images in COCO format from /mnt/GZY/GZY1/detectron2/data/datasets/coco/annontations/test2022.json
[03/08 10:52:22] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[03/08 10:52:22] d2.data.common INFO: Serializing 22 elements to byte tensors and concatenating them all ...
[03/08 10:52:22] d2.data.common INFO: Serialized dataset takes 0.01 MiB
[03/08 10:52:22] d2.evaluation.evaluator INFO: Start inference on 22 batches
[03/08 10:52:23] d2.evaluation.evaluator INFO: Inference done 11/22. Dataloading: 0.0006 s/iter. Inference: 0.0386 s/iter. Eval: 0.0002 s/iter. Total: 0.0394 s/iter. ETA=0:00:00
[03/08 10:52:23] d2.evaluation.evaluator INFO: Total inference time: 0:00:00.705653 (0.041509 s / iter per device, on 1 devices)
[03/08 10:52:23] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.038980 s / iter per device, on 1 devices)
[03/08 10:52:23] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[03/08 10:52:23] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[03/08 10:52:23] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[03/08 10:52:23] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/08 10:52:23] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.00 seconds.
[03/08 10:52:23] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/08 10:52:23] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[03/08 10:52:23] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl  |
|:------:|:------:|:------:|:-----:|:------:|:-----:|
| 19.615 | 58.913 | 2.554  |  nan  | 19.615 |  nan  |
[03/08 10:52:23] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[03/08 10:52:23] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[03/08 10:52:23] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/08 10:52:23] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[03/08 10:52:23] d2.evaluation.testing INFO: copypaste: 19.6148,58.9127,2.5541,nan,19.6148,nan
[03/08 10:52:32] d2.utils.events INFO:  eta: 0:43:16  iter: 379  total_loss: 0.9656  loss_cls: 0.591  loss_box_reg: 0.3824  time: 1.4208  data_time: 0.1770  lr: 0.00075924  max_mem: 5161M
[03/08 10:52:59] d2.utils.events INFO:  eta: 0:42:47  iter: 399  total_loss: 0.8622  loss_cls: 0.5076  loss_box_reg: 0.3586  time: 1.4193  data_time: 0.1716  lr: 0.0007992  max_mem: 5161M
[03/08 10:53:27] d2.utils.events INFO:  eta: 0:42:19  iter: 419  total_loss: 0.8692  loss_cls: 0.5154  loss_box_reg: 0.3508  time: 1.4178  data_time: 0.1725  lr: 0.00083916  max_mem: 5161M
[03/08 10:53:56] d2.utils.events INFO:  eta: 0:41:51  iter: 439  total_loss: 0.9308  loss_cls: 0.576  loss_box_reg: 0.35  time: 1.4165  data_time: 0.1732  lr: 0.00087912  max_mem: 5161M
[03/08 10:54:24] d2.utils.events INFO:  eta: 0:41:23  iter: 459  total_loss: 0.814  loss_cls: 0.4823  loss_box_reg: 0.3181  time: 1.4154  data_time: 0.1725  lr: 0.00091908  max_mem: 5161M
[03/08 10:54:53] d2.utils.events INFO:  eta: 0:40:54  iter: 479  total_loss: 0.7532  loss_cls: 0.4577  loss_box_reg: 0.3017  time: 1.4143  data_time: 0.1728  lr: 0.00095904  max_mem: 5161M
[03/08 10:55:21] d2.utils.events INFO:  eta: 0:40:26  iter: 499  total_loss: 0.7479  loss_cls: 0.4618  loss_box_reg: 0.301  time: 1.4133  data_time: 0.1726  lr: 0.000999  max_mem: 5161M
[03/08 10:55:49] d2.utils.events INFO:  eta: 0:39:58  iter: 519  total_loss: 0.6979  loss_cls: 0.4195  loss_box_reg: 0.2789  time: 1.4125  data_time: 0.1740  lr: 0.001039  max_mem: 5161M
[03/08 10:56:18] d2.utils.events INFO:  eta: 0:39:30  iter: 539  total_loss: 0.7445  loss_cls: 0.4448  loss_box_reg: 0.2898  time: 1.4120  data_time: 0.1761  lr: 0.0010789  max_mem: 5161M
[03/08 10:56:44] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0000557.pth
[03/08 10:56:47] d2.utils.events INFO:  eta: 0:39:02  iter: 559  total_loss: 0.6475  loss_cls: 0.3947  loss_box_reg: 0.2527  time: 1.4112  data_time: 0.1745  lr: 0.0011189  max_mem: 5161M
[03/08 10:56:48] d2.data.datasets.coco INFO: Loaded 22 images in COCO format from /mnt/GZY/GZY1/detectron2/data/datasets/coco/annontations/test2022.json
[03/08 10:56:48] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[03/08 10:56:48] d2.data.common INFO: Serializing 22 elements to byte tensors and concatenating them all ...
[03/08 10:56:48] d2.data.common INFO: Serialized dataset takes 0.01 MiB
[03/08 10:56:48] d2.evaluation.evaluator INFO: Start inference on 22 batches
[03/08 10:56:49] d2.evaluation.evaluator INFO: Inference done 11/22. Dataloading: 0.0006 s/iter. Inference: 0.0391 s/iter. Eval: 0.0002 s/iter. Total: 0.0399 s/iter. ETA=0:00:00
[03/08 10:56:49] d2.evaluation.evaluator INFO: Total inference time: 0:00:00.709462 (0.041733 s / iter per device, on 1 devices)
[03/08 10:56:49] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.039182 s / iter per device, on 1 devices)
[03/08 10:56:49] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[03/08 10:56:49] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[03/08 10:56:49] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[03/08 10:56:49] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/08 10:56:49] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.00 seconds.
[03/08 10:56:49] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/08 10:56:49] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[03/08 10:56:49] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl  |
|:------:|:------:|:------:|:-----:|:------:|:-----:|
| 26.777 | 59.174 | 18.817 |  nan  | 26.778 |  nan  |
[03/08 10:56:49] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[03/08 10:56:49] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[03/08 10:56:49] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/08 10:56:49] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[03/08 10:56:49] d2.evaluation.testing INFO: copypaste: 26.7766,59.1738,18.8166,nan,26.7779,nan
[03/08 10:57:15] d2.utils.events INFO:  eta: 0:38:34  iter: 579  total_loss: 0.6811  loss_cls: 0.4206  loss_box_reg: 0.272  time: 1.4104  data_time: 0.1703  lr: 0.0011588  max_mem: 5161M
[03/08 10:57:44] d2.utils.events INFO:  eta: 0:38:06  iter: 599  total_loss: 0.7632  loss_cls: 0.4943  loss_box_reg: 0.2876  time: 1.4098  data_time: 0.1749  lr: 0.0011988  max_mem: 5161M
[03/08 10:58:12] d2.utils.events INFO:  eta: 0:37:38  iter: 619  total_loss: 0.8102  loss_cls: 0.5018  loss_box_reg: 0.2908  time: 1.4092  data_time: 0.1744  lr: 0.0012388  max_mem: 5161M
[03/08 10:58:40] d2.utils.events INFO:  eta: 0:37:10  iter: 639  total_loss: 0.6967  loss_cls: 0.4337  loss_box_reg: 0.2639  time: 1.4086  data_time: 0.1723  lr: 0.0012787  max_mem: 5161M
[03/08 10:59:09] d2.utils.events INFO:  eta: 0:36:42  iter: 659  total_loss: 0.6817  loss_cls: 0.4054  loss_box_reg: 0.2763  time: 1.4080  data_time: 0.1725  lr: 0.0013187  max_mem: 5161M
[03/08 10:59:37] d2.utils.events INFO:  eta: 0:36:14  iter: 679  total_loss: 0.5958  loss_cls: 0.3454  loss_box_reg: 0.245  time: 1.4078  data_time: 0.1743  lr: 0.0013586  max_mem: 5161M
[03/08 11:00:06] d2.utils.events INFO:  eta: 0:35:46  iter: 699  total_loss: 0.627  loss_cls: 0.3725  loss_box_reg: 0.2622  time: 1.4075  data_time: 0.1755  lr: 0.0013986  max_mem: 5161M
[03/08 11:00:34] d2.utils.events INFO:  eta: 0:35:18  iter: 719  total_loss: 0.5947  loss_cls: 0.339  loss_box_reg: 0.2346  time: 1.4070  data_time: 0.1725  lr: 0.0014386  max_mem: 5161M
[03/08 11:01:02] d2.utils.events INFO:  eta: 0:34:50  iter: 739  total_loss: 0.5441  loss_cls: 0.3078  loss_box_reg: 0.2349  time: 1.4065  data_time: 0.1720  lr: 0.0014785  max_mem: 5161M
[03/08 11:01:09] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0000743.pth
[03/08 11:01:14] d2.data.datasets.coco INFO: Loaded 22 images in COCO format from /mnt/GZY/GZY1/detectron2/data/datasets/coco/annontations/test2022.json
[03/08 11:01:14] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[03/08 11:01:14] d2.data.common INFO: Serializing 22 elements to byte tensors and concatenating them all ...
[03/08 11:01:14] d2.data.common INFO: Serialized dataset takes 0.01 MiB
[03/08 11:01:14] d2.evaluation.evaluator INFO: Start inference on 22 batches
[03/08 11:01:15] d2.evaluation.evaluator INFO: Inference done 11/22. Dataloading: 0.0006 s/iter. Inference: 0.0389 s/iter. Eval: 0.0002 s/iter. Total: 0.0397 s/iter. ETA=0:00:00
[03/08 11:01:15] d2.evaluation.evaluator INFO: Total inference time: 0:00:00.706397 (0.041553 s / iter per device, on 1 devices)
[03/08 11:01:15] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.039016 s / iter per device, on 1 devices)
[03/08 11:01:15] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[03/08 11:01:15] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[03/08 11:01:15] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[03/08 11:01:15] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/08 11:01:15] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.00 seconds.
[03/08 11:01:15] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/08 11:01:15] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[03/08 11:01:15] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl  |
|:------:|:------:|:------:|:-----:|:------:|:-----:|
| 37.050 | 82.317 | 15.440 |  nan  | 37.050 |  nan  |
[03/08 11:01:15] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[03/08 11:01:15] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[03/08 11:01:15] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/08 11:01:15] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[03/08 11:01:15] d2.evaluation.testing INFO: copypaste: 37.0499,82.3173,15.4404,nan,37.0499,nan
[03/08 11:01:32] d2.utils.events INFO:  eta: 0:34:22  iter: 759  total_loss: 0.5738  loss_cls: 0.323  loss_box_reg: 0.2396  time: 1.4062  data_time: 0.1760  lr: 0.0015185  max_mem: 5161M
[03/08 11:02:00] d2.utils.events INFO:  eta: 0:33:54  iter: 779  total_loss: 0.5566  loss_cls: 0.3067  loss_box_reg: 0.2391  time: 1.4058  data_time: 0.1712  lr: 0.0015584  max_mem: 5161M
[03/08 11:02:28] d2.utils.events INFO:  eta: 0:33:27  iter: 799  total_loss: 0.6142  loss_cls: 0.3684  loss_box_reg: 0.2445  time: 1.4054  data_time: 0.1738  lr: 0.0015984  max_mem: 5161M
[03/08 11:02:56] d2.utils.events INFO:  eta: 0:32:59  iter: 819  total_loss: 0.5672  loss_cls: 0.3267  loss_box_reg: 0.2355  time: 1.4050  data_time: 0.1717  lr: 0.0016384  max_mem: 5161M
[03/08 11:03:25] d2.utils.events INFO:  eta: 0:32:31  iter: 839  total_loss: 0.5805  loss_cls: 0.3391  loss_box_reg: 0.2416  time: 1.4046  data_time: 0.1744  lr: 0.0016783  max_mem: 5161M
[03/08 11:03:53] d2.utils.events INFO:  eta: 0:32:03  iter: 859  total_loss: 0.5233  loss_cls: 0.299  loss_box_reg: 0.2239  time: 1.4043  data_time: 0.1755  lr: 0.0017183  max_mem: 5161M
[03/08 11:04:21] d2.utils.events INFO:  eta: 0:31:35  iter: 879  total_loss: 0.5416  loss_cls: 0.3219  loss_box_reg: 0.2202  time: 1.4039  data_time: 0.1735  lr: 0.0017582  max_mem: 5161M
[03/08 11:04:50] d2.utils.events INFO:  eta: 0:31:07  iter: 899  total_loss: 0.4604  loss_cls: 0.2471  loss_box_reg: 0.2118  time: 1.4036  data_time: 0.1741  lr: 0.0017982  max_mem: 5161M
[03/08 11:05:18] d2.utils.events INFO:  eta: 0:30:39  iter: 919  total_loss: 0.4934  loss_cls: 0.27  loss_box_reg: 0.2208  time: 1.4033  data_time: 0.1736  lr: 0.0018382  max_mem: 5161M
[03/08 11:05:33] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0000929.pth
[03/08 11:05:40] d2.data.datasets.coco INFO: Loaded 22 images in COCO format from /mnt/GZY/GZY1/detectron2/data/datasets/coco/annontations/test2022.json
[03/08 11:05:40] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[03/08 11:05:40] d2.data.common INFO: Serializing 22 elements to byte tensors and concatenating them all ...
[03/08 11:05:40] d2.data.common INFO: Serialized dataset takes 0.01 MiB
[03/08 11:05:40] d2.evaluation.evaluator INFO: Start inference on 22 batches
[03/08 11:05:40] d2.evaluation.evaluator INFO: Inference done 11/22. Dataloading: 0.0006 s/iter. Inference: 0.0386 s/iter. Eval: 0.0002 s/iter. Total: 0.0393 s/iter. ETA=0:00:00
[03/08 11:05:41] d2.evaluation.evaluator INFO: Total inference time: 0:00:00.693218 (0.040778 s / iter per device, on 1 devices)
[03/08 11:05:41] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.038264 s / iter per device, on 1 devices)
[03/08 11:05:41] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[03/08 11:05:41] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[03/08 11:05:41] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[03/08 11:05:41] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/08 11:05:41] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.00 seconds.
[03/08 11:05:41] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/08 11:05:41] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[03/08 11:05:41] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl  |
|:------:|:------:|:------:|:-----:|:------:|:-----:|
| 45.574 | 86.138 | 44.385 |  nan  | 45.574 |  nan  |
[03/08 11:05:41] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[03/08 11:05:41] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[03/08 11:05:41] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/08 11:05:41] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[03/08 11:05:41] d2.evaluation.testing INFO: copypaste: 45.5736,86.1382,44.3853,nan,45.5736,nan
[03/08 11:05:48] d2.utils.events INFO:  eta: 0:30:11  iter: 939  total_loss: 0.5396  loss_cls: 0.3286  loss_box_reg: 0.229  time: 1.4030  data_time: 0.1745  lr: 0.0018781  max_mem: 5161M
[03/08 11:06:16] d2.utils.events INFO:  eta: 0:29:43  iter: 959  total_loss: 0.5025  loss_cls: 0.319  loss_box_reg: 0.1882  time: 1.4026  data_time: 0.1703  lr: 0.0019181  max_mem: 5161M
[03/08 11:06:44] d2.utils.events INFO:  eta: 0:29:16  iter: 979  total_loss: 0.4946  loss_cls: 0.2856  loss_box_reg: 0.2031  time: 1.4027  data_time: 0.1734  lr: 0.001958  max_mem: 5161M
[03/08 11:07:12] d2.utils.events INFO:  eta: 0:28:48  iter: 999  total_loss: 0.527  loss_cls: 0.325  loss_box_reg: 0.2167  time: 1.4026  data_time: 0.1745  lr: 0.001998  max_mem: 5161M
[03/08 11:07:41] d2.utils.events INFO:  eta: 0:28:20  iter: 1019  total_loss: 0.5228  loss_cls: 0.316  loss_box_reg: 0.2068  time: 1.4024  data_time: 0.1744  lr: 0.002  max_mem: 5161M
[03/08 11:08:09] d2.utils.events INFO:  eta: 0:27:52  iter: 1039  total_loss: 0.4897  loss_cls: 0.296  loss_box_reg: 0.1991  time: 1.4022  data_time: 0.1761  lr: 0.002  max_mem: 5161M
[03/08 11:08:38] d2.utils.events INFO:  eta: 0:27:24  iter: 1059  total_loss: 0.4568  loss_cls: 0.2545  loss_box_reg: 0.1999  time: 1.4019  data_time: 0.1717  lr: 0.002  max_mem: 5161M
[03/08 11:09:06] d2.utils.events INFO:  eta: 0:26:56  iter: 1079  total_loss: 0.4431  loss_cls: 0.2521  loss_box_reg: 0.1871  time: 1.4017  data_time: 0.1724  lr: 0.002  max_mem: 5161M
[03/08 11:09:34] d2.utils.events INFO:  eta: 0:26:28  iter: 1099  total_loss: 0.4415  loss_cls: 0.2473  loss_box_reg: 0.1862  time: 1.4014  data_time: 0.1716  lr: 0.002  max_mem: 5161M
[03/08 11:09:58] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0001115.pth
[03/08 11:10:03] d2.utils.events INFO:  eta: 0:26:00  iter: 1119  total_loss: 0.3789  loss_cls: 0.2195  loss_box_reg: 0.1668  time: 1.4016  data_time: 0.1767  lr: 0.002  max_mem: 5161M
[03/08 11:10:06] d2.data.datasets.coco INFO: Loaded 22 images in COCO format from /mnt/GZY/GZY1/detectron2/data/datasets/coco/annontations/test2022.json
[03/08 11:10:06] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[03/08 11:10:06] d2.data.common INFO: Serializing 22 elements to byte tensors and concatenating them all ...
[03/08 11:10:06] d2.data.common INFO: Serialized dataset takes 0.01 MiB
[03/08 11:10:06] d2.evaluation.evaluator INFO: Start inference on 22 batches
[03/08 11:10:07] d2.evaluation.evaluator INFO: Inference done 11/22. Dataloading: 0.0006 s/iter. Inference: 0.0383 s/iter. Eval: 0.0001 s/iter. Total: 0.0390 s/iter. ETA=0:00:00
[03/08 11:10:07] d2.evaluation.evaluator INFO: Total inference time: 0:00:00.694460 (0.040851 s / iter per device, on 1 devices)
[03/08 11:10:07] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.038400 s / iter per device, on 1 devices)
[03/08 11:10:07] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[03/08 11:10:07] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[03/08 11:10:07] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[03/08 11:10:07] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/08 11:10:07] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.00 seconds.
[03/08 11:10:07] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/08 11:10:07] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[03/08 11:10:07] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl  |
|:------:|:------:|:------:|:-----:|:------:|:-----:|
| 45.047 | 84.614 | 44.681 |  nan  | 45.047 |  nan  |
[03/08 11:10:07] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[03/08 11:10:07] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[03/08 11:10:07] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/08 11:10:07] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[03/08 11:10:07] d2.evaluation.testing INFO: copypaste: 45.0468,84.6138,44.6815,nan,45.0468,nan
[03/08 11:10:33] d2.utils.events INFO:  eta: 0:25:32  iter: 1139  total_loss: 0.409  loss_cls: 0.234  loss_box_reg: 0.1771  time: 1.4018  data_time: 0.1796  lr: 0.002  max_mem: 5161M
[03/08 11:11:02] d2.utils.events INFO:  eta: 0:25:04  iter: 1159  total_loss: 0.4227  loss_cls: 0.2427  loss_box_reg: 0.1856  time: 1.4023  data_time: 0.1819  lr: 0.002  max_mem: 5161M
[03/08 11:11:31] d2.utils.events INFO:  eta: 0:24:37  iter: 1179  total_loss: 0.4429  loss_cls: 0.2591  loss_box_reg: 0.1729  time: 1.4029  data_time: 0.1760  lr: 0.002  max_mem: 5161M
[03/08 11:12:01] d2.utils.events INFO:  eta: 0:24:09  iter: 1199  total_loss: 0.3622  loss_cls: 0.2099  loss_box_reg: 0.1573  time: 1.4035  data_time: 0.1772  lr: 0.002  max_mem: 5161M
[03/08 11:12:29] d2.utils.events INFO:  eta: 0:23:41  iter: 1219  total_loss: 0.4475  loss_cls: 0.2613  loss_box_reg: 0.1778  time: 1.4038  data_time: 0.1755  lr: 0.002  max_mem: 5161M
[03/08 11:12:58] d2.utils.events INFO:  eta: 0:23:14  iter: 1239  total_loss: 0.3832  loss_cls: 0.2128  loss_box_reg: 0.1686  time: 1.4042  data_time: 0.1767  lr: 0.002  max_mem: 5161M
[03/08 11:13:26] d2.utils.events INFO:  eta: 0:22:46  iter: 1259  total_loss: 0.4049  loss_cls: 0.2284  loss_box_reg: 0.1728  time: 1.4042  data_time: 0.1739  lr: 0.002  max_mem: 5161M
[03/08 11:13:55] d2.utils.events INFO:  eta: 0:22:18  iter: 1279  total_loss: 0.4074  loss_cls: 0.2327  loss_box_reg: 0.1747  time: 1.4042  data_time: 0.1762  lr: 0.002  max_mem: 5161M
[03/08 11:14:24] d2.utils.events INFO:  eta: 0:21:50  iter: 1299  total_loss: 0.3291  loss_cls: 0.1822  loss_box_reg: 0.1426  time: 1.4045  data_time: 0.1753  lr: 0.002  max_mem: 5161M
[03/08 11:14:27] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0001301.pth
[03/08 11:14:38] d2.data.datasets.coco INFO: Loaded 22 images in COCO format from /mnt/GZY/GZY1/detectron2/data/datasets/coco/annontations/test2022.json
[03/08 11:14:38] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[03/08 11:14:38] d2.data.common INFO: Serializing 22 elements to byte tensors and concatenating them all ...
[03/08 11:14:38] d2.data.common INFO: Serialized dataset takes 0.01 MiB
[03/08 11:14:38] d2.evaluation.evaluator INFO: Start inference on 22 batches
[03/08 11:14:38] d2.evaluation.evaluator INFO: Inference done 11/22. Dataloading: 0.0005 s/iter. Inference: 0.0376 s/iter. Eval: 0.0001 s/iter. Total: 0.0383 s/iter. ETA=0:00:00
[03/08 11:14:38] d2.evaluation.evaluator INFO: Total inference time: 0:00:00.689360 (0.040551 s / iter per device, on 1 devices)
[03/08 11:14:38] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.038096 s / iter per device, on 1 devices)
[03/08 11:14:38] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[03/08 11:14:38] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[03/08 11:14:38] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[03/08 11:14:38] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/08 11:14:38] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.00 seconds.
[03/08 11:14:38] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/08 11:14:38] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[03/08 11:14:38] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl  |
|:------:|:------:|:------:|:-----:|:------:|:-----:|
| 54.219 | 84.911 | 65.990 |  nan  | 54.545 |  nan  |
[03/08 11:14:38] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[03/08 11:14:38] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[03/08 11:14:38] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/08 11:14:38] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[03/08 11:14:38] d2.evaluation.testing INFO: copypaste: 54.2191,84.9112,65.9895,nan,54.5450,nan
[03/08 11:14:54] d2.utils.events INFO:  eta: 0:21:22  iter: 1319  total_loss: 0.3468  loss_cls: 0.1854  loss_box_reg: 0.1587  time: 1.4044  data_time: 0.1754  lr: 0.002  max_mem: 5161M
[03/08 11:15:22] d2.utils.events INFO:  eta: 0:20:54  iter: 1339  total_loss: 0.3421  loss_cls: 0.1863  loss_box_reg: 0.1502  time: 1.4042  data_time: 0.1730  lr: 0.002  max_mem: 5161M
[03/08 11:15:51] d2.utils.events INFO:  eta: 0:20:27  iter: 1359  total_loss: 0.3893  loss_cls: 0.213  loss_box_reg: 0.1664  time: 1.4042  data_time: 0.1722  lr: 0.002  max_mem: 5161M
[03/08 11:16:19] d2.utils.events INFO:  eta: 0:19:59  iter: 1379  total_loss: 0.3284  loss_cls: 0.1875  loss_box_reg: 0.1461  time: 1.4044  data_time: 0.1768  lr: 0.002  max_mem: 5161M
[03/08 11:16:48] d2.utils.events INFO:  eta: 0:19:31  iter: 1399  total_loss: 0.3138  loss_cls: 0.1853  loss_box_reg: 0.1311  time: 1.4047  data_time: 0.1762  lr: 0.002  max_mem: 5161M
[03/08 11:17:17] d2.utils.events INFO:  eta: 0:19:04  iter: 1419  total_loss: 0.3591  loss_cls: 0.2055  loss_box_reg: 0.1592  time: 1.4049  data_time: 0.1813  lr: 0.002  max_mem: 5161M
[03/08 11:17:45] d2.utils.events INFO:  eta: 0:18:36  iter: 1439  total_loss: 0.3265  loss_cls: 0.1803  loss_box_reg: 0.1479  time: 1.4050  data_time: 0.1739  lr: 0.002  max_mem: 5161M
[03/08 11:18:15] d2.utils.events INFO:  eta: 0:18:08  iter: 1459  total_loss: 0.3438  loss_cls: 0.1958  loss_box_reg: 0.1478  time: 1.4055  data_time: 0.1891  lr: 0.002  max_mem: 5161M
[03/08 11:18:43] d2.utils.events INFO:  eta: 0:17:40  iter: 1479  total_loss: 0.2946  loss_cls: 0.1633  loss_box_reg: 0.1281  time: 1.4054  data_time: 0.1756  lr: 0.002  max_mem: 5161M
[03/08 11:18:55] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0001487.pth
[03/08 11:19:07] d2.data.datasets.coco INFO: Loaded 22 images in COCO format from /mnt/GZY/GZY1/detectron2/data/datasets/coco/annontations/test2022.json
[03/08 11:19:07] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[03/08 11:19:07] d2.data.common INFO: Serializing 22 elements to byte tensors and concatenating them all ...
[03/08 11:19:07] d2.data.common INFO: Serialized dataset takes 0.01 MiB
[03/08 11:19:07] d2.evaluation.evaluator INFO: Start inference on 22 batches
[03/08 11:19:07] d2.evaluation.evaluator INFO: Inference done 11/22. Dataloading: 0.0006 s/iter. Inference: 0.0376 s/iter. Eval: 0.0001 s/iter. Total: 0.0383 s/iter. ETA=0:00:00
[03/08 11:19:08] d2.evaluation.evaluator INFO: Total inference time: 0:00:00.684489 (0.040264 s / iter per device, on 1 devices)
[03/08 11:19:08] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.037774 s / iter per device, on 1 devices)
[03/08 11:19:08] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[03/08 11:19:08] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[03/08 11:19:08] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[03/08 11:19:08] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/08 11:19:08] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.00 seconds.
[03/08 11:19:08] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/08 11:19:08] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[03/08 11:19:08] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl  |
|:------:|:------:|:------:|:-----:|:------:|:-----:|
| 39.363 | 71.100 | 40.897 |  nan  | 39.999 |  nan  |
[03/08 11:19:08] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[03/08 11:19:08] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[03/08 11:19:08] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/08 11:19:08] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[03/08 11:19:08] d2.evaluation.testing INFO: copypaste: 39.3625,71.0998,40.8968,nan,39.9993,nan
[03/08 11:19:13] d2.utils.events INFO:  eta: 0:17:13  iter: 1499  total_loss: 0.2908  loss_cls: 0.1573  loss_box_reg: 0.1326  time: 1.4053  data_time: 0.1742  lr: 0.002  max_mem: 5161M
[03/08 11:19:42] d2.utils.events INFO:  eta: 0:16:45  iter: 1519  total_loss: 0.325  loss_cls: 0.1808  loss_box_reg: 0.1433  time: 1.4058  data_time: 0.1732  lr: 0.002  max_mem: 5161M
[03/08 11:20:11] d2.utils.events INFO:  eta: 0:16:17  iter: 1539  total_loss: 0.3053  loss_cls: 0.1727  loss_box_reg: 0.1427  time: 1.4063  data_time: 0.1728  lr: 0.002  max_mem: 5161M
[03/08 11:20:39] d2.utils.events INFO:  eta: 0:15:49  iter: 1559  total_loss: 0.29  loss_cls: 0.1586  loss_box_reg: 0.1303  time: 1.4061  data_time: 0.1735  lr: 0.002  max_mem: 5161M
[03/08 11:21:08] d2.utils.events INFO:  eta: 0:15:22  iter: 1579  total_loss: 0.2474  loss_cls: 0.1486  loss_box_reg: 0.1258  time: 1.4059  data_time: 0.1723  lr: 0.002  max_mem: 5161M
[03/08 11:21:36] d2.utils.events INFO:  eta: 0:14:54  iter: 1599  total_loss: 0.26  loss_cls: 0.1366  loss_box_reg: 0.1254  time: 1.4057  data_time: 0.1733  lr: 0.002  max_mem: 5161M
[03/08 11:22:05] d2.utils.events INFO:  eta: 0:14:26  iter: 1619  total_loss: 0.3032  loss_cls: 0.1592  loss_box_reg: 0.1422  time: 1.4055  data_time: 0.1738  lr: 0.002  max_mem: 5161M
[03/08 11:22:33] d2.utils.events INFO:  eta: 0:13:58  iter: 1639  total_loss: 0.2692  loss_cls: 0.148  loss_box_reg: 0.1182  time: 1.4053  data_time: 0.1750  lr: 0.002  max_mem: 5161M
[03/08 11:23:02] d2.utils.events INFO:  eta: 0:13:30  iter: 1659  total_loss: 0.2671  loss_cls: 0.1411  loss_box_reg: 0.1228  time: 1.4051  data_time: 0.1713  lr: 0.002  max_mem: 5161M
[03/08 11:23:22] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0001673.pth
[03/08 11:23:30] d2.utils.events INFO:  eta: 0:13:02  iter: 1679  total_loss: 0.306  loss_cls: 0.1649  loss_box_reg: 0.1332  time: 1.4050  data_time: 0.1725  lr: 0.002  max_mem: 5161M
[03/08 11:23:35] d2.data.datasets.coco INFO: Loaded 22 images in COCO format from /mnt/GZY/GZY1/detectron2/data/datasets/coco/annontations/test2022.json
[03/08 11:23:35] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[03/08 11:23:35] d2.data.common INFO: Serializing 22 elements to byte tensors and concatenating them all ...
[03/08 11:23:35] d2.data.common INFO: Serialized dataset takes 0.01 MiB
[03/08 11:23:35] d2.evaluation.evaluator INFO: Start inference on 22 batches
[03/08 11:23:35] d2.evaluation.evaluator INFO: Inference done 11/22. Dataloading: 0.0006 s/iter. Inference: 0.0372 s/iter. Eval: 0.0001 s/iter. Total: 0.0379 s/iter. ETA=0:00:00
[03/08 11:23:36] d2.evaluation.evaluator INFO: Total inference time: 0:00:00.687329 (0.040431 s / iter per device, on 1 devices)
[03/08 11:23:36] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.037908 s / iter per device, on 1 devices)
[03/08 11:23:36] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[03/08 11:23:36] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[03/08 11:23:36] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[03/08 11:23:36] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/08 11:23:36] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.00 seconds.
[03/08 11:23:36] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/08 11:23:36] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[03/08 11:23:36] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl  |
|:------:|:------:|:------:|:-----:|:------:|:-----:|
| 42.056 | 67.377 | 39.017 |  nan  | 42.551 |  nan  |
[03/08 11:23:36] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[03/08 11:23:36] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[03/08 11:23:36] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/08 11:23:36] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[03/08 11:23:36] d2.evaluation.testing INFO: copypaste: 42.0563,67.3768,39.0165,nan,42.5512,nan
[03/08 11:23:59] d2.utils.events INFO:  eta: 0:12:35  iter: 1699  total_loss: 0.3112  loss_cls: 0.1694  loss_box_reg: 0.1392  time: 1.4051  data_time: 0.1718  lr: 0.002  max_mem: 5161M
[03/08 11:24:28] d2.utils.events INFO:  eta: 0:12:07  iter: 1719  total_loss: 0.2687  loss_cls: 0.1426  loss_box_reg: 0.1211  time: 1.4053  data_time: 0.1770  lr: 0.002  max_mem: 5161M
[03/08 11:24:58] d2.utils.events INFO:  eta: 0:11:39  iter: 1739  total_loss: 0.2191  loss_cls: 0.1163  loss_box_reg: 0.1078  time: 1.4058  data_time: 0.1753  lr: 0.002  max_mem: 5161M
[03/08 11:25:27] d2.utils.events INFO:  eta: 0:11:12  iter: 1759  total_loss: 0.2623  loss_cls: 0.1432  loss_box_reg: 0.1177  time: 1.4063  data_time: 0.1764  lr: 0.002  max_mem: 5161M
[03/08 11:25:56] d2.utils.events INFO:  eta: 0:10:44  iter: 1779  total_loss: 0.3251  loss_cls: 0.1821  loss_box_reg: 0.1424  time: 1.4066  data_time: 0.1768  lr: 0.002  max_mem: 5161M
[03/08 11:26:25] d2.utils.events INFO:  eta: 0:10:16  iter: 1799  total_loss: 0.2299  loss_cls: 0.1358  loss_box_reg: 0.1047  time: 1.4066  data_time: 0.1742  lr: 0.002  max_mem: 5161M
[03/08 11:26:54] d2.utils.events INFO:  eta: 0:09:49  iter: 1819  total_loss: 0.2564  loss_cls: 0.1489  loss_box_reg: 0.1081  time: 1.4067  data_time: 0.1757  lr: 0.002  max_mem: 5161M
[03/08 11:27:23] d2.utils.events INFO:  eta: 0:09:21  iter: 1839  total_loss: 0.2449  loss_cls: 0.1375  loss_box_reg: 0.1158  time: 1.4069  data_time: 0.1767  lr: 0.002  max_mem: 5161M
[03/08 11:27:52] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0001859.pth
[03/08 11:27:53] d2.utils.events INFO:  eta: 0:08:54  iter: 1859  total_loss: 0.235  loss_cls: 0.1264  loss_box_reg: 0.1084  time: 1.4071  data_time: 0.1874  lr: 0.002  max_mem: 5161M
[03/08 11:28:08] d2.data.datasets.coco INFO: Loaded 22 images in COCO format from /mnt/GZY/GZY1/detectron2/data/datasets/coco/annontations/test2022.json
[03/08 11:28:08] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[03/08 11:28:08] d2.data.common INFO: Serializing 22 elements to byte tensors and concatenating them all ...
[03/08 11:28:08] d2.data.common INFO: Serialized dataset takes 0.01 MiB
[03/08 11:28:08] d2.evaluation.evaluator INFO: Start inference on 22 batches
[03/08 11:28:08] d2.evaluation.evaluator INFO: Inference done 11/22. Dataloading: 0.0006 s/iter. Inference: 0.0373 s/iter. Eval: 0.0001 s/iter. Total: 0.0380 s/iter. ETA=0:00:00
[03/08 11:28:09] d2.evaluation.evaluator INFO: Total inference time: 0:00:00.683839 (0.040226 s / iter per device, on 1 devices)
[03/08 11:28:09] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.037663 s / iter per device, on 1 devices)
[03/08 11:28:09] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[03/08 11:28:09] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[03/08 11:28:09] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[03/08 11:28:09] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/08 11:28:09] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.00 seconds.
[03/08 11:28:09] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/08 11:28:09] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[03/08 11:28:09] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl  |
|:------:|:------:|:------:|:-----:|:------:|:-----:|
| 47.348 | 74.351 | 65.487 |  nan  | 48.005 |  nan  |
[03/08 11:28:09] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[03/08 11:28:09] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[03/08 11:28:09] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/08 11:28:09] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[03/08 11:28:09] d2.evaluation.testing INFO: copypaste: 47.3481,74.3506,65.4868,nan,48.0053,nan
[03/08 11:28:23] d2.utils.events INFO:  eta: 0:08:26  iter: 1879  total_loss: 0.2295  loss_cls: 0.1374  loss_box_reg: 0.1032  time: 1.4072  data_time: 0.1794  lr: 0.002  max_mem: 5161M
[03/08 11:28:51] d2.utils.events INFO:  eta: 0:07:58  iter: 1899  total_loss: 0.265  loss_cls: 0.1493  loss_box_reg: 0.1178  time: 1.4070  data_time: 0.1732  lr: 0.002  max_mem: 5161M
[03/08 11:29:20] d2.utils.events INFO:  eta: 0:07:30  iter: 1919  total_loss: 0.2284  loss_cls: 0.1297  loss_box_reg: 0.1019  time: 1.4070  data_time: 0.1757  lr: 0.002  max_mem: 5161M
[03/08 11:29:48] d2.utils.events INFO:  eta: 0:07:02  iter: 1939  total_loss: 0.2163  loss_cls: 0.1128  loss_box_reg: 0.1033  time: 1.4069  data_time: 0.1757  lr: 0.002  max_mem: 5161M
[03/08 11:30:17] d2.utils.events INFO:  eta: 0:06:35  iter: 1959  total_loss: 0.2171  loss_cls: 0.1192  loss_box_reg: 0.1034  time: 1.4070  data_time: 0.1731  lr: 0.002  max_mem: 5161M
[03/08 11:30:46] d2.utils.events INFO:  eta: 0:06:07  iter: 1979  total_loss: 0.246  loss_cls: 0.1255  loss_box_reg: 0.1221  time: 1.4071  data_time: 0.1808  lr: 0.002  max_mem: 5161M
[03/08 11:31:14] d2.utils.events INFO:  eta: 0:05:39  iter: 1999  total_loss: 0.2555  loss_cls: 0.1395  loss_box_reg: 0.1123  time: 1.4072  data_time: 0.1732  lr: 0.002  max_mem: 5161M
[03/08 11:31:44] d2.utils.events INFO:  eta: 0:05:11  iter: 2019  total_loss: 0.2207  loss_cls: 0.118  loss_box_reg: 0.1005  time: 1.4074  data_time: 0.1773  lr: 0.002  max_mem: 5161M
[03/08 11:32:12] d2.utils.events INFO:  eta: 0:04:43  iter: 2039  total_loss: 0.2381  loss_cls: 0.1295  loss_box_reg: 0.1059  time: 1.4074  data_time: 0.1751  lr: 0.002  max_mem: 5161M
[03/08 11:32:22] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0002045.pth
[03/08 11:32:37] d2.data.datasets.coco INFO: Loaded 22 images in COCO format from /mnt/GZY/GZY1/detectron2/data/datasets/coco/annontations/test2022.json
[03/08 11:32:37] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[03/08 11:32:37] d2.data.common INFO: Serializing 22 elements to byte tensors and concatenating them all ...
[03/08 11:32:37] d2.data.common INFO: Serialized dataset takes 0.01 MiB
[03/08 11:32:37] d2.evaluation.evaluator INFO: Start inference on 22 batches
[03/08 11:32:38] d2.evaluation.evaluator INFO: Inference done 11/22. Dataloading: 0.0006 s/iter. Inference: 0.0381 s/iter. Eval: 0.0001 s/iter. Total: 0.0388 s/iter. ETA=0:00:00
[03/08 11:32:38] d2.evaluation.evaluator INFO: Total inference time: 0:00:00.691773 (0.040693 s / iter per device, on 1 devices)
[03/08 11:32:38] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.038190 s / iter per device, on 1 devices)
[03/08 11:32:38] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[03/08 11:32:38] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[03/08 11:32:38] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[03/08 11:32:38] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/08 11:32:38] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.00 seconds.
[03/08 11:32:38] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/08 11:32:38] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[03/08 11:32:38] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl  |
|:------:|:------:|:------:|:-----:|:------:|:-----:|
| 53.229 | 82.602 | 58.596 |  nan  | 54.814 |  nan  |
[03/08 11:32:38] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[03/08 11:32:38] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[03/08 11:32:38] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/08 11:32:38] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[03/08 11:32:38] d2.evaluation.testing INFO: copypaste: 53.2285,82.6021,58.5961,nan,54.8144,nan
[03/08 11:32:43] d2.utils.events INFO:  eta: 0:04:16  iter: 2059  total_loss: 0.2464  loss_cls: 0.136  loss_box_reg: 0.09923  time: 1.4076  data_time: 0.1767  lr: 0.002  max_mem: 5161M
[03/08 11:33:11] d2.utils.events INFO:  eta: 0:03:48  iter: 2079  total_loss: 0.2678  loss_cls: 0.157  loss_box_reg: 0.1108  time: 1.4076  data_time: 0.1753  lr: 0.002  max_mem: 5161M
[03/08 11:33:39] d2.utils.events INFO:  eta: 0:03:20  iter: 2099  total_loss: 0.234  loss_cls: 0.1321  loss_box_reg: 0.1033  time: 1.4075  data_time: 0.1729  lr: 0.002  max_mem: 5161M
[03/08 11:34:08] d2.utils.events INFO:  eta: 0:02:52  iter: 2119  total_loss: 0.2325  loss_cls: 0.1248  loss_box_reg: 0.1077  time: 1.4074  data_time: 0.1726  lr: 0.002  max_mem: 5161M
[03/08 11:34:37] d2.utils.events INFO:  eta: 0:02:24  iter: 2139  total_loss: 0.2512  loss_cls: 0.1323  loss_box_reg: 0.1195  time: 1.4074  data_time: 0.1742  lr: 0.002  max_mem: 5161M
[03/08 11:35:05] d2.utils.events INFO:  eta: 0:01:56  iter: 2159  total_loss: 0.2197  loss_cls: 0.1245  loss_box_reg: 0.09745  time: 1.4073  data_time: 0.1749  lr: 0.002  max_mem: 5161M
[03/08 11:35:34] d2.utils.events INFO:  eta: 0:01:28  iter: 2179  total_loss: 0.2026  loss_cls: 0.1019  loss_box_reg: 0.0962  time: 1.4073  data_time: 0.1741  lr: 0.002  max_mem: 5161M
[03/08 11:36:03] d2.utils.events INFO:  eta: 0:01:00  iter: 2199  total_loss: 0.2381  loss_cls: 0.1275  loss_box_reg: 0.1092  time: 1.4072  data_time: 0.1735  lr: 0.002  max_mem: 5161M
[03/08 11:36:31] d2.utils.events INFO:  eta: 0:00:32  iter: 2219  total_loss: 0.2341  loss_cls: 0.114  loss_box_reg: 0.106  time: 1.4071  data_time: 0.1732  lr: 0.002  max_mem: 5161M
[03/08 11:36:49] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0002231.pth
[03/08 11:37:00] d2.utils.events INFO:  eta: 0:00:04  iter: 2239  total_loss: 0.2144  loss_cls: 0.109  loss_box_reg: 0.1004  time: 1.4073  data_time: 0.1799  lr: 0.002  max_mem: 5161M
[03/08 11:37:05] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_final.pth
[03/08 11:37:05] d2.utils.events INFO:  eta: 0:00:00  iter: 2242  total_loss: 0.2144  loss_cls: 0.109  loss_box_reg: 0.1015  time: 1.4072  data_time: 0.1786  lr: 0.002  max_mem: 5161M
[03/08 11:37:05] d2.engine.hooks INFO: Overall training speed: 2241 iterations in 0:52:33 (1.4073 s / it)
[03/08 11:37:05] d2.engine.hooks INFO: Total training time: 0:53:41 (0:01:07 on hooks)
[03/08 11:37:05] d2.data.datasets.coco INFO: Loaded 22 images in COCO format from /mnt/GZY/GZY1/detectron2/data/datasets/coco/annontations/test2022.json
[03/08 11:37:05] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[03/08 11:37:05] d2.data.common INFO: Serializing 22 elements to byte tensors and concatenating them all ...
[03/08 11:37:05] d2.data.common INFO: Serialized dataset takes 0.01 MiB
[03/08 11:37:05] d2.evaluation.evaluator INFO: Start inference on 22 batches
[03/08 11:37:06] d2.evaluation.evaluator INFO: Inference done 11/22. Dataloading: 0.0006 s/iter. Inference: 0.0373 s/iter. Eval: 0.0001 s/iter. Total: 0.0381 s/iter. ETA=0:00:00
[03/08 11:37:06] d2.evaluation.evaluator INFO: Total inference time: 0:00:00.685356 (0.040315 s / iter per device, on 1 devices)
[03/08 11:37:06] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.037808 s / iter per device, on 1 devices)
[03/08 11:37:06] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[03/08 11:37:06] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[03/08 11:37:06] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[03/08 11:37:06] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/08 11:37:06] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.00 seconds.
[03/08 11:37:06] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/08 11:37:06] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[03/08 11:37:06] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl  |
|:------:|:------:|:------:|:-----:|:------:|:-----:|
| 49.291 | 83.183 | 59.158 |  nan  | 49.937 |  nan  |
[03/08 11:37:06] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[03/08 11:37:06] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[03/08 11:37:06] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/08 11:37:06] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[03/08 11:37:06] d2.evaluation.testing INFO: copypaste: 49.2907,83.1833,59.1579,nan,49.9373,nan
[03/14 08:51:12] detectron2 INFO: Rank of current process: 0. World size: 1
[03/14 08:51:13] detectron2 INFO: Environment info:
----------------------  ------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.12 (default, Oct 12 2021, 13:49:34) [GCC 7.5.0]
numpy                   1.21.2
detectron2              0.6 @/home/ps/DiskA/project/GZY1/detectron2
Compiler                GCC 9.3
CUDA compiler           CUDA 11.2
detectron2 arch flags   8.6
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.2 @/home/ps/SmartBuilding/miniconda/envs/GZY1/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0,1,2,3             NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          470.82.00
CUDA_HOME               /usr/local/cuda
Pillow                  9.0.1
torchvision             0.11.3 @/home/ps/SmartBuilding/miniconda/envs/GZY1/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5
iopath                  0.1.9
cv2                     4.5.5
----------------------  ------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/14 08:51:13] detectron2 INFO: Command line arguments: Namespace(config_file='', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/14 08:51:13] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 1
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - coco_val
  TRAIN:
  - coco_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: true
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 640
  MAX_SIZE_TRAIN: 640
  MIN_SIZE_TEST: 640
  MIN_SIZE_TRAIN:
  - 512
  - 768
  MIN_SIZE_TRAIN_SAMPLING: range
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 40.31747359663594
      - 50.79683366298238
    - - 64
      - 80.63494719327188
      - 101.59366732596476
    - - 128
      - 161.26989438654377
      - 203.18733465192952
    - - 256
      - 322.53978877308754
      - 406.37466930385904
    - - 512
      - 645.0795775461751
      - 812.7493386077181
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_retinanet_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES:
    - res3
    - res4
    - res5
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: RetinaNet
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 8
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: /home/ps/DiskA/project/GZY1/Distill_GID_detectron2/RetinaNet_Res50/R-50.pkl
OUTPUT_DIR: output_2x_smooth_l1
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.002
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 186
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 2243
  MOMENTUM: 0.9
  NESTEROV: false
  REFERENCE_WORLD_SIZE: 0
  STEPS:
  - 7000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 187
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[03/14 08:51:13] detectron2 INFO: Full config saved to output_2x_smooth_l1/config.yaml
[03/14 08:51:13] d2.utils.env INFO: Using a generated random seed 14865380
[03/14 08:51:18] d2.engine.defaults INFO: Model:
RetinaNet(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(2048, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (head): RetinaNetHead(
    (cls_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (bbox_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (cls_score): Conv2d(256, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bbox_pred): Conv2d(256, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (anchor_generator): DefaultAnchorGenerator(
    (cell_anchors): BufferList()
  )
)
[03/14 08:52:00] detectron2 INFO: Rank of current process: 0. World size: 1
[03/14 08:52:01] detectron2 INFO: Environment info:
----------------------  ------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.12 (default, Oct 12 2021, 13:49:34) [GCC 7.5.0]
numpy                   1.21.2
detectron2              0.6 @/home/ps/DiskA/project/GZY1/detectron2
Compiler                GCC 9.3
CUDA compiler           CUDA 11.2
detectron2 arch flags   8.6
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.2 @/home/ps/SmartBuilding/miniconda/envs/GZY1/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0,1,2,3             NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          470.82.00
CUDA_HOME               /usr/local/cuda
Pillow                  9.0.1
torchvision             0.11.3 @/home/ps/SmartBuilding/miniconda/envs/GZY1/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5
iopath                  0.1.9
cv2                     4.5.5
----------------------  ------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/14 08:52:01] detectron2 INFO: Command line arguments: Namespace(config_file='', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/14 08:52:01] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 1
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - coco_val
  TRAIN:
  - coco_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: true
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 640
  MAX_SIZE_TRAIN: 640
  MIN_SIZE_TEST: 640
  MIN_SIZE_TRAIN:
  - 512
  - 768
  MIN_SIZE_TRAIN_SAMPLING: range
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 40.31747359663594
      - 50.79683366298238
    - - 64
      - 80.63494719327188
      - 101.59366732596476
    - - 128
      - 161.26989438654377
      - 203.18733465192952
    - - 256
      - 322.53978877308754
      - 406.37466930385904
    - - 512
      - 645.0795775461751
      - 812.7493386077181
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_retinanet_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES:
    - res3
    - res4
    - res5
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: RetinaNet
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 8
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: /home/ps/DiskA/project/GZY1/Distill_GID_detectron2/RetinaNet_Res50/R-50.pkl
OUTPUT_DIR: output_2x_smooth_l1
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.002
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 186
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 2243
  MOMENTUM: 0.9
  NESTEROV: false
  REFERENCE_WORLD_SIZE: 0
  STEPS:
  - 7000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 187
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[03/14 08:52:01] detectron2 INFO: Full config saved to output_2x_smooth_l1/config.yaml
[03/14 08:52:01] d2.utils.env INFO: Using a generated random seed 2715090
[03/14 08:52:05] d2.engine.defaults INFO: Model:
RetinaNet(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(2048, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (head): RetinaNetHead(
    (cls_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (bbox_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (cls_score): Conv2d(256, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bbox_pred): Conv2d(256, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (anchor_generator): DefaultAnchorGenerator(
    (cell_anchors): BufferList()
  )
)
[03/14 08:52:05] d2.data.datasets.coco INFO: Loaded 495 images in COCO format from /home/ps/DiskA/project/GZY1/detectron2/data/datasets/coco/annontations/train2022.json
[03/14 08:52:05] d2.data.build INFO: Removed 0 images with no usable annotations. 495 images left.
[03/14 08:52:05] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [RandomCrop(crop_type='relative_range', crop_size=[0.9, 0.9]), ResizeShortestEdge(short_edge_length=(512, 768), max_size=640), RandomFlip()]
[03/14 08:52:05] d2.data.build INFO: Using training sampler TrainingSampler
[03/14 08:52:05] d2.data.common INFO: Serializing 495 elements to byte tensors and concatenating them all ...
[03/14 08:52:05] d2.data.common INFO: Serialized dataset takes 0.21 MiB
[03/14 08:52:05] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[03/14 08:52:05] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/ps/DiskA/project/GZY1/Distill_GID_detectron2/RetinaNet_Res50/R-50.pkl ...
[03/14 08:52:06] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[03/14 08:52:06] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[03/14 08:52:06] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.fpn_lateral3.{bias, weight}[0m
[34mbackbone.fpn_lateral4.{bias, weight}[0m
[34mbackbone.fpn_lateral5.{bias, weight}[0m
[34mbackbone.fpn_output3.{bias, weight}[0m
[34mbackbone.fpn_output4.{bias, weight}[0m
[34mbackbone.fpn_output5.{bias, weight}[0m
[34mbackbone.top_block.p6.{bias, weight}[0m
[34mbackbone.top_block.p7.{bias, weight}[0m
[34mhead.bbox_pred.{bias, weight}[0m
[34mhead.bbox_subnet.0.{bias, weight}[0m
[34mhead.bbox_subnet.2.{bias, weight}[0m
[34mhead.bbox_subnet.4.{bias, weight}[0m
[34mhead.bbox_subnet.6.{bias, weight}[0m
[34mhead.cls_score.{bias, weight}[0m
[34mhead.cls_subnet.0.{bias, weight}[0m
[34mhead.cls_subnet.2.{bias, weight}[0m
[34mhead.cls_subnet.4.{bias, weight}[0m
[34mhead.cls_subnet.6.{bias, weight}[0m
[03/14 08:52:06] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.bias[0m
[03/14 08:52:06] d2.engine.train_loop INFO: Starting training from iteration 0
[03/14 08:52:33] d2.utils.events INFO:  eta: 0:50:27  iter: 19  total_loss: 2.313  loss_cls: 1.624  loss_box_reg: 0.6891  time: 1.3538  data_time: 0.3260  lr: 3.9962e-05  max_mem: 5159M
[03/14 08:52:54] d2.utils.events INFO:  eta: 0:48:36  iter: 39  total_loss: 1.637  loss_cls: 1.141  loss_box_reg: 0.4937  time: 1.1910  data_time: 0.3228  lr: 7.9922e-05  max_mem: 5159M
[03/14 08:53:14] d2.utils.events INFO:  eta: 0:37:31  iter: 59  total_loss: 1.625  loss_cls: 1.138  loss_box_reg: 0.4908  time: 1.1166  data_time: 0.3215  lr: 0.00011988  max_mem: 5159M
[03/14 08:53:33] d2.utils.events INFO:  eta: 0:36:35  iter: 79  total_loss: 1.617  loss_cls: 1.128  loss_box_reg: 0.4855  time: 1.0799  data_time: 0.3208  lr: 0.00015984  max_mem: 5159M
[03/14 08:53:52] d2.utils.events INFO:  eta: 0:36:07  iter: 99  total_loss: 1.527  loss_cls: 1.06  loss_box_reg: 0.4626  time: 1.0516  data_time: 0.3136  lr: 0.0001998  max_mem: 5159M
[03/14 08:54:12] d2.utils.events INFO:  eta: 0:35:44  iter: 119  total_loss: 1.613  loss_cls: 1.131  loss_box_reg: 0.4818  time: 1.0374  data_time: 0.3221  lr: 0.00023976  max_mem: 5159M
[03/14 08:54:31] d2.utils.events INFO:  eta: 0:35:22  iter: 139  total_loss: 1.488  loss_cls: 1.043  loss_box_reg: 0.4486  time: 1.0264  data_time: 0.3181  lr: 0.00027972  max_mem: 5159M
[03/14 08:54:50] d2.utils.events INFO:  eta: 0:34:56  iter: 159  total_loss: 1.655  loss_cls: 1.162  loss_box_reg: 0.4914  time: 1.0151  data_time: 0.3212  lr: 0.00031968  max_mem: 5159M
[03/14 08:55:09] d2.utils.events INFO:  eta: 0:34:36  iter: 179  total_loss: 1.551  loss_cls: 1.091  loss_box_reg: 0.46  time: 1.0080  data_time: 0.3228  lr: 0.00035964  max_mem: 5159M
[03/14 08:55:15] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0000185.pth
[03/14 08:55:16] d2.data.datasets.coco INFO: Loaded 22 images in COCO format from /home/ps/DiskA/project/GZY1/detectron2/data/datasets/coco/annontations/test2022.json
[03/14 08:55:16] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[03/14 08:55:16] d2.data.common INFO: Serializing 22 elements to byte tensors and concatenating them all ...
[03/14 08:55:16] d2.data.common INFO: Serialized dataset takes 0.01 MiB
[03/14 08:55:16] d2.evaluation.evaluator INFO: Start inference on 22 batches
[03/14 08:55:17] d2.evaluation.evaluator INFO: Inference done 11/22. Dataloading: 0.0017 s/iter. Inference: 0.0628 s/iter. Eval: 0.0001 s/iter. Total: 0.0645 s/iter. ETA=0:00:00
[03/14 08:55:17] d2.evaluation.evaluator INFO: Total inference time: 0:00:00.815459 (0.047968 s / iter per device, on 1 devices)
[03/14 08:55:17] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.037206 s / iter per device, on 1 devices)
[03/14 08:55:17] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[03/14 08:55:17] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[03/14 08:55:17] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[03/14 08:55:17] d2.evaluation.coco_evaluation WARNING: No predictions from the model!
[03/14 08:55:17] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[03/14 08:55:17] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/14 08:55:17] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[03/14 08:55:17] d2.evaluation.testing INFO: copypaste: nan,nan,nan,nan,nan,nan
[03/14 08:55:30] d2.utils.events INFO:  eta: 0:34:15  iter: 199  total_loss: 1.678  loss_cls: 1.181  loss_box_reg: 0.4974  time: 1.0023  data_time: 0.3134  lr: 0.0003996  max_mem: 5159M
[03/14 08:55:49] d2.utils.events INFO:  eta: 0:33:55  iter: 219  total_loss: 1.577  loss_cls: 1.113  loss_box_reg: 0.4637  time: 0.9993  data_time: 0.3187  lr: 0.00043956  max_mem: 5159M
[03/14 08:56:08] d2.utils.events INFO:  eta: 0:33:34  iter: 239  total_loss: 1.68  loss_cls: 1.182  loss_box_reg: 0.4988  time: 0.9964  data_time: 0.3145  lr: 0.00047952  max_mem: 5159M
[03/14 08:56:28] d2.utils.events INFO:  eta: 0:33:14  iter: 259  total_loss: 1.567  loss_cls: 1.101  loss_box_reg: 0.4598  time: 0.9942  data_time: 0.3187  lr: 0.00051948  max_mem: 5159M
[03/14 08:56:47] d2.utils.events INFO:  eta: 0:32:54  iter: 279  total_loss: 1.495  loss_cls: 1.058  loss_box_reg: 0.436  time: 0.9921  data_time: 0.3168  lr: 0.00055944  max_mem: 5159M
[03/14 08:57:07] d2.utils.events INFO:  eta: 0:32:32  iter: 299  total_loss: 1.544  loss_cls: 1.077  loss_box_reg: 0.4709  time: 0.9904  data_time: 0.3189  lr: 0.0005994  max_mem: 5159M
[03/14 08:57:26] d2.utils.events INFO:  eta: 0:32:12  iter: 319  total_loss: 1.328  loss_cls: 0.8469  loss_box_reg: 0.4604  time: 0.9877  data_time: 0.3126  lr: 0.00063936  max_mem: 5159M
[03/14 08:57:45] d2.utils.events INFO:  eta: 0:31:51  iter: 339  total_loss: 1.207  loss_cls: 0.7984  loss_box_reg: 0.4319  time: 0.9863  data_time: 0.3176  lr: 0.00067932  max_mem: 5159M
[03/14 08:58:03] d2.utils.events INFO:  eta: 0:31:30  iter: 359  total_loss: 1.059  loss_cls: 0.6661  loss_box_reg: 0.398  time: 0.9829  data_time: 0.3178  lr: 0.00071928  max_mem: 5159M
[03/14 08:58:15] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0000371.pth
[03/14 08:58:17] d2.data.datasets.coco INFO: Loaded 22 images in COCO format from /home/ps/DiskA/project/GZY1/detectron2/data/datasets/coco/annontations/test2022.json
[03/14 08:58:17] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[03/14 08:58:17] d2.data.common INFO: Serializing 22 elements to byte tensors and concatenating them all ...
[03/14 08:58:17] d2.data.common INFO: Serialized dataset takes 0.01 MiB
[03/14 08:58:17] d2.evaluation.evaluator INFO: Start inference on 22 batches
[03/14 08:58:18] d2.evaluation.evaluator INFO: Inference done 11/22. Dataloading: 0.0012 s/iter. Inference: 0.0258 s/iter. Eval: 0.0003 s/iter. Total: 0.0273 s/iter. ETA=0:00:00
[03/14 08:58:19] d2.evaluation.evaluator INFO: Total inference time: 0:00:01.093376 (0.064316 s / iter per device, on 1 devices)
[03/14 08:58:19] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.053484 s / iter per device, on 1 devices)
[03/14 08:58:19] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[03/14 08:58:19] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[03/14 08:58:19] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[03/14 08:58:19] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/14 08:58:19] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.01 seconds.
[03/14 08:58:19] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/14 08:58:19] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[03/14 08:58:19] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl  |
|:------:|:------:|:------:|:-----:|:------:|:-----:|
| 24.022 | 60.196 | 13.361 |  nan  | 24.022 |  nan  |
[03/14 08:58:19] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[03/14 08:58:19] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[03/14 08:58:19] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/14 08:58:19] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[03/14 08:58:19] d2.evaluation.testing INFO: copypaste: 24.0219,60.1955,13.3606,nan,24.0219,nan
[03/14 08:58:25] d2.utils.events INFO:  eta: 0:31:09  iter: 379  total_loss: 1.048  loss_cls: 0.6214  loss_box_reg: 0.415  time: 0.9819  data_time: 0.3207  lr: 0.00075924  max_mem: 5159M
[03/14 08:58:44] d2.utils.events INFO:  eta: 0:30:49  iter: 399  total_loss: 0.9242  loss_cls: 0.556  loss_box_reg: 0.3678  time: 0.9798  data_time: 0.3162  lr: 0.0007992  max_mem: 5159M
[03/14 08:59:03] d2.utils.events INFO:  eta: 0:30:29  iter: 419  total_loss: 0.924  loss_cls: 0.5752  loss_box_reg: 0.3617  time: 0.9791  data_time: 0.3207  lr: 0.00083916  max_mem: 5159M
[03/14 08:59:22] d2.utils.events INFO:  eta: 0:30:09  iter: 439  total_loss: 0.8459  loss_cls: 0.523  loss_box_reg: 0.3426  time: 0.9784  data_time: 0.3158  lr: 0.00087912  max_mem: 5159M
[03/14 08:59:41] d2.utils.events INFO:  eta: 0:29:49  iter: 459  total_loss: 0.7936  loss_cls: 0.4986  loss_box_reg: 0.306  time: 0.9769  data_time: 0.3213  lr: 0.00091908  max_mem: 5159M
[03/14 09:00:01] d2.utils.events INFO:  eta: 0:29:29  iter: 479  total_loss: 0.7897  loss_cls: 0.5038  loss_box_reg: 0.2915  time: 0.9763  data_time: 0.3170  lr: 0.00095904  max_mem: 5159M
[03/14 09:00:20] d2.utils.events INFO:  eta: 0:29:08  iter: 499  total_loss: 0.8148  loss_cls: 0.5091  loss_box_reg: 0.3057  time: 0.9750  data_time: 0.3197  lr: 0.000999  max_mem: 5159M
[03/14 09:00:39] d2.utils.events INFO:  eta: 0:28:48  iter: 519  total_loss: 0.8058  loss_cls: 0.4952  loss_box_reg: 0.304  time: 0.9745  data_time: 0.3221  lr: 0.001039  max_mem: 5159M
[03/14 09:00:58] d2.utils.events INFO:  eta: 0:28:28  iter: 539  total_loss: 0.7083  loss_cls: 0.417  loss_box_reg: 0.2829  time: 0.9742  data_time: 0.3161  lr: 0.0010789  max_mem: 5159M
[03/14 09:01:16] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0000557.pth
[03/14 09:01:18] d2.utils.events INFO:  eta: 0:28:08  iter: 559  total_loss: 0.7136  loss_cls: 0.4273  loss_box_reg: 0.2866  time: 0.9736  data_time: 0.3171  lr: 0.0011189  max_mem: 5159M
[03/14 09:01:19] d2.data.datasets.coco INFO: Loaded 22 images in COCO format from /home/ps/DiskA/project/GZY1/detectron2/data/datasets/coco/annontations/test2022.json
[03/14 09:01:19] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[03/14 09:01:19] d2.data.common INFO: Serializing 22 elements to byte tensors and concatenating them all ...
[03/14 09:01:19] d2.data.common INFO: Serialized dataset takes 0.01 MiB
[03/14 09:01:19] d2.evaluation.evaluator INFO: Start inference on 22 batches
[03/14 09:01:20] d2.evaluation.evaluator INFO: Inference done 11/22. Dataloading: 0.0016 s/iter. Inference: 0.0445 s/iter. Eval: 0.0004 s/iter. Total: 0.0465 s/iter. ETA=0:00:00
[03/14 09:01:21] d2.evaluation.evaluator INFO: Total inference time: 0:00:01.165797 (0.068576 s / iter per device, on 1 devices)
[03/14 09:01:21] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.056645 s / iter per device, on 1 devices)
[03/14 09:01:21] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[03/14 09:01:21] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[03/14 09:01:21] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[03/14 09:01:21] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/14 09:01:21] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.01 seconds.
[03/14 09:01:21] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/14 09:01:21] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[03/14 09:01:21] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl  |
|:------:|:------:|:------:|:-----:|:------:|:-----:|
| 32.037 | 72.302 | 16.131 |  nan  | 32.037 |  nan  |
[03/14 09:01:21] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[03/14 09:01:21] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[03/14 09:01:21] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/14 09:01:21] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[03/14 09:01:21] d2.evaluation.testing INFO: copypaste: 32.0372,72.3022,16.1308,nan,32.0372,nan
[03/14 09:01:39] d2.utils.events INFO:  eta: 0:27:48  iter: 579  total_loss: 0.6692  loss_cls: 0.3875  loss_box_reg: 0.2719  time: 0.9725  data_time: 0.3208  lr: 0.0011588  max_mem: 5159M
[03/14 09:01:59] d2.utils.events INFO:  eta: 0:27:28  iter: 599  total_loss: 0.6466  loss_cls: 0.3823  loss_box_reg: 0.2569  time: 0.9731  data_time: 0.3195  lr: 0.0011988  max_mem: 5159M
[03/14 09:02:18] d2.utils.events INFO:  eta: 0:27:08  iter: 619  total_loss: 0.6008  loss_cls: 0.3607  loss_box_reg: 0.2381  time: 0.9723  data_time: 0.3169  lr: 0.0012388  max_mem: 5159M
[03/14 09:02:37] d2.utils.events INFO:  eta: 0:26:47  iter: 639  total_loss: 0.6657  loss_cls: 0.3883  loss_box_reg: 0.2786  time: 0.9717  data_time: 0.3152  lr: 0.0012787  max_mem: 5159M
[03/14 09:02:56] d2.utils.events INFO:  eta: 0:26:27  iter: 659  total_loss: 0.6354  loss_cls: 0.3808  loss_box_reg: 0.2594  time: 0.9710  data_time: 0.3164  lr: 0.0013187  max_mem: 5159M
[03/14 09:03:15] d2.utils.events INFO:  eta: 0:26:07  iter: 679  total_loss: 0.5721  loss_cls: 0.3465  loss_box_reg: 0.2492  time: 0.9708  data_time: 0.3189  lr: 0.0013586  max_mem: 5159M
[03/14 09:03:34] d2.utils.events INFO:  eta: 0:25:47  iter: 699  total_loss: 0.5448  loss_cls: 0.32  loss_box_reg: 0.2394  time: 0.9706  data_time: 0.3156  lr: 0.0013986  max_mem: 5159M
[03/14 09:03:53] d2.utils.events INFO:  eta: 0:25:26  iter: 719  total_loss: 0.6011  loss_cls: 0.3308  loss_box_reg: 0.2566  time: 0.9696  data_time: 0.3116  lr: 0.0014386  max_mem: 5159M
[03/14 09:04:13] d2.utils.events INFO:  eta: 0:25:06  iter: 739  total_loss: 0.5489  loss_cls: 0.3151  loss_box_reg: 0.2262  time: 0.9699  data_time: 0.3177  lr: 0.0014785  max_mem: 5159M
[03/14 09:04:16] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0000743.pth
[03/14 09:04:21] d2.data.datasets.coco INFO: Loaded 22 images in COCO format from /home/ps/DiskA/project/GZY1/detectron2/data/datasets/coco/annontations/test2022.json
[03/14 09:04:21] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[03/14 09:04:21] d2.data.common INFO: Serializing 22 elements to byte tensors and concatenating them all ...
[03/14 09:04:21] d2.data.common INFO: Serialized dataset takes 0.01 MiB
[03/14 09:04:21] d2.evaluation.evaluator INFO: Start inference on 22 batches
[03/14 09:04:21] d2.evaluation.evaluator INFO: Inference done 11/22. Dataloading: 0.0014 s/iter. Inference: 0.0478 s/iter. Eval: 0.0003 s/iter. Total: 0.0495 s/iter. ETA=0:00:00
[03/14 09:04:22] d2.evaluation.evaluator INFO: Total inference time: 0:00:00.949462 (0.055851 s / iter per device, on 1 devices)
[03/14 09:04:22] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.045252 s / iter per device, on 1 devices)
[03/14 09:04:22] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[03/14 09:04:22] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[03/14 09:04:22] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[03/14 09:04:22] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/14 09:04:22] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.00 seconds.
[03/14 09:04:22] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/14 09:04:22] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[03/14 09:04:22] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl  |
|:------:|:------:|:------:|:-----:|:------:|:-----:|
| 40.404 | 84.887 | 25.007 |  nan  | 40.404 |  nan  |
[03/14 09:04:22] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[03/14 09:04:22] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[03/14 09:04:22] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/14 09:04:22] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[03/14 09:04:22] d2.evaluation.testing INFO: copypaste: 40.4036,84.8870,25.0067,nan,40.4036,nan
[03/14 09:04:33] d2.utils.events INFO:  eta: 0:24:45  iter: 759  total_loss: 0.5298  loss_cls: 0.322  loss_box_reg: 0.2072  time: 0.9685  data_time: 0.3146  lr: 0.0015185  max_mem: 5159M
[03/14 09:04:52] d2.utils.events INFO:  eta: 0:24:25  iter: 779  total_loss: 0.5562  loss_cls: 0.3145  loss_box_reg: 0.2397  time: 0.9672  data_time: 0.3121  lr: 0.0015584  max_mem: 5159M
[03/14 09:05:11] d2.utils.events INFO:  eta: 0:24:05  iter: 799  total_loss: 0.5404  loss_cls: 0.3189  loss_box_reg: 0.2218  time: 0.9673  data_time: 0.3169  lr: 0.0015984  max_mem: 5159M
[03/14 09:05:30] d2.utils.events INFO:  eta: 0:23:45  iter: 819  total_loss: 0.5874  loss_cls: 0.3625  loss_box_reg: 0.2338  time: 0.9670  data_time: 0.3169  lr: 0.0016384  max_mem: 5159M
[03/14 09:05:49] d2.utils.events INFO:  eta: 0:23:25  iter: 839  total_loss: 0.6177  loss_cls: 0.362  loss_box_reg: 0.225  time: 0.9667  data_time: 0.3177  lr: 0.0016783  max_mem: 5159M
[03/14 09:06:08] d2.utils.events INFO:  eta: 0:23:05  iter: 859  total_loss: 0.5557  loss_cls: 0.3197  loss_box_reg: 0.2303  time: 0.9660  data_time: 0.3202  lr: 0.0017183  max_mem: 5159M
[03/14 09:06:28] d2.utils.events INFO:  eta: 0:22:44  iter: 879  total_loss: 0.5846  loss_cls: 0.3735  loss_box_reg: 0.2209  time: 0.9659  data_time: 0.3160  lr: 0.0017582  max_mem: 5159M
[03/14 09:06:47] d2.utils.events INFO:  eta: 0:22:25  iter: 899  total_loss: 0.6293  loss_cls: 0.4049  loss_box_reg: 0.2113  time: 0.9659  data_time: 0.3202  lr: 0.0017982  max_mem: 5159M
[03/14 09:07:06] d2.utils.events INFO:  eta: 0:22:04  iter: 919  total_loss: 0.5853  loss_cls: 0.3478  loss_box_reg: 0.2381  time: 0.9657  data_time: 0.3149  lr: 0.0018382  max_mem: 5159M
[03/14 09:07:16] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0000929.pth
[03/14 09:07:21] d2.data.datasets.coco INFO: Loaded 22 images in COCO format from /home/ps/DiskA/project/GZY1/detectron2/data/datasets/coco/annontations/test2022.json
[03/14 09:07:21] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[03/14 09:07:21] d2.data.common INFO: Serializing 22 elements to byte tensors and concatenating them all ...
[03/14 09:07:21] d2.data.common INFO: Serialized dataset takes 0.01 MiB
[03/14 09:07:21] d2.evaluation.evaluator INFO: Start inference on 22 batches
[03/14 09:07:22] d2.evaluation.evaluator INFO: Inference done 11/22. Dataloading: 0.0013 s/iter. Inference: 0.0366 s/iter. Eval: 0.0003 s/iter. Total: 0.0382 s/iter. ETA=0:00:00
[03/14 09:07:22] d2.evaluation.evaluator INFO: Total inference time: 0:00:00.860572 (0.050622 s / iter per device, on 1 devices)
[03/14 09:07:22] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.040293 s / iter per device, on 1 devices)
[03/14 09:07:22] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[03/14 09:07:22] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[03/14 09:07:22] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[03/14 09:07:22] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/14 09:07:22] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.00 seconds.
[03/14 09:07:22] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/14 09:07:23] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[03/14 09:07:23] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl  |
|:------:|:------:|:------:|:-----:|:------:|:-----:|
| 42.879 | 81.675 | 39.171 |  nan  | 42.879 |  nan  |
[03/14 09:07:23] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[03/14 09:07:23] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[03/14 09:07:23] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/14 09:07:23] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[03/14 09:07:23] d2.evaluation.testing INFO: copypaste: 42.8787,81.6750,39.1706,nan,42.8787,nan
[03/14 09:07:27] d2.utils.events INFO:  eta: 0:21:44  iter: 939  total_loss: 0.5078  loss_cls: 0.3057  loss_box_reg: 0.2049  time: 0.9651  data_time: 0.3148  lr: 0.0018781  max_mem: 5159M
[03/14 09:07:46] d2.utils.events INFO:  eta: 0:21:24  iter: 959  total_loss: 0.4661  loss_cls: 0.2737  loss_box_reg: 0.1989  time: 0.9647  data_time: 0.3160  lr: 0.0019181  max_mem: 5159M
[03/14 09:08:05] d2.utils.events INFO:  eta: 0:21:04  iter: 979  total_loss: 0.5152  loss_cls: 0.2948  loss_box_reg: 0.2179  time: 0.9647  data_time: 0.3159  lr: 0.001958  max_mem: 5159M
[03/14 09:08:24] d2.utils.events INFO:  eta: 0:20:44  iter: 999  total_loss: 0.4094  loss_cls: 0.2356  loss_box_reg: 0.1725  time: 0.9640  data_time: 0.3143  lr: 0.001998  max_mem: 5159M
[03/14 09:08:43] d2.utils.events INFO:  eta: 0:20:24  iter: 1019  total_loss: 0.4951  loss_cls: 0.2673  loss_box_reg: 0.21  time: 0.9639  data_time: 0.3173  lr: 0.002  max_mem: 5159M
[03/14 09:09:02] d2.utils.events INFO:  eta: 0:20:04  iter: 1039  total_loss: 0.412  loss_cls: 0.2395  loss_box_reg: 0.1691  time: 0.9635  data_time: 0.3154  lr: 0.002  max_mem: 5159M
[03/14 09:09:21] d2.utils.events INFO:  eta: 0:19:43  iter: 1059  total_loss: 0.4456  loss_cls: 0.2662  loss_box_reg: 0.1848  time: 0.9636  data_time: 0.3226  lr: 0.002  max_mem: 5159M
[03/14 09:09:40] d2.utils.events INFO:  eta: 0:19:23  iter: 1079  total_loss: 0.4916  loss_cls: 0.3098  loss_box_reg: 0.1872  time: 0.9631  data_time: 0.3146  lr: 0.002  max_mem: 5159M
[03/14 09:09:59] d2.utils.events INFO:  eta: 0:19:03  iter: 1099  total_loss: 0.506  loss_cls: 0.2997  loss_box_reg: 0.2031  time: 0.9628  data_time: 0.3128  lr: 0.002  max_mem: 5159M
[03/14 09:10:14] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0001115.pth
[03/14 09:10:18] d2.utils.events INFO:  eta: 0:18:42  iter: 1119  total_loss: 0.4731  loss_cls: 0.2541  loss_box_reg: 0.2035  time: 0.9623  data_time: 0.3198  lr: 0.002  max_mem: 5159M
[03/14 09:10:20] d2.data.datasets.coco INFO: Loaded 22 images in COCO format from /home/ps/DiskA/project/GZY1/detectron2/data/datasets/coco/annontations/test2022.json
[03/14 09:10:20] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[03/14 09:10:20] d2.data.common INFO: Serializing 22 elements to byte tensors and concatenating them all ...
[03/14 09:10:20] d2.data.common INFO: Serialized dataset takes 0.01 MiB
[03/14 09:10:20] d2.evaluation.evaluator INFO: Start inference on 22 batches
[03/14 09:10:21] d2.evaluation.evaluator INFO: Inference done 11/22. Dataloading: 0.0018 s/iter. Inference: 0.0455 s/iter. Eval: 0.0003 s/iter. Total: 0.0476 s/iter. ETA=0:00:00
[03/14 09:10:22] d2.evaluation.evaluator INFO: Total inference time: 0:00:00.925397 (0.054435 s / iter per device, on 1 devices)
[03/14 09:10:22] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.043159 s / iter per device, on 1 devices)
[03/14 09:10:22] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[03/14 09:10:22] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[03/14 09:10:22] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[03/14 09:10:22] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/14 09:10:22] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.00 seconds.
[03/14 09:10:22] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/14 09:10:22] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[03/14 09:10:22] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl  |
|:------:|:------:|:------:|:-----:|:------:|:-----:|
| 52.594 | 82.412 | 65.050 |  nan  | 52.594 |  nan  |
[03/14 09:10:22] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[03/14 09:10:22] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[03/14 09:10:22] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/14 09:10:22] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[03/14 09:10:22] d2.evaluation.testing INFO: copypaste: 52.5939,82.4115,65.0498,nan,52.5939,nan
[03/14 09:10:39] d2.utils.events INFO:  eta: 0:18:22  iter: 1139  total_loss: 0.4502  loss_cls: 0.2576  loss_box_reg: 0.1769  time: 0.9618  data_time: 0.3132  lr: 0.002  max_mem: 5159M
[03/14 09:10:58] d2.utils.events INFO:  eta: 0:18:02  iter: 1159  total_loss: 0.4123  loss_cls: 0.2252  loss_box_reg: 0.168  time: 0.9619  data_time: 0.3158  lr: 0.002  max_mem: 5159M
[03/14 09:11:17] d2.utils.events INFO:  eta: 0:17:42  iter: 1179  total_loss: 0.434  loss_cls: 0.2357  loss_box_reg: 0.1913  time: 0.9618  data_time: 0.3189  lr: 0.002  max_mem: 5159M
[03/14 09:11:36] d2.utils.events INFO:  eta: 0:17:22  iter: 1199  total_loss: 0.3974  loss_cls: 0.2186  loss_box_reg: 0.1738  time: 0.9613  data_time: 0.3162  lr: 0.002  max_mem: 5159M
[03/14 09:11:55] d2.utils.events INFO:  eta: 0:17:02  iter: 1219  total_loss: 0.3776  loss_cls: 0.2073  loss_box_reg: 0.1785  time: 0.9613  data_time: 0.3187  lr: 0.002  max_mem: 5159M
[03/14 09:12:15] d2.utils.events INFO:  eta: 0:16:42  iter: 1239  total_loss: 0.3746  loss_cls: 0.1954  loss_box_reg: 0.167  time: 0.9617  data_time: 0.3177  lr: 0.002  max_mem: 5159M
[03/14 09:12:34] d2.utils.events INFO:  eta: 0:16:22  iter: 1259  total_loss: 0.3486  loss_cls: 0.1922  loss_box_reg: 0.1564  time: 0.9618  data_time: 0.3148  lr: 0.002  max_mem: 5159M
[03/14 09:12:53] d2.utils.events INFO:  eta: 0:16:02  iter: 1279  total_loss: 0.3832  loss_cls: 0.2245  loss_box_reg: 0.1584  time: 0.9614  data_time: 0.3131  lr: 0.002  max_mem: 5159M
[03/14 09:13:12] d2.utils.events INFO:  eta: 0:15:42  iter: 1299  total_loss: 0.3412  loss_cls: 0.1894  loss_box_reg: 0.1589  time: 0.9610  data_time: 0.3105  lr: 0.002  max_mem: 5159M
[03/14 09:13:14] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0001301.pth
[03/14 09:13:21] d2.data.datasets.coco INFO: Loaded 22 images in COCO format from /home/ps/DiskA/project/GZY1/detectron2/data/datasets/coco/annontations/test2022.json
[03/14 09:13:21] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[03/14 09:13:21] d2.data.common INFO: Serializing 22 elements to byte tensors and concatenating them all ...
[03/14 09:13:21] d2.data.common INFO: Serialized dataset takes 0.01 MiB
[03/14 09:13:21] d2.evaluation.evaluator INFO: Start inference on 22 batches
[03/14 09:13:22] d2.evaluation.evaluator INFO: Inference done 11/22. Dataloading: 0.0014 s/iter. Inference: 0.0556 s/iter. Eval: 0.0002 s/iter. Total: 0.0573 s/iter. ETA=0:00:00
[03/14 09:13:22] d2.evaluation.evaluator INFO: Total inference time: 0:00:01.060125 (0.062360 s / iter per device, on 1 devices)
[03/14 09:13:22] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.051101 s / iter per device, on 1 devices)
[03/14 09:13:22] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[03/14 09:13:22] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[03/14 09:13:22] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[03/14 09:13:22] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/14 09:13:22] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.00 seconds.
[03/14 09:13:22] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/14 09:13:22] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[03/14 09:13:22] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl  |
|:------:|:------:|:------:|:-----:|:------:|:-----:|
| 54.895 | 87.410 | 68.741 |  nan  | 54.895 |  nan  |
[03/14 09:13:22] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[03/14 09:13:22] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[03/14 09:13:22] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/14 09:13:22] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[03/14 09:13:22] d2.evaluation.testing INFO: copypaste: 54.8948,87.4105,68.7409,nan,54.8948,nan
[03/14 09:13:33] d2.utils.events INFO:  eta: 0:15:21  iter: 1319  total_loss: 0.382  loss_cls: 0.2123  loss_box_reg: 0.1604  time: 0.9609  data_time: 0.3104  lr: 0.002  max_mem: 5159M
[03/14 09:13:52] d2.utils.events INFO:  eta: 0:15:01  iter: 1339  total_loss: 0.4007  loss_cls: 0.244  loss_box_reg: 0.158  time: 0.9605  data_time: 0.3122  lr: 0.002  max_mem: 5159M
[03/14 09:14:11] d2.utils.events INFO:  eta: 0:14:41  iter: 1359  total_loss: 0.4003  loss_cls: 0.233  loss_box_reg: 0.161  time: 0.9601  data_time: 0.3109  lr: 0.002  max_mem: 5159M
[03/14 09:14:30] d2.utils.events INFO:  eta: 0:14:21  iter: 1379  total_loss: 0.3628  loss_cls: 0.2074  loss_box_reg: 0.1509  time: 0.9599  data_time: 0.3191  lr: 0.002  max_mem: 5159M
[03/14 09:14:48] d2.utils.events INFO:  eta: 0:14:01  iter: 1399  total_loss: 0.3303  loss_cls: 0.1906  loss_box_reg: 0.1324  time: 0.9597  data_time: 0.3074  lr: 0.002  max_mem: 5159M
[03/14 09:15:07] d2.utils.events INFO:  eta: 0:13:41  iter: 1419  total_loss: 0.3784  loss_cls: 0.2384  loss_box_reg: 0.1455  time: 0.9595  data_time: 0.3151  lr: 0.002  max_mem: 5159M
[03/14 09:15:26] d2.utils.events INFO:  eta: 0:13:21  iter: 1439  total_loss: 0.3069  loss_cls: 0.1797  loss_box_reg: 0.1285  time: 0.9590  data_time: 0.3152  lr: 0.002  max_mem: 5159M
[03/14 09:15:45] d2.utils.events INFO:  eta: 0:13:01  iter: 1459  total_loss: 0.2731  loss_cls: 0.156  loss_box_reg: 0.1266  time: 0.9592  data_time: 0.3178  lr: 0.002  max_mem: 5159M
[03/14 09:16:05] d2.utils.events INFO:  eta: 0:12:41  iter: 1479  total_loss: 0.3121  loss_cls: 0.1791  loss_box_reg: 0.1363  time: 0.9593  data_time: 0.3173  lr: 0.002  max_mem: 5159M
[03/14 09:16:12] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0001487.pth
[03/14 09:16:20] d2.data.datasets.coco INFO: Loaded 22 images in COCO format from /home/ps/DiskA/project/GZY1/detectron2/data/datasets/coco/annontations/test2022.json
[03/14 09:16:20] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[03/14 09:16:20] d2.data.common INFO: Serializing 22 elements to byte tensors and concatenating them all ...
[03/14 09:16:20] d2.data.common INFO: Serialized dataset takes 0.01 MiB
[03/14 09:16:20] d2.evaluation.evaluator INFO: Start inference on 22 batches
[03/14 09:16:21] d2.evaluation.evaluator INFO: Inference done 11/22. Dataloading: 0.0016 s/iter. Inference: 0.0678 s/iter. Eval: 0.0002 s/iter. Total: 0.0696 s/iter. ETA=0:00:00
[03/14 09:16:22] d2.evaluation.evaluator INFO: Total inference time: 0:00:00.847942 (0.049879 s / iter per device, on 1 devices)
[03/14 09:16:22] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.039177 s / iter per device, on 1 devices)
[03/14 09:16:22] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[03/14 09:16:22] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[03/14 09:16:22] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[03/14 09:16:22] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/14 09:16:22] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.00 seconds.
[03/14 09:16:22] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/14 09:16:22] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[03/14 09:16:22] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl  |
|:------:|:------:|:------:|:-----:|:------:|:-----:|
| 53.273 | 82.770 | 57.836 |  nan  | 53.273 |  nan  |
[03/14 09:16:22] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[03/14 09:16:22] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[03/14 09:16:22] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/14 09:16:22] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[03/14 09:16:22] d2.evaluation.testing INFO: copypaste: 53.2728,82.7702,57.8361,nan,53.2728,nan
[03/14 09:16:26] d2.utils.events INFO:  eta: 0:12:21  iter: 1499  total_loss: 0.3148  loss_cls: 0.182  loss_box_reg: 0.1399  time: 0.9591  data_time: 0.3126  lr: 0.002  max_mem: 5159M
[03/14 09:16:44] d2.utils.events INFO:  eta: 0:12:01  iter: 1519  total_loss: 0.2926  loss_cls: 0.1704  loss_box_reg: 0.1234  time: 0.9588  data_time: 0.3120  lr: 0.002  max_mem: 5159M
[03/14 09:17:04] d2.utils.events INFO:  eta: 0:11:41  iter: 1539  total_loss: 0.3222  loss_cls: 0.1796  loss_box_reg: 0.1396  time: 0.9590  data_time: 0.3118  lr: 0.002  max_mem: 5159M
[03/14 09:17:23] d2.utils.events INFO:  eta: 0:11:21  iter: 1559  total_loss: 0.3188  loss_cls: 0.1738  loss_box_reg: 0.1454  time: 0.9587  data_time: 0.3182  lr: 0.002  max_mem: 5159M
[03/14 09:17:42] d2.utils.events INFO:  eta: 0:11:01  iter: 1579  total_loss: 0.3021  loss_cls: 0.1702  loss_box_reg: 0.1281  time: 0.9588  data_time: 0.3098  lr: 0.002  max_mem: 5159M
[03/14 09:18:01] d2.utils.events INFO:  eta: 0:10:41  iter: 1599  total_loss: 0.3044  loss_cls: 0.1601  loss_box_reg: 0.1366  time: 0.9585  data_time: 0.3139  lr: 0.002  max_mem: 5159M
[03/14 09:18:20] d2.utils.events INFO:  eta: 0:10:21  iter: 1619  total_loss: 0.2836  loss_cls: 0.1607  loss_box_reg: 0.1277  time: 0.9583  data_time: 0.3175  lr: 0.002  max_mem: 5159M
[03/14 09:18:38] d2.utils.events INFO:  eta: 0:10:01  iter: 1639  total_loss: 0.3004  loss_cls: 0.1572  loss_box_reg: 0.1339  time: 0.9579  data_time: 0.3144  lr: 0.002  max_mem: 5159M
[03/14 09:18:57] d2.utils.events INFO:  eta: 0:09:41  iter: 1659  total_loss: 0.2636  loss_cls: 0.1379  loss_box_reg: 0.1183  time: 0.9580  data_time: 0.3166  lr: 0.002  max_mem: 5159M
[03/14 09:19:11] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0001673.pth
[03/14 09:19:17] d2.utils.events INFO:  eta: 0:09:21  iter: 1679  total_loss: 0.3224  loss_cls: 0.1662  loss_box_reg: 0.1526  time: 0.9579  data_time: 0.3218  lr: 0.002  max_mem: 5159M
[03/14 09:19:20] d2.data.datasets.coco INFO: Loaded 22 images in COCO format from /home/ps/DiskA/project/GZY1/detectron2/data/datasets/coco/annontations/test2022.json
[03/14 09:19:20] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[03/14 09:19:20] d2.data.common INFO: Serializing 22 elements to byte tensors and concatenating them all ...
[03/14 09:19:20] d2.data.common INFO: Serialized dataset takes 0.01 MiB
[03/14 09:19:20] d2.evaluation.evaluator INFO: Start inference on 22 batches
[03/14 09:19:21] d2.evaluation.evaluator INFO: Inference done 11/22. Dataloading: 0.0017 s/iter. Inference: 0.0605 s/iter. Eval: 0.0002 s/iter. Total: 0.0624 s/iter. ETA=0:00:00
[03/14 09:19:21] d2.evaluation.evaluator INFO: Total inference time: 0:00:00.813939 (0.047879 s / iter per device, on 1 devices)
[03/14 09:19:21] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.037129 s / iter per device, on 1 devices)
[03/14 09:19:21] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[03/14 09:19:21] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[03/14 09:19:21] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[03/14 09:19:21] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/14 09:19:21] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.00 seconds.
[03/14 09:19:21] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/14 09:19:21] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[03/14 09:19:21] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl  |
|:------:|:------:|:------:|:-----:|:------:|:-----:|
| 55.627 | 86.262 | 71.164 |  nan  | 55.667 |  nan  |
[03/14 09:19:21] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[03/14 09:19:21] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[03/14 09:19:21] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/14 09:19:21] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[03/14 09:19:21] d2.evaluation.testing INFO: copypaste: 55.6269,86.2615,71.1639,nan,55.6668,nan
[03/14 09:19:38] d2.utils.events INFO:  eta: 0:09:01  iter: 1699  total_loss: 0.2715  loss_cls: 0.149  loss_box_reg: 0.1183  time: 0.9579  data_time: 0.3145  lr: 0.002  max_mem: 5159M
[03/14 09:19:57] d2.utils.events INFO:  eta: 0:08:41  iter: 1719  total_loss: 0.2355  loss_cls: 0.1403  loss_box_reg: 0.1009  time: 0.9582  data_time: 0.3175  lr: 0.002  max_mem: 5159M
[03/14 09:20:16] d2.utils.events INFO:  eta: 0:08:21  iter: 1739  total_loss: 0.3613  loss_cls: 0.196  loss_box_reg: 0.1588  time: 0.9580  data_time: 0.3151  lr: 0.002  max_mem: 5159M
[03/14 09:20:36] d2.utils.events INFO:  eta: 0:08:01  iter: 1759  total_loss: 0.2702  loss_cls: 0.1511  loss_box_reg: 0.1218  time: 0.9581  data_time: 0.3185  lr: 0.002  max_mem: 5159M
[03/14 09:20:55] d2.utils.events INFO:  eta: 0:07:41  iter: 1779  total_loss: 0.3185  loss_cls: 0.1752  loss_box_reg: 0.1427  time: 0.9581  data_time: 0.3164  lr: 0.002  max_mem: 5159M
[03/14 09:21:14] d2.utils.events INFO:  eta: 0:07:21  iter: 1799  total_loss: 0.2623  loss_cls: 0.1355  loss_box_reg: 0.1234  time: 0.9580  data_time: 0.3159  lr: 0.002  max_mem: 5159M
[03/14 09:21:33] d2.utils.events INFO:  eta: 0:07:01  iter: 1819  total_loss: 0.2431  loss_cls: 0.1411  loss_box_reg: 0.1027  time: 0.9581  data_time: 0.3180  lr: 0.002  max_mem: 5159M
[03/14 09:21:52] d2.utils.events INFO:  eta: 0:06:42  iter: 1839  total_loss: 0.2438  loss_cls: 0.136  loss_box_reg: 0.1084  time: 0.9578  data_time: 0.3128  lr: 0.002  max_mem: 5159M
[03/14 09:22:11] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0001859.pth
[03/14 09:22:11] d2.utils.events INFO:  eta: 0:06:22  iter: 1859  total_loss: 0.2555  loss_cls: 0.1468  loss_box_reg: 0.1183  time: 0.9577  data_time: 0.3164  lr: 0.002  max_mem: 5159M
[03/14 09:22:21] d2.data.datasets.coco INFO: Loaded 22 images in COCO format from /home/ps/DiskA/project/GZY1/detectron2/data/datasets/coco/annontations/test2022.json
[03/14 09:22:21] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[03/14 09:22:21] d2.data.common INFO: Serializing 22 elements to byte tensors and concatenating them all ...
[03/14 09:22:21] d2.data.common INFO: Serialized dataset takes 0.01 MiB
[03/14 09:22:21] d2.evaluation.evaluator INFO: Start inference on 22 batches
[03/14 09:22:22] d2.evaluation.evaluator INFO: Inference done 11/22. Dataloading: 0.0016 s/iter. Inference: 0.0665 s/iter. Eval: 0.0002 s/iter. Total: 0.0683 s/iter. ETA=0:00:00
[03/14 09:22:22] d2.evaluation.evaluator INFO: Total inference time: 0:00:00.845673 (0.049745 s / iter per device, on 1 devices)
[03/14 09:22:22] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.039081 s / iter per device, on 1 devices)
[03/14 09:22:22] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[03/14 09:22:22] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[03/14 09:22:22] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[03/14 09:22:22] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/14 09:22:22] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.00 seconds.
[03/14 09:22:22] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/14 09:22:22] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[03/14 09:22:22] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl  |
|:------:|:------:|:------:|:-----:|:------:|:-----:|
| 57.598 | 84.397 | 70.633 |  nan  | 57.741 |  nan  |
[03/14 09:22:22] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[03/14 09:22:22] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[03/14 09:22:22] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/14 09:22:22] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[03/14 09:22:22] d2.evaluation.testing INFO: copypaste: 57.5976,84.3967,70.6327,nan,57.7412,nan
[03/14 09:22:32] d2.utils.events INFO:  eta: 0:06:02  iter: 1879  total_loss: 0.27  loss_cls: 0.1569  loss_box_reg: 0.1111  time: 0.9575  data_time: 0.3187  lr: 0.002  max_mem: 5159M
[03/14 09:22:50] d2.utils.events INFO:  eta: 0:05:42  iter: 1899  total_loss: 0.2393  loss_cls: 0.1297  loss_box_reg: 0.1092  time: 0.9573  data_time: 0.3153  lr: 0.002  max_mem: 5159M
[03/14 09:23:10] d2.utils.events INFO:  eta: 0:05:22  iter: 1919  total_loss: 0.2635  loss_cls: 0.1496  loss_box_reg: 0.1167  time: 0.9574  data_time: 0.3127  lr: 0.002  max_mem: 5159M
[03/14 09:23:29] d2.utils.events INFO:  eta: 0:05:02  iter: 1939  total_loss: 0.2298  loss_cls: 0.1284  loss_box_reg: 0.1011  time: 0.9572  data_time: 0.3132  lr: 0.002  max_mem: 5159M
[03/14 09:23:48] d2.utils.events INFO:  eta: 0:04:42  iter: 1959  total_loss: 0.1981  loss_cls: 0.1105  loss_box_reg: 0.09137  time: 0.9573  data_time: 0.3132  lr: 0.002  max_mem: 5159M
[03/14 09:24:07] d2.utils.events INFO:  eta: 0:04:22  iter: 1979  total_loss: 0.256  loss_cls: 0.139  loss_box_reg: 0.1184  time: 0.9573  data_time: 0.3158  lr: 0.002  max_mem: 5159M
[03/14 09:24:26] d2.utils.events INFO:  eta: 0:04:02  iter: 1999  total_loss: 0.2242  loss_cls: 0.126  loss_box_reg: 0.102  time: 0.9572  data_time: 0.3128  lr: 0.002  max_mem: 5159M
[03/14 09:24:45] d2.utils.events INFO:  eta: 0:03:42  iter: 2019  total_loss: 0.2655  loss_cls: 0.1454  loss_box_reg: 0.119  time: 0.9573  data_time: 0.3173  lr: 0.002  max_mem: 5159M
[03/14 09:25:05] d2.utils.events INFO:  eta: 0:03:22  iter: 2039  total_loss: 0.2332  loss_cls: 0.1142  loss_box_reg: 0.114  time: 0.9573  data_time: 0.3157  lr: 0.002  max_mem: 5159M
[03/14 09:25:10] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0002045.pth
[03/14 09:25:21] d2.data.datasets.coco INFO: Loaded 22 images in COCO format from /home/ps/DiskA/project/GZY1/detectron2/data/datasets/coco/annontations/test2022.json
[03/14 09:25:21] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[03/14 09:25:21] d2.data.common INFO: Serializing 22 elements to byte tensors and concatenating them all ...
[03/14 09:25:21] d2.data.common INFO: Serialized dataset takes 0.01 MiB
[03/14 09:25:21] d2.evaluation.evaluator INFO: Start inference on 22 batches
[03/14 09:25:22] d2.evaluation.evaluator INFO: Inference done 11/22. Dataloading: 0.0013 s/iter. Inference: 0.0243 s/iter. Eval: 0.0002 s/iter. Total: 0.0258 s/iter. ETA=0:00:00
[03/14 09:25:23] d2.evaluation.evaluator INFO: Total inference time: 0:00:00.825018 (0.048530 s / iter per device, on 1 devices)
[03/14 09:25:23] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.037947 s / iter per device, on 1 devices)
[03/14 09:25:23] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[03/14 09:25:23] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[03/14 09:25:23] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[03/14 09:25:23] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/14 09:25:23] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.00 seconds.
[03/14 09:25:23] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/14 09:25:23] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[03/14 09:25:23] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl  |
|:------:|:------:|:------:|:-----:|:------:|:-----:|
| 47.446 | 71.566 | 66.834 |  nan  | 47.660 |  nan  |
[03/14 09:25:23] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[03/14 09:25:23] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[03/14 09:25:23] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/14 09:25:23] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[03/14 09:25:23] d2.evaluation.testing INFO: copypaste: 47.4457,71.5656,66.8340,nan,47.6595,nan
[03/14 09:25:26] d2.utils.events INFO:  eta: 0:03:02  iter: 2059  total_loss: 0.2115  loss_cls: 0.1102  loss_box_reg: 0.09675  time: 0.9572  data_time: 0.3123  lr: 0.002  max_mem: 5159M
[03/14 09:25:45] d2.utils.events INFO:  eta: 0:02:42  iter: 2079  total_loss: 0.2244  loss_cls: 0.1211  loss_box_reg: 0.1005  time: 0.9571  data_time: 0.3117  lr: 0.002  max_mem: 5159M
[03/14 09:26:03] d2.utils.events INFO:  eta: 0:02:22  iter: 2099  total_loss: 0.2323  loss_cls: 0.1273  loss_box_reg: 0.105  time: 0.9569  data_time: 0.3087  lr: 0.002  max_mem: 5159M
[03/14 09:26:22] d2.utils.events INFO:  eta: 0:02:02  iter: 2119  total_loss: 0.2126  loss_cls: 0.118  loss_box_reg: 0.1097  time: 0.9567  data_time: 0.3167  lr: 0.002  max_mem: 5159M
[03/14 09:26:41] d2.utils.events INFO:  eta: 0:01:42  iter: 2139  total_loss: 0.2499  loss_cls: 0.1347  loss_box_reg: 0.104  time: 0.9566  data_time: 0.3117  lr: 0.002  max_mem: 5159M
[03/14 09:27:00] d2.utils.events INFO:  eta: 0:01:22  iter: 2159  total_loss: 0.2264  loss_cls: 0.1208  loss_box_reg: 0.1062  time: 0.9567  data_time: 0.3254  lr: 0.002  max_mem: 5159M
[03/14 09:27:20] d2.utils.events INFO:  eta: 0:01:02  iter: 2179  total_loss: 0.1902  loss_cls: 0.09892  loss_box_reg: 0.09125  time: 0.9568  data_time: 0.3111  lr: 0.002  max_mem: 5159M
[03/14 09:27:39] d2.utils.events INFO:  eta: 0:00:42  iter: 2199  total_loss: 0.2348  loss_cls: 0.1227  loss_box_reg: 0.1128  time: 0.9568  data_time: 0.3137  lr: 0.002  max_mem: 5159M
[03/14 09:27:58] d2.utils.events INFO:  eta: 0:00:22  iter: 2219  total_loss: 0.2077  loss_cls: 0.1119  loss_box_reg: 0.09497  time: 0.9567  data_time: 0.3136  lr: 0.002  max_mem: 5159M
[03/14 09:28:09] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0002231.pth
[03/14 09:28:19] d2.utils.events INFO:  eta: 0:00:02  iter: 2239  total_loss: 0.218  loss_cls: 0.1179  loss_box_reg: 0.09229  time: 0.9574  data_time: 0.3134  lr: 0.002  max_mem: 5159M
[03/14 09:28:22] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_final.pth
[03/14 09:28:22] d2.utils.events INFO:  eta: 0:00:00  iter: 2242  total_loss: 0.2186  loss_cls: 0.1179  loss_box_reg: 0.09298  time: 0.9573  data_time: 0.3130  lr: 0.002  max_mem: 5159M
[03/14 09:28:22] d2.engine.hooks INFO: Overall training speed: 2241 iterations in 0:35:45 (0.9573 s / it)
[03/14 09:28:22] d2.engine.hooks INFO: Total training time: 0:36:13 (0:00:28 on hooks)
[03/14 09:28:22] d2.data.datasets.coco INFO: Loaded 22 images in COCO format from /home/ps/DiskA/project/GZY1/detectron2/data/datasets/coco/annontations/test2022.json
[03/14 09:28:22] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[03/14 09:28:22] d2.data.common INFO: Serializing 22 elements to byte tensors and concatenating them all ...
[03/14 09:28:22] d2.data.common INFO: Serialized dataset takes 0.01 MiB
[03/14 09:28:22] d2.evaluation.evaluator INFO: Start inference on 22 batches
[03/14 09:28:23] d2.evaluation.evaluator INFO: Inference done 11/22. Dataloading: 0.0014 s/iter. Inference: 0.0533 s/iter. Eval: 0.0002 s/iter. Total: 0.0549 s/iter. ETA=0:00:00
[03/14 09:28:24] d2.evaluation.evaluator INFO: Total inference time: 0:00:01.039206 (0.061130 s / iter per device, on 1 devices)
[03/14 09:28:24] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:00 (0.050073 s / iter per device, on 1 devices)
[03/14 09:28:24] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[03/14 09:28:24] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[03/14 09:28:24] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[03/14 09:28:24] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[03/14 09:28:24] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.00 seconds.
[03/14 09:28:24] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[03/14 09:28:24] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[03/14 09:28:24] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl  |
|:------:|:------:|:------:|:-----:|:------:|:-----:|
| 53.831 | 79.658 | 70.489 |  nan  | 53.831 |  nan  |
[03/14 09:28:24] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[03/14 09:28:24] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[03/14 09:28:24] d2.evaluation.testing INFO: copypaste: Task: bbox
[03/14 09:28:24] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[03/14 09:28:24] d2.evaluation.testing INFO: copypaste: 53.8309,79.6580,70.4895,nan,53.8309,nan
[03/15 10:48:00] detectron2 INFO: Rank of current process: 0. World size: 1
[03/15 10:48:01] detectron2 INFO: Environment info:
----------------------  ------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.12 (default, Oct 12 2021, 13:49:34) [GCC 7.5.0]
numpy                   1.21.2
detectron2              0.6 @/home/ps/DiskA/project/GZY1/detectron2
Compiler                GCC 9.3
CUDA compiler           CUDA 11.2
detectron2 arch flags   8.6
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.2 @/home/ps/SmartBuilding/miniconda/envs/GZY1/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0,1,2,3             NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          470.82.00
CUDA_HOME               /usr/local/cuda
Pillow                  9.0.1
torchvision             0.11.3 @/home/ps/SmartBuilding/miniconda/envs/GZY1/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5
iopath                  0.1.9
cv2                     4.5.5
----------------------  ------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/15 10:48:01] detectron2 INFO: Command line arguments: Namespace(config_file='', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/15 10:48:01] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 1
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - coco_val
  TRAIN:
  - coco_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: true
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 640
  MAX_SIZE_TRAIN: 640
  MIN_SIZE_TEST: 640
  MIN_SIZE_TRAIN:
  - 512
  - 768
  MIN_SIZE_TRAIN_SAMPLING: range
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 40.31747359663594
      - 50.79683366298238
    - - 64
      - 80.63494719327188
      - 101.59366732596476
    - - 128
      - 161.26989438654377
      - 203.18733465192952
    - - 256
      - 322.53978877308754
      - 406.37466930385904
    - - 512
      - 645.0795775461751
      - 812.7493386077181
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_retinanet_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES:
    - res3
    - res4
    - res5
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: RetinaNet
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 8
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.4
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.6
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: /home/ps/DiskA/project/GZY1/Distill_GID_detectron2/RetinaNet_Res50/R-50.pkl
OUTPUT_DIR: output_2x_smooth_l1
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.002
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 249
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 2999
  MOMENTUM: 0.9
  NESTEROV: false
  REFERENCE_WORLD_SIZE: 0
  STEPS:
  - 7000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 250
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[03/15 10:48:01] detectron2 INFO: Full config saved to output_2x_smooth_l1/config.yaml
[03/15 10:48:01] d2.utils.env INFO: Using a generated random seed 3694233
[03/15 10:48:05] d2.engine.defaults INFO: Model:
RetinaNet(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(2048, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (head): RetinaNetHead(
    (cls_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (bbox_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (cls_score): Conv2d(256, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bbox_pred): Conv2d(256, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (anchor_generator): DefaultAnchorGenerator(
    (cell_anchors): BufferList()
  )
)
[03/15 10:48:05] d2.data.datasets.coco INFO: Loaded 495 images in COCO format from /home/ps/DiskA/project/GZY1/detectron2/data/datasets/coco/annontations/train2022.json
[03/15 10:48:05] d2.data.build INFO: Removed 0 images with no usable annotations. 495 images left.
[03/15 10:48:05] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [RandomCrop(crop_type='relative_range', crop_size=[0.9, 0.9]), ResizeShortestEdge(short_edge_length=(512, 768), max_size=640), RandomFlip()]
[03/15 10:48:05] d2.data.build INFO: Using training sampler TrainingSampler
[03/15 10:48:05] d2.data.common INFO: Serializing 495 elements to byte tensors and concatenating them all ...
[03/15 10:48:05] d2.data.common INFO: Serialized dataset takes 0.21 MiB
[03/15 10:48:05] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[03/15 10:48:05] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/ps/DiskA/project/GZY1/Distill_GID_detectron2/RetinaNet_Res50/R-50.pkl ...
[03/15 10:48:05] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[03/15 10:48:05] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[03/15 10:48:06] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.fpn_lateral3.{bias, weight}[0m
[34mbackbone.fpn_lateral4.{bias, weight}[0m
[34mbackbone.fpn_lateral5.{bias, weight}[0m
[34mbackbone.fpn_output3.{bias, weight}[0m
[34mbackbone.fpn_output4.{bias, weight}[0m
[34mbackbone.fpn_output5.{bias, weight}[0m
[34mbackbone.top_block.p6.{bias, weight}[0m
[34mbackbone.top_block.p7.{bias, weight}[0m
[34mhead.bbox_pred.{bias, weight}[0m
[34mhead.bbox_subnet.0.{bias, weight}[0m
[34mhead.bbox_subnet.2.{bias, weight}[0m
[34mhead.bbox_subnet.4.{bias, weight}[0m
[34mhead.bbox_subnet.6.{bias, weight}[0m
[34mhead.cls_score.{bias, weight}[0m
[34mhead.cls_subnet.0.{bias, weight}[0m
[34mhead.cls_subnet.2.{bias, weight}[0m
[34mhead.cls_subnet.4.{bias, weight}[0m
[34mhead.cls_subnet.6.{bias, weight}[0m
[03/15 10:48:06] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.bias[0m
[03/15 10:48:06] d2.engine.train_loop INFO: Starting training from iteration 0
[03/15 10:48:26] d2.utils.events INFO:  eta: 0:50:44  iter: 19  total_loss: 2.286  loss_cls: 1.611  loss_box_reg: 0.676  time: 1.0184  data_time: 0.3037  lr: 3.9962e-05  max_mem: 5158M
[03/15 10:48:41] d2.utils.events INFO:  eta: 0:47:03  iter: 39  total_loss: 1.69  loss_cls: 1.168  loss_box_reg: 0.5122  time: 0.8552  data_time: 0.2949  lr: 7.9922e-05  max_mem: 5158M
[03/15 10:48:54] d2.utils.events INFO:  eta: 0:32:29  iter: 59  total_loss: 1.438  loss_cls: 1.007  loss_box_reg: 0.4329  time: 0.7865  data_time: 0.2965  lr: 0.00011988  max_mem: 5158M
[03/15 10:49:07] d2.utils.events INFO:  eta: 0:32:01  iter: 79  total_loss: 1.516  loss_cls: 1.067  loss_box_reg: 0.4486  time: 0.7525  data_time: 0.2943  lr: 0.00015984  max_mem: 5158M
[03/15 10:49:20] d2.utils.events INFO:  eta: 0:31:46  iter: 99  total_loss: 1.618  loss_cls: 1.145  loss_box_reg: 0.4796  time: 0.7329  data_time: 0.2971  lr: 0.0001998  max_mem: 5158M
[03/15 10:49:33] d2.engine.hooks INFO: Overall training speed: 117 iterations in 0:01:24 (0.7264 s / it)
[03/15 10:49:33] d2.engine.hooks INFO: Total training time: 0:01:25 (0:00:00 on hooks)
[03/15 10:49:33] d2.utils.events INFO:  eta: 0:31:33  iter: 119  total_loss: 1.439  loss_cls: 1.007  loss_box_reg: 0.4324  time: 0.7220  data_time: 0.2991  lr: 0.00023776  max_mem: 5158M
[03/15 11:08:45] detectron2 INFO: Rank of current process: 0. World size: 1
[03/15 11:08:45] detectron2 INFO: Environment info:
----------------------  ------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.12 (default, Oct 12 2021, 13:49:34) [GCC 7.5.0]
numpy                   1.21.2
detectron2              0.6 @/home/ps/DiskA/project/GZY1/detectron2
Compiler                GCC 9.3
CUDA compiler           CUDA 11.2
detectron2 arch flags   8.6
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.2 @/home/ps/SmartBuilding/miniconda/envs/GZY1/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0,1,2,3             NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          470.82.00
CUDA_HOME               /usr/local/cuda
Pillow                  9.0.1
torchvision             0.11.3 @/home/ps/SmartBuilding/miniconda/envs/GZY1/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5
iopath                  0.1.9
cv2                     4.5.5
----------------------  ------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/15 11:08:45] detectron2 INFO: Command line arguments: Namespace(config_file='', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/15 11:08:45] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 1
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - coco_val
  TRAIN:
  - coco_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: true
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 640
  MAX_SIZE_TRAIN: 640
  MIN_SIZE_TEST: 640
  MIN_SIZE_TRAIN:
  - 512
  - 768
  MIN_SIZE_TRAIN_SAMPLING: range
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 40.31747359663594
      - 50.79683366298238
    - - 64
      - 80.63494719327188
      - 101.59366732596476
    - - 128
      - 161.26989438654377
      - 203.18733465192952
    - - 256
      - 322.53978877308754
      - 406.37466930385904
    - - 512
      - 645.0795775461751
      - 812.7493386077181
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_retinanet_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES:
    - res3
    - res4
    - res5
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: RetinaNet
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 8
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.4
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.6
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ''
OUTPUT_DIR: output_2x_smooth_l1
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.002
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 249
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 2999
  MOMENTUM: 0.9
  NESTEROV: false
  REFERENCE_WORLD_SIZE: 0
  STEPS:
  - 7000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 250
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[03/15 11:08:45] detectron2 INFO: Full config saved to output_2x_smooth_l1/config.yaml
[03/15 11:08:45] d2.utils.env INFO: Using a generated random seed 47873672
[03/15 11:08:51] d2.engine.defaults INFO: Model:
RetinaNet(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(2048, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (head): RetinaNetHead(
    (cls_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (bbox_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (cls_score): Conv2d(256, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bbox_pred): Conv2d(256, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (anchor_generator): DefaultAnchorGenerator(
    (cell_anchors): BufferList()
  )
)
[03/15 11:08:51] d2.data.datasets.coco INFO: Loaded 495 images in COCO format from /home/ps/DiskA/project/GZY1/detectron2/data/datasets/coco/annontations/train2022.json
[03/15 11:08:51] d2.data.build INFO: Removed 0 images with no usable annotations. 495 images left.
[03/15 11:08:51] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [RandomCrop(crop_type='relative_range', crop_size=[0.9, 0.9]), ResizeShortestEdge(short_edge_length=(512, 768), max_size=640), RandomFlip()]
[03/15 11:08:51] d2.data.build INFO: Using training sampler TrainingSampler
[03/15 11:08:51] d2.data.common INFO: Serializing 495 elements to byte tensors and concatenating them all ...
[03/15 11:08:51] d2.data.common INFO: Serialized dataset takes 0.21 MiB
[03/15 11:08:51] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[03/15 11:08:51] fvcore.common.checkpoint INFO: No checkpoint found. Initializing model from scratch
[03/15 11:08:51] d2.engine.train_loop INFO: Starting training from iteration 0
[03/15 11:08:54] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/ps/DiskA/project/GZY1/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/home/ps/DiskA/project/GZY1/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/home/ps/DiskA/project/GZY1/detectron2/engine/train_loop.py", line 288, in run_step
    self._write_metrics(loss_dict, data_time)
  File "/home/ps/DiskA/project/GZY1/detectron2/engine/train_loop.py", line 303, in _write_metrics
    SimpleTrainer.write_metrics(loss_dict, data_time, prefix)
  File "/home/ps/DiskA/project/GZY1/detectron2/engine/train_loop.py", line 339, in write_metrics
    raise FloatingPointError(
FloatingPointError: Loss became infinite or NaN at iteration=2!
loss_dict = {'loss_cls': nan, 'loss_box_reg': 5.563702638769196e+35}
[03/15 11:08:54] d2.engine.hooks INFO: Total training time: 0:00:00 (0:00:00 on hooks)
[03/15 11:08:54] d2.utils.events INFO:  iter: 2  total_loss: 3.487e+06  loss_cls: 3.487e+06  loss_box_reg: 67.98  data_time: 0.3508  lr: 3.998e-06  max_mem: 5158M
[03/15 14:07:39] detectron2 INFO: Rank of current process: 0. World size: 1
[03/15 14:07:40] detectron2 INFO: Environment info:
----------------------  ------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.12 (default, Oct 12 2021, 13:49:34) [GCC 7.5.0]
numpy                   1.21.2
detectron2              0.6 @/home/ps/DiskA/project/GZY1/detectron2
Compiler                GCC 9.3
CUDA compiler           CUDA 11.2
detectron2 arch flags   8.6
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.2 @/home/ps/SmartBuilding/miniconda/envs/GZY1/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0,1,2,3             NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          470.82.00
CUDA_HOME               /usr/local/cuda
Pillow                  9.0.1
torchvision             0.11.3 @/home/ps/SmartBuilding/miniconda/envs/GZY1/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5
iopath                  0.1.9
cv2                     4.5.5
----------------------  ------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[03/15 14:07:40] detectron2 INFO: Command line arguments: Namespace(config_file='', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[03/15 14:07:40] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 1
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - coco_val
  TRAIN:
  - coco_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: true
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 640
  MAX_SIZE_TRAIN: 640
  MIN_SIZE_TEST: 640
  MIN_SIZE_TRAIN:
  - 512
  - 768
  MIN_SIZE_TRAIN_SAMPLING: range
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 40.31747359663594
      - 50.79683366298238
    - - 64
      - 80.63494719327188
      - 101.59366732596476
    - - 128
      - 161.26989438654377
      - 203.18733465192952
    - - 256
      - 322.53978877308754
      - 406.37466930385904
    - - 512
      - 645.0795775461751
      - 812.7493386077181
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_retinanet_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES:
    - res3
    - res4
    - res5
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: RetinaNet
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 8
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.4
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.6
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: /home/ps/DiskA/project/GZY1/model_final_bfca0b.pkl
OUTPUT_DIR: output_2x_smooth_l1
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.002
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 249
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 2999
  MOMENTUM: 0.9
  NESTEROV: false
  REFERENCE_WORLD_SIZE: 0
  STEPS:
  - 7000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 250
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[03/15 14:07:40] detectron2 INFO: Full config saved to output_2x_smooth_l1/config.yaml
[03/15 14:07:41] d2.utils.env INFO: Using a generated random seed 43025530
[03/15 14:07:44] d2.engine.defaults INFO: Model:
RetinaNet(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(2048, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (head): RetinaNetHead(
    (cls_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (bbox_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (cls_score): Conv2d(256, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bbox_pred): Conv2d(256, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (anchor_generator): DefaultAnchorGenerator(
    (cell_anchors): BufferList()
  )
)
[03/15 14:07:44] d2.data.datasets.coco INFO: Loaded 495 images in COCO format from /home/ps/DiskA/project/GZY1/detectron2/data/datasets/coco/annontations/train2022.json
[03/15 14:07:44] d2.data.build INFO: Removed 0 images with no usable annotations. 495 images left.
[03/15 14:07:44] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [RandomCrop(crop_type='relative_range', crop_size=[0.9, 0.9]), ResizeShortestEdge(short_edge_length=(512, 768), max_size=640), RandomFlip()]
[03/15 14:07:44] d2.data.build INFO: Using training sampler TrainingSampler
[03/15 14:07:44] d2.data.common INFO: Serializing 495 elements to byte tensors and concatenating them all ...
[03/15 14:07:44] d2.data.common INFO: Serialized dataset takes 0.21 MiB
[03/15 14:07:44] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[03/15 14:07:44] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/ps/DiskA/project/GZY1/model_final_bfca0b.pkl ...
[03/15 14:07:44] fvcore.common.checkpoint INFO: Reading a file from 'Detectron2 Model Zoo'
[03/15 14:07:44] fvcore.common.checkpoint WARNING: Skip loading parameter 'head.cls_score.weight' to the model due to incompatible shapes: (720, 256, 3, 3) in the checkpoint but (72, 256, 3, 3) in the model! You might want to double check if this is expected.
[03/15 14:07:44] fvcore.common.checkpoint WARNING: Skip loading parameter 'head.cls_score.bias' to the model due to incompatible shapes: (720,) in the checkpoint but (72,) in the model! You might want to double check if this is expected.
[03/15 14:07:44] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mhead.cls_score.{bias, weight}[0m
[03/15 14:07:44] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mpixel_mean[0m
  [35mpixel_std[0m
[03/15 14:07:44] d2.engine.train_loop INFO: Starting training from iteration 0
[03/15 14:08:06] d2.utils.events INFO:  eta: 0:53:16  iter: 19  total_loss: 2.448  loss_cls: 1.689  loss_box_reg: 0.7555  time: 1.0573  data_time: 0.3312  lr: 3.9962e-05  max_mem: 5159M
[03/15 14:08:06] d2.engine.hooks INFO: Overall training speed: 18 iterations in 0:00:19 (1.0583 s / it)
[03/15 14:08:06] d2.engine.hooks INFO: Total training time: 0:00:19 (0:00:00 on hooks)
[03/15 14:08:06] d2.utils.events INFO:  eta: 0:53:15  iter: 20  total_loss: 2.448  loss_cls: 1.689  loss_box_reg: 0.7555  time: 1.0573  data_time: 0.3312  lr: 3.9962e-05  max_mem: 5159M
[04/02 16:24:05] detectron2 INFO: Rank of current process: 0. World size: 1
[04/02 16:24:06] detectron2 INFO: Environment info:
----------------------  -----------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.12 (default, Oct 12 2021, 13:49:34) [GCC 7.5.0]
numpy                   1.21.2
detectron2              0.6 @/home/ps/DiskA/project/GZY1/detectron2/detectron2
Compiler                GCC 9.4
CUDA compiler           CUDA 11.2
detectron2 arch flags   8.6
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.8.0+cu111 @/home/ps/SmartBuilding/miniconda/envs/GZY1/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0,1,2,3             NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          470.82.00
CUDA_HOME               /usr/local/cuda
Pillow                  9.0.1
torchvision             0.9.0+cu111 @/home/ps/SmartBuilding/miniconda/envs/GZY1/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5
iopath                  0.1.9
cv2                     4.5.5
----------------------  -----------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/02 16:24:06] detectron2 INFO: Command line arguments: Namespace(config_file='', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[04/02 16:24:06] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mcoco_val[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mcoco_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrange[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m40.31747359663594[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m50.79683366298238[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m80.63494719327188[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m101.59366732596476[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m161.26989438654377[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m203.18733465192952[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m322.53978877308754[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m406.37466930385904[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m645.0795775461751[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m812.7493386077181[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_retinanet_resnet_fpn_backbone[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRetinaNet[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRes5ROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m/home/ps/DiskA/project/GZY1/model_final_bfca0b.pkl[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141moutput_2x_smooth_l1[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.002[39m
[38;5;15m  [39m[38;5;197mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m249[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m16[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2999[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m7000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[04/02 16:24:06] detectron2 INFO: Full config saved to output_2x_smooth_l1/config.yaml
[04/02 16:24:06] d2.utils.env INFO: Using a generated random seed 7130925
[04/02 16:24:10] d2.engine.defaults INFO: Model:
RetinaNet(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(2048, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (head): RetinaNetHead(
    (cls_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (bbox_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (cls_score): Conv2d(256, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bbox_pred): Conv2d(256, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (anchor_generator): DefaultAnchorGenerator(
    (cell_anchors): BufferList()
  )
)
[04/02 16:24:10] d2.data.datasets.coco INFO: Loaded 115 images in COCO format from /home/ps/DiskA/project/GZY1/Distill_GID_detectron2/datasets/PCBdataset/Annotations/PCBTRAIN.json
[04/02 16:24:10] d2.data.build INFO: Removed 0 images with no usable annotations. 115 images left.
[04/02 16:24:10] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [RandomCrop(crop_type='relative_range', crop_size=[0.9, 0.9]), ResizeShortestEdge(short_edge_length=(512, 768), max_size=640), RandomFlip()]
[04/02 16:24:10] d2.data.build INFO: Using training sampler TrainingSampler
[04/02 16:24:10] d2.data.common INFO: Serializing 115 elements to byte tensors and concatenating them all ...
[04/02 16:24:10] d2.data.common INFO: Serialized dataset takes 0.06 MiB
[04/02 16:24:10] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[04/02 16:24:10] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/ps/DiskA/project/GZY1/model_final_bfca0b.pkl ...
[04/02 16:25:04] detectron2 INFO: Rank of current process: 0. World size: 1
[04/02 16:25:05] detectron2 INFO: Environment info:
----------------------  -----------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.12 (default, Oct 12 2021, 13:49:34) [GCC 7.5.0]
numpy                   1.21.2
detectron2              0.6 @/home/ps/DiskA/project/GZY1/detectron2/detectron2
Compiler                GCC 9.4
CUDA compiler           CUDA 11.2
detectron2 arch flags   8.6
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.8.0+cu111 @/home/ps/SmartBuilding/miniconda/envs/GZY1/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0,1,2,3             NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          470.82.00
CUDA_HOME               /usr/local/cuda
Pillow                  9.0.1
torchvision             0.9.0+cu111 @/home/ps/SmartBuilding/miniconda/envs/GZY1/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5
iopath                  0.1.9
cv2                     4.5.5
----------------------  -----------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/02 16:25:05] detectron2 INFO: Command line arguments: Namespace(config_file='', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[04/02 16:25:05] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mcoco_val[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mcoco_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrange[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m40.31747359663594[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m50.79683366298238[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m80.63494719327188[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m101.59366732596476[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m161.26989438654377[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m203.18733465192952[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m322.53978877308754[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m406.37466930385904[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m645.0795775461751[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m812.7493386077181[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_retinanet_resnet_fpn_backbone[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRetinaNet[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRes5ROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m/home/ps/DiskA/project/GZY1/data/R-50.pkl[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141moutput_2x_smooth_l1[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.002[39m
[38;5;15m  [39m[38;5;197mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m249[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m16[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2999[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m7000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[04/02 16:25:05] detectron2 INFO: Full config saved to output_2x_smooth_l1/config.yaml
[04/02 16:25:05] d2.utils.env INFO: Using a generated random seed 6509957
[04/02 16:25:09] d2.engine.defaults INFO: Model:
RetinaNet(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(2048, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (head): RetinaNetHead(
    (cls_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (bbox_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (cls_score): Conv2d(256, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bbox_pred): Conv2d(256, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (anchor_generator): DefaultAnchorGenerator(
    (cell_anchors): BufferList()
  )
)
[04/02 16:25:09] d2.data.datasets.coco INFO: Loaded 115 images in COCO format from /home/ps/DiskA/project/GZY1/Distill_GID_detectron2/datasets/PCBdataset/Annotations/PCBTRAIN.json
[04/02 16:25:09] d2.data.build INFO: Removed 0 images with no usable annotations. 115 images left.
[04/02 16:25:09] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [RandomCrop(crop_type='relative_range', crop_size=[0.9, 0.9]), ResizeShortestEdge(short_edge_length=(512, 768), max_size=640), RandomFlip()]
[04/02 16:25:09] d2.data.build INFO: Using training sampler TrainingSampler
[04/02 16:25:09] d2.data.common INFO: Serializing 115 elements to byte tensors and concatenating them all ...
[04/02 16:25:09] d2.data.common INFO: Serialized dataset takes 0.06 MiB
[04/02 16:25:09] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[04/02 16:25:09] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/ps/DiskA/project/GZY1/data/R-50.pkl ...
[04/02 16:25:09] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[04/02 16:25:09] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[04/02 16:25:09] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.fpn_lateral3.{bias, weight}[0m
[34mbackbone.fpn_lateral4.{bias, weight}[0m
[34mbackbone.fpn_lateral5.{bias, weight}[0m
[34mbackbone.fpn_output3.{bias, weight}[0m
[34mbackbone.fpn_output4.{bias, weight}[0m
[34mbackbone.fpn_output5.{bias, weight}[0m
[34mbackbone.top_block.p6.{bias, weight}[0m
[34mbackbone.top_block.p7.{bias, weight}[0m
[34mhead.bbox_pred.{bias, weight}[0m
[34mhead.bbox_subnet.0.{bias, weight}[0m
[34mhead.bbox_subnet.2.{bias, weight}[0m
[34mhead.bbox_subnet.4.{bias, weight}[0m
[34mhead.bbox_subnet.6.{bias, weight}[0m
[34mhead.cls_score.{bias, weight}[0m
[34mhead.cls_subnet.0.{bias, weight}[0m
[34mhead.cls_subnet.2.{bias, weight}[0m
[34mhead.cls_subnet.4.{bias, weight}[0m
[34mhead.cls_subnet.6.{bias, weight}[0m
[04/02 16:25:09] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.bias[0m
[04/02 16:25:09] d2.engine.train_loop INFO: Starting training from iteration 0
[04/02 16:26:04] d2.utils.events INFO:  eta: 2:14:13  iter: 19  total_loss: 3.544  loss_cls: 1.512  loss_box_reg: 2.059  time: 2.6488  data_time: 2.1565  lr: 3.9962e-05  max_mem: 6207M
[04/02 16:26:56] d2.utils.events INFO:  eta: 2:11:25  iter: 39  total_loss: 2.833  loss_cls: 1.183  loss_box_reg: 1.604  time: 2.6181  data_time: 2.0256  lr: 7.9922e-05  max_mem: 6207M
[04/02 16:27:47] d2.utils.events INFO:  eta: 2:09:47  iter: 59  total_loss: 2.624  loss_cls: 1.128  loss_box_reg: 1.496  time: 2.5936  data_time: 1.9883  lr: 0.00011988  max_mem: 6207M
[04/02 16:28:39] d2.utils.events INFO:  eta: 2:12:09  iter: 79  total_loss: 2.495  loss_cls: 1.128  loss_box_reg: 1.369  time: 2.6021  data_time: 2.0820  lr: 0.00015984  max_mem: 6207M
[04/02 16:29:35] d2.utils.events INFO:  eta: 2:11:52  iter: 99  total_loss: 2.074  loss_cls: 1.154  loss_box_reg: 0.9348  time: 2.6345  data_time: 2.1915  lr: 0.0001998  max_mem: 6207M
[04/02 16:30:25] d2.utils.events INFO:  eta: 2:10:21  iter: 119  total_loss: 1.848  loss_cls: 1.135  loss_box_reg: 0.7036  time: 2.6141  data_time: 1.9613  lr: 0.00023976  max_mem: 6207M
[04/02 16:31:17] d2.utils.events INFO:  eta: 2:08:27  iter: 139  total_loss: 1.71  loss_cls: 1.115  loss_box_reg: 0.5938  time: 2.6100  data_time: 2.0243  lr: 0.00027972  max_mem: 6207M
[04/02 16:32:08] d2.utils.events INFO:  eta: 2:08:19  iter: 159  total_loss: 1.462  loss_cls: 0.9218  loss_box_reg: 0.5266  time: 2.6045  data_time: 1.9483  lr: 0.00031968  max_mem: 6207M
[04/02 16:33:00] d2.utils.events INFO:  eta: 2:07:33  iter: 179  total_loss: 1.3  loss_cls: 0.7836  loss_box_reg: 0.5142  time: 2.6058  data_time: 2.0560  lr: 0.00035964  max_mem: 6207M
[04/02 16:33:53] d2.utils.events INFO:  eta: 2:06:39  iter: 199  total_loss: 1.268  loss_cls: 0.7513  loss_box_reg: 0.507  time: 2.6093  data_time: 2.0733  lr: 0.0003996  max_mem: 6207M
[04/02 16:34:44] d2.utils.events INFO:  eta: 2:05:44  iter: 219  total_loss: 1.163  loss_cls: 0.7131  loss_box_reg: 0.451  time: 2.6026  data_time: 1.9726  lr: 0.00043956  max_mem: 6207M
[04/02 16:35:38] d2.utils.events INFO:  eta: 2:04:55  iter: 239  total_loss: 1.163  loss_cls: 0.7144  loss_box_reg: 0.4469  time: 2.6126  data_time: 2.0972  lr: 0.00047952  max_mem: 6207M
[04/02 16:36:01] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0000248.pth
[04/02 16:36:03] d2.data.datasets.coco INFO: Loaded 115 images in COCO format from /home/ps/DiskA/project/GZY1/Distill_GID_detectron2/datasets/PCBdataset/Annotations/PCBTRAIN.json
[04/02 16:36:03] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[04/02 16:36:03] d2.data.common INFO: Serializing 115 elements to byte tensors and concatenating them all ...
[04/02 16:36:03] d2.data.common INFO: Serialized dataset takes 0.06 MiB
[04/02 16:36:03] d2.evaluation.evaluator INFO: Start inference on 115 batches
[04/02 16:36:05] d2.evaluation.evaluator INFO: Inference done 11/115. Dataloading: 0.0798 s/iter. Inference: 0.0198 s/iter. Eval: 0.0002 s/iter. Total: 0.0997 s/iter. ETA=0:00:10
[04/02 16:36:10] d2.evaluation.evaluator INFO: Inference done 39/115. Dataloading: 0.1433 s/iter. Inference: 0.0238 s/iter. Eval: 0.0002 s/iter. Total: 0.1674 s/iter. ETA=0:00:12
[04/02 16:36:15] d2.evaluation.evaluator INFO: Inference done 67/115. Dataloading: 0.1474 s/iter. Inference: 0.0250 s/iter. Eval: 0.0003 s/iter. Total: 0.1727 s/iter. ETA=0:00:08
[04/02 16:36:20] d2.evaluation.evaluator INFO: Inference done 99/115. Dataloading: 0.1415 s/iter. Inference: 0.0259 s/iter. Eval: 0.0003 s/iter. Total: 0.1678 s/iter. ETA=0:00:02
[04/02 16:36:23] d2.evaluation.evaluator INFO: Total inference time: 0:00:18.509812 (0.168271 s / iter per device, on 1 devices)
[04/02 16:36:23] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:02 (0.025980 s / iter per device, on 1 devices)
[04/02 16:36:23] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[04/02 16:36:23] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[04/02 16:36:23] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[04/02 16:36:23] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/02 16:36:23] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.06 seconds.
[04/02 16:36:23] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/02 16:36:23] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.01 seconds.
[04/02 16:36:23] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl  |
|:-----:|:------:|:------:|:-----:|:-----:|:-----:|
| 0.369 | 1.297  | 0.001  | 0.000 | 0.366 | 8.954 |
[04/02 16:36:23] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[04/02 16:36:23] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/02 16:36:23] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[04/02 16:36:23] d2.evaluation.testing INFO: copypaste: 0.3690,1.2974,0.0014,0.0000,0.3660,8.9542
[04/02 16:36:48] d2.utils.events INFO:  eta: 2:03:28  iter: 259  total_loss: 1.127  loss_cls: 0.6947  loss_box_reg: 0.4279  time: 2.6029  data_time: 1.9320  lr: 0.00051948  max_mem: 6207M
[04/02 16:37:40] d2.utils.events INFO:  eta: 2:03:01  iter: 279  total_loss: 1.128  loss_cls: 0.6711  loss_box_reg: 0.4355  time: 2.6015  data_time: 2.0247  lr: 0.00055944  max_mem: 6207M
[04/02 16:38:31] d2.utils.events INFO:  eta: 2:02:07  iter: 299  total_loss: 1.068  loss_cls: 0.659  loss_box_reg: 0.4281  time: 2.5987  data_time: 1.9928  lr: 0.0005994  max_mem: 6207M
[04/02 16:39:28] d2.utils.events INFO:  eta: 2:01:53  iter: 319  total_loss: 1.078  loss_cls: 0.6492  loss_box_reg: 0.3968  time: 2.6134  data_time: 2.2527  lr: 0.00063936  max_mem: 6207M
[04/02 16:40:22] d2.utils.events INFO:  eta: 2:01:14  iter: 339  total_loss: 1.019  loss_cls: 0.627  loss_box_reg: 0.3815  time: 2.6192  data_time: 2.1302  lr: 0.00067932  max_mem: 6207M
[04/02 16:41:18] d2.utils.events INFO:  eta: 2:00:38  iter: 359  total_loss: 0.9955  loss_cls: 0.6193  loss_box_reg: 0.3695  time: 2.6298  data_time: 2.0528  lr: 0.00071928  max_mem: 6207M
[04/02 16:42:09] d2.utils.events INFO:  eta: 1:59:28  iter: 379  total_loss: 0.9719  loss_cls: 0.5795  loss_box_reg: 0.4227  time: 2.6246  data_time: 1.9735  lr: 0.00075924  max_mem: 6207M
[04/02 16:43:05] d2.utils.events INFO:  eta: 1:58:36  iter: 399  total_loss: 0.9835  loss_cls: 0.5919  loss_box_reg: 0.3768  time: 2.6343  data_time: 2.2581  lr: 0.0007992  max_mem: 6207M
[04/02 16:43:56] d2.utils.events INFO:  eta: 1:57:40  iter: 419  total_loss: 0.9367  loss_cls: 0.5905  loss_box_reg: 0.3433  time: 2.6290  data_time: 1.9788  lr: 0.00083916  max_mem: 6207M
[04/02 16:44:48] d2.utils.events INFO:  eta: 1:56:46  iter: 439  total_loss: 0.9214  loss_cls: 0.5795  loss_box_reg: 0.3365  time: 2.6284  data_time: 2.0534  lr: 0.00087912  max_mem: 6207M
[04/02 16:45:43] d2.utils.events INFO:  eta: 1:55:51  iter: 459  total_loss: 0.8704  loss_cls: 0.5319  loss_box_reg: 0.3438  time: 2.6323  data_time: 2.1435  lr: 0.00091908  max_mem: 6207M
[04/02 16:46:36] d2.utils.events INFO:  eta: 1:54:36  iter: 479  total_loss: 0.8315  loss_cls: 0.5276  loss_box_reg: 0.3116  time: 2.6333  data_time: 2.1121  lr: 0.00095904  max_mem: 6207M
[04/02 16:46:44] d2.engine.hooks INFO: Overall training speed: 481 iterations in 0:21:06 (2.6340 s / it)
[04/02 16:46:44] d2.engine.hooks INFO: Total training time: 0:21:27 (0:00:20 on hooks)
[04/02 16:46:44] d2.utils.events INFO:  eta: 1:54:24  iter: 483  total_loss: 0.8149  loss_cls: 0.52  loss_box_reg: 0.3091  time: 2.6308  data_time: 2.0539  lr: 0.00096504  max_mem: 6207M
[04/02 16:46:46] detectron2 INFO: Rank of current process: 0. World size: 1
[04/02 16:46:47] detectron2 INFO: Environment info:
----------------------  -----------------------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.12 (default, Oct 12 2021, 13:49:34) [GCC 7.5.0]
numpy                   1.21.2
detectron2              0.6 @/home/ps/DiskA/project/GZY1/detectron2/detectron2
Compiler                GCC 9.4
CUDA compiler           CUDA 11.2
detectron2 arch flags   8.6
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.8.0+cu111 @/home/ps/SmartBuilding/miniconda/envs/GZY1/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0,1,2,3             NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          470.82.00
CUDA_HOME               /usr/local/cuda
Pillow                  9.1.0
torchvision             0.9.0+cu111 @/home/ps/SmartBuilding/miniconda/envs/GZY1/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5
iopath                  0.1.9
cv2                     4.5.5
----------------------  -----------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/02 16:46:47] detectron2 INFO: Command line arguments: Namespace(config_file='', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[04/02 16:46:47] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mcoco_val[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mcoco_train[39m
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBGR[39m
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m640[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrange[39m
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m40.31747359663594[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m50.79683366298238[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m80.63494719327188[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m101.59366732596476[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m161.26989438654377[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m203.18733465192952[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m322.53978877308754[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m406.37466930385904[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m645.0795775461751[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m812.7493386077181[39m
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_retinanet_resnet_fpn_backbone[39m
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRetinaNet[39m
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRes5ROIHeads[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSemSegFPNHead[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m54[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m/home/ps/DiskA/project/GZY1/data/R-50.pkl[39m
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141moutput_2x_smooth_l1[39m
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.002[39m
[38;5;15m  [39m[38;5;197mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m624[39m
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mvalue[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m16[39m
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7499[39m
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m7000[39m
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.001[39m
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m625[39m
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[04/02 16:46:47] detectron2 INFO: Full config saved to output_2x_smooth_l1/config.yaml
[04/02 16:46:47] d2.utils.env INFO: Using a generated random seed 47925579
[04/02 16:46:51] d2.engine.defaults INFO: Model:
RetinaNet(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(2048, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (head): RetinaNetHead(
    (cls_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (bbox_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (cls_score): Conv2d(256, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bbox_pred): Conv2d(256, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (anchor_generator): DefaultAnchorGenerator(
    (cell_anchors): BufferList()
  )
)
[04/02 16:46:51] d2.data.datasets.coco INFO: Loaded 115 images in COCO format from /home/ps/DiskA/project/GZY1/Distill_GID_detectron2/datasets/PCBdataset/Annotations/PCBTRAIN.json
[04/02 16:46:51] d2.data.build INFO: Removed 0 images with no usable annotations. 115 images left.
[04/02 16:46:51] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [RandomCrop(crop_type='relative_range', crop_size=[0.9, 0.9]), ResizeShortestEdge(short_edge_length=(512, 768), max_size=640), RandomFlip()]
[04/02 16:46:51] d2.data.build INFO: Using training sampler TrainingSampler
[04/02 16:46:51] d2.data.common INFO: Serializing 115 elements to byte tensors and concatenating them all ...
[04/02 16:46:51] d2.data.common INFO: Serialized dataset takes 0.06 MiB
[04/02 16:46:51] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/ps/DiskA/project/GZY1/data/R-50.pkl ...
[04/02 16:46:51] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[04/02 16:46:51] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[04/02 16:46:51] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.fpn_lateral3.{bias, weight}[0m
[34mbackbone.fpn_lateral4.{bias, weight}[0m
[34mbackbone.fpn_lateral5.{bias, weight}[0m
[34mbackbone.fpn_output3.{bias, weight}[0m
[34mbackbone.fpn_output4.{bias, weight}[0m
[34mbackbone.fpn_output5.{bias, weight}[0m
[34mbackbone.top_block.p6.{bias, weight}[0m
[34mbackbone.top_block.p7.{bias, weight}[0m
[34mhead.bbox_pred.{bias, weight}[0m
[34mhead.bbox_subnet.0.{bias, weight}[0m
[34mhead.bbox_subnet.2.{bias, weight}[0m
[34mhead.bbox_subnet.4.{bias, weight}[0m
[34mhead.bbox_subnet.6.{bias, weight}[0m
[34mhead.cls_score.{bias, weight}[0m
[34mhead.cls_subnet.0.{bias, weight}[0m
[34mhead.cls_subnet.2.{bias, weight}[0m
[34mhead.cls_subnet.4.{bias, weight}[0m
[34mhead.cls_subnet.6.{bias, weight}[0m
[04/02 16:46:51] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.bias[0m
[04/02 16:46:51] d2.engine.train_loop INFO: Starting training from iteration 0
[04/02 16:47:55] d2.utils.events INFO:  eta: 6:27:50  iter: 19  total_loss: 3.667  loss_cls: 1.585  loss_box_reg: 2.215  time: 3.0837  data_time: 2.6332  lr: 3.9962e-05  max_mem: 6207M
[04/02 16:48:53] d2.utils.events INFO:  eta: 6:18:16  iter: 39  total_loss: 2.75  loss_cls: 1.174  loss_box_reg: 1.53  time: 2.9709  data_time: 2.2932  lr: 7.9922e-05  max_mem: 6207M
[04/02 16:49:52] d2.utils.events INFO:  eta: 6:20:42  iter: 59  total_loss: 2.592  loss_cls: 1.145  loss_box_reg: 1.42  time: 2.9741  data_time: 2.3875  lr: 0.00011988  max_mem: 6207M
[04/02 16:50:54] d2.utils.events INFO:  eta: 6:21:34  iter: 79  total_loss: 2.206  loss_cls: 1.131  loss_box_reg: 1.026  time: 2.9960  data_time: 2.4454  lr: 0.00015984  max_mem: 6207M
[04/02 16:51:55] d2.utils.events INFO:  eta: 6:21:23  iter: 99  total_loss: 1.92  loss_cls: 1.138  loss_box_reg: 0.7838  time: 3.0158  data_time: 2.5459  lr: 0.0001998  max_mem: 6207M
[04/02 16:52:55] d2.utils.events INFO:  eta: 6:21:06  iter: 119  total_loss: 1.754  loss_cls: 1.121  loss_box_reg: 0.6389  time: 3.0113  data_time: 2.4202  lr: 0.00023976  max_mem: 6207M
[04/02 16:53:54] d2.utils.events INFO:  eta: 6:22:19  iter: 139  total_loss: 1.562  loss_cls: 1.042  loss_box_reg: 0.512  time: 3.0033  data_time: 2.3910  lr: 0.00027972  max_mem: 6207M
[04/02 16:54:54] d2.utils.events INFO:  eta: 6:18:47  iter: 159  total_loss: 1.54  loss_cls: 0.9819  loss_box_reg: 0.5206  time: 3.0024  data_time: 2.4369  lr: 0.00031968  max_mem: 6207M
[04/02 16:55:55] d2.utils.events INFO:  eta: 6:17:16  iter: 179  total_loss: 1.355  loss_cls: 0.8399  loss_box_reg: 0.5133  time: 3.0071  data_time: 2.4767  lr: 0.00035964  max_mem: 6207M
[04/02 16:56:58] d2.utils.events INFO:  eta: 6:19:40  iter: 199  total_loss: 1.232  loss_cls: 0.7682  loss_box_reg: 0.4654  time: 3.0198  data_time: 2.5093  lr: 0.0003996  max_mem: 6207M
[04/02 16:57:58] d2.utils.events INFO:  eta: 6:20:04  iter: 219  total_loss: 1.205  loss_cls: 0.7499  loss_box_reg: 0.4488  time: 3.0195  data_time: 2.4559  lr: 0.00043956  max_mem: 6207M
[04/02 16:58:58] d2.utils.events INFO:  eta: 6:18:49  iter: 239  total_loss: 1.146  loss_cls: 0.7063  loss_box_reg: 0.4414  time: 3.0184  data_time: 2.4447  lr: 0.00047952  max_mem: 6207M
[04/02 16:59:58] d2.utils.events INFO:  eta: 6:14:20  iter: 259  total_loss: 1.136  loss_cls: 0.7145  loss_box_reg: 0.4197  time: 3.0141  data_time: 2.3834  lr: 0.00051948  max_mem: 6207M
[04/02 17:01:01] d2.utils.events INFO:  eta: 6:15:31  iter: 279  total_loss: 1.153  loss_cls: 0.7255  loss_box_reg: 0.4354  time: 3.0248  data_time: 2.6548  lr: 0.00055944  max_mem: 6207M
[04/02 17:02:02] d2.utils.events INFO:  eta: 6:14:28  iter: 299  total_loss: 1.083  loss_cls: 0.6872  loss_box_reg: 0.3791  time: 3.0263  data_time: 2.5595  lr: 0.0005994  max_mem: 6207M
[04/02 17:03:02] d2.utils.events INFO:  eta: 6:13:26  iter: 319  total_loss: 1.06  loss_cls: 0.6572  loss_box_reg: 0.3898  time: 3.0258  data_time: 2.5306  lr: 0.00063936  max_mem: 6207M
[04/02 17:04:02] d2.utils.events INFO:  eta: 6:10:49  iter: 339  total_loss: 1.048  loss_cls: 0.654  loss_box_reg: 0.3915  time: 3.0217  data_time: 2.4707  lr: 0.00067932  max_mem: 6207M
[04/02 17:04:57] d2.utils.events INFO:  eta: 6:08:29  iter: 359  total_loss: 0.9499  loss_cls: 0.6087  loss_box_reg: 0.3479  time: 3.0073  data_time: 2.2817  lr: 0.00071928  max_mem: 6207M
[04/02 17:05:53] d2.utils.events INFO:  eta: 6:06:46  iter: 379  total_loss: 0.9799  loss_cls: 0.6013  loss_box_reg: 0.3764  time: 2.9974  data_time: 2.3328  lr: 0.00075924  max_mem: 6207M
[04/02 17:06:53] d2.utils.events INFO:  eta: 6:05:17  iter: 399  total_loss: 0.9666  loss_cls: 0.5666  loss_box_reg: 0.3868  time: 2.9967  data_time: 2.4988  lr: 0.0007992  max_mem: 6207M
[04/02 17:07:52] d2.utils.events INFO:  eta: 6:04:08  iter: 419  total_loss: 0.9133  loss_cls: 0.5614  loss_box_reg: 0.3437  time: 2.9946  data_time: 2.4661  lr: 0.00083916  max_mem: 6207M
[04/02 17:08:52] d2.utils.events INFO:  eta: 6:03:02  iter: 439  total_loss: 1.051  loss_cls: 0.5773  loss_box_reg: 0.4341  time: 2.9953  data_time: 2.4574  lr: 0.00087912  max_mem: 6207M
[04/02 17:09:53] d2.utils.events INFO:  eta: 6:01:54  iter: 459  total_loss: 0.9591  loss_cls: 0.5257  loss_box_reg: 0.4504  time: 2.9958  data_time: 2.4646  lr: 0.00091908  max_mem: 6207M
[04/02 17:10:55] d2.utils.events INFO:  eta: 6:00:48  iter: 479  total_loss: 0.8594  loss_cls: 0.5009  loss_box_reg: 0.3551  time: 3.0006  data_time: 2.6198  lr: 0.00095904  max_mem: 6207M
[04/02 17:11:55] d2.utils.events INFO:  eta: 5:59:57  iter: 499  total_loss: 0.847  loss_cls: 0.5048  loss_box_reg: 0.3346  time: 3.0012  data_time: 2.5284  lr: 0.000999  max_mem: 6207M
[04/02 17:12:51] d2.utils.events INFO:  eta: 5:58:33  iter: 519  total_loss: 0.7954  loss_cls: 0.4653  loss_box_reg: 0.3171  time: 2.9933  data_time: 2.3092  lr: 0.001039  max_mem: 6207M
[04/02 17:13:56] d2.utils.events INFO:  eta: 5:57:43  iter: 539  total_loss: 0.9798  loss_cls: 0.6209  loss_box_reg: 0.3521  time: 3.0016  data_time: 2.6794  lr: 0.0010789  max_mem: 6207M
[04/02 17:14:54] d2.utils.events INFO:  eta: 5:56:45  iter: 559  total_loss: 0.8669  loss_cls: 0.5121  loss_box_reg: 0.329  time: 2.9985  data_time: 2.4021  lr: 0.0011189  max_mem: 6207M
[04/02 17:15:54] d2.utils.events INFO:  eta: 5:55:40  iter: 579  total_loss: 0.8212  loss_cls: 0.4823  loss_box_reg: 0.3418  time: 2.9981  data_time: 2.4739  lr: 0.0011588  max_mem: 6207M
[04/02 17:16:54] d2.utils.events INFO:  eta: 5:54:48  iter: 599  total_loss: 0.7554  loss_cls: 0.4545  loss_box_reg: 0.2903  time: 2.9995  data_time: 2.5028  lr: 0.0011988  max_mem: 6207M
[04/02 17:17:56] d2.utils.events INFO:  eta: 5:53:53  iter: 619  total_loss: 0.6931  loss_cls: 0.4228  loss_box_reg: 0.2754  time: 3.0027  data_time: 2.6165  lr: 0.0012388  max_mem: 6207M
[04/02 17:18:07] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0000623.pth
[04/02 17:18:10] d2.data.datasets.coco INFO: Loaded 115 images in COCO format from /home/ps/DiskA/project/GZY1/Distill_GID_detectron2/datasets/PCBdataset/Annotations/PCBTRAIN.json
[04/02 17:18:10] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[04/02 17:18:10] d2.data.common INFO: Serializing 115 elements to byte tensors and concatenating them all ...
[04/02 17:18:10] d2.data.common INFO: Serialized dataset takes 0.06 MiB
[04/02 17:18:10] d2.evaluation.evaluator INFO: Start inference on 115 batches
[04/02 17:18:12] d2.evaluation.evaluator INFO: Inference done 11/115. Dataloading: 0.0922 s/iter. Inference: 0.0226 s/iter. Eval: 0.0003 s/iter. Total: 0.1150 s/iter. ETA=0:00:11
[04/02 17:18:18] d2.evaluation.evaluator INFO: Inference done 39/115. Dataloading: 0.1466 s/iter. Inference: 0.0238 s/iter. Eval: 0.0003 s/iter. Total: 0.1707 s/iter. ETA=0:00:12
[04/02 17:18:23] d2.evaluation.evaluator INFO: Inference done 70/115. Dataloading: 0.1436 s/iter. Inference: 0.0227 s/iter. Eval: 0.0003 s/iter. Total: 0.1666 s/iter. ETA=0:00:07
[04/02 17:18:28] d2.evaluation.evaluator INFO: Inference done 103/115. Dataloading: 0.1391 s/iter. Inference: 0.0225 s/iter. Eval: 0.0003 s/iter. Total: 0.1619 s/iter. ETA=0:00:01
[04/02 17:18:30] d2.evaluation.evaluator INFO: Total inference time: 0:00:18.371925 (0.167018 s / iter per device, on 1 devices)
[04/02 17:18:30] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:02 (0.022921 s / iter per device, on 1 devices)
[04/02 17:18:30] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[04/02 17:18:30] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[04/02 17:18:30] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[04/02 17:18:30] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/02 17:18:30] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.06 seconds.
[04/02 17:18:30] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/02 17:18:30] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.01 seconds.
[04/02 17:18:30] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:------:|:------:|:------:|:-----:|:------:|:------:|
| 14.008 | 44.088 | 1.885  | 7.574 | 13.774 | 29.490 |
[04/02 17:18:30] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[04/02 17:18:30] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/02 17:18:30] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[04/02 17:18:30] d2.evaluation.testing INFO: copypaste: 14.0078,44.0877,1.8847,7.5743,13.7735,29.4904
[04/02 17:19:13] d2.utils.events INFO:  eta: 5:52:34  iter: 639  total_loss: 0.6475  loss_cls: 0.408  loss_box_reg: 0.2435  time: 2.9970  data_time: 2.3354  lr: 0.0012787  max_mem: 6207M
[04/02 17:20:13] d2.utils.events INFO:  eta: 5:50:58  iter: 659  total_loss: 0.6142  loss_cls: 0.409  loss_box_reg: 0.2173  time: 2.9963  data_time: 2.4883  lr: 0.0013187  max_mem: 6207M
[04/02 17:21:13] d2.utils.events INFO:  eta: 5:50:31  iter: 679  total_loss: 0.6233  loss_cls: 0.3845  loss_box_reg: 0.2387  time: 2.9964  data_time: 2.4608  lr: 0.0013586  max_mem: 6207M
[04/02 17:22:12] d2.utils.events INFO:  eta: 5:49:12  iter: 699  total_loss: 0.5994  loss_cls: 0.3831  loss_box_reg: 0.213  time: 2.9956  data_time: 2.4836  lr: 0.0013986  max_mem: 6207M
[04/02 17:23:08] d2.utils.events INFO:  eta: 5:47:15  iter: 719  total_loss: 0.5681  loss_cls: 0.3544  loss_box_reg: 0.2072  time: 2.9898  data_time: 2.3029  lr: 0.0014386  max_mem: 6207M
[04/02 17:24:07] d2.utils.events INFO:  eta: 5:46:09  iter: 739  total_loss: 0.6083  loss_cls: 0.3514  loss_box_reg: 0.2696  time: 2.9893  data_time: 2.4848  lr: 0.0014785  max_mem: 6207M
[04/02 17:25:04] d2.utils.events INFO:  eta: 5:44:56  iter: 759  total_loss: 0.6619  loss_cls: 0.4106  loss_box_reg: 0.2482  time: 2.9851  data_time: 2.3482  lr: 0.0015185  max_mem: 6207M
[04/02 17:26:02] d2.utils.events INFO:  eta: 5:43:44  iter: 779  total_loss: 1.228  loss_cls: 0.9512  loss_box_reg: 0.2576  time: 2.9831  data_time: 2.4185  lr: 0.0015584  max_mem: 6207M
[04/02 17:27:03] d2.utils.events INFO:  eta: 5:42:53  iter: 799  total_loss: 0.8388  loss_cls: 0.5149  loss_box_reg: 0.278  time: 2.9849  data_time: 2.5723  lr: 0.0015984  max_mem: 6207M
[04/02 17:28:00] d2.utils.events INFO:  eta: 5:41:41  iter: 819  total_loss: 0.6014  loss_cls: 0.3808  loss_box_reg: 0.2417  time: 2.9812  data_time: 2.3457  lr: 0.0016384  max_mem: 6207M
[04/02 17:29:00] d2.utils.events INFO:  eta: 5:40:40  iter: 839  total_loss: 0.5826  loss_cls: 0.3594  loss_box_reg: 0.2281  time: 2.9810  data_time: 2.4881  lr: 0.0016783  max_mem: 6207M
[04/02 17:30:01] d2.utils.events INFO:  eta: 5:40:00  iter: 859  total_loss: 0.5463  loss_cls: 0.3256  loss_box_reg: 0.2104  time: 2.9835  data_time: 2.6036  lr: 0.0017183  max_mem: 6207M
[04/02 17:31:00] d2.utils.events INFO:  eta: 5:38:59  iter: 879  total_loss: 0.6497  loss_cls: 0.3212  loss_box_reg: 0.3356  time: 2.9820  data_time: 2.4334  lr: 0.0017582  max_mem: 6207M
[04/02 17:31:56] d2.utils.events INFO:  eta: 5:37:46  iter: 899  total_loss: 0.5503  loss_cls: 0.3216  loss_box_reg: 0.2326  time: 2.9777  data_time: 2.3005  lr: 0.0017982  max_mem: 6207M
[04/02 17:32:53] d2.utils.events INFO:  eta: 5:36:40  iter: 919  total_loss: 0.5461  loss_cls: 0.3293  loss_box_reg: 0.2042  time: 2.9753  data_time: 2.3824  lr: 0.0018382  max_mem: 6207M
[04/02 17:33:52] d2.utils.events INFO:  eta: 5:35:33  iter: 939  total_loss: 0.5059  loss_cls: 0.3081  loss_box_reg: 0.1936  time: 2.9752  data_time: 2.4828  lr: 0.0018781  max_mem: 6207M
[04/02 17:34:51] d2.utils.events INFO:  eta: 5:34:26  iter: 959  total_loss: 0.5406  loss_cls: 0.3131  loss_box_reg: 0.2265  time: 2.9739  data_time: 2.4272  lr: 0.0019181  max_mem: 6207M
[04/02 17:35:47] d2.utils.events INFO:  eta: 5:33:03  iter: 979  total_loss: 0.4708  loss_cls: 0.2797  loss_box_reg: 0.2023  time: 2.9706  data_time: 2.3129  lr: 0.001958  max_mem: 6207M
[04/02 17:36:43] d2.utils.events INFO:  eta: 5:31:56  iter: 999  total_loss: 0.4724  loss_cls: 0.2942  loss_box_reg: 0.2026  time: 2.9669  data_time: 2.2997  lr: 0.001998  max_mem: 6207M
[04/02 17:37:42] d2.utils.events INFO:  eta: 5:30:48  iter: 1019  total_loss: 0.5717  loss_cls: 0.3794  loss_box_reg: 0.1745  time: 2.9665  data_time: 2.4633  lr: 0.002  max_mem: 6207M
[04/02 17:38:38] d2.utils.events INFO:  eta: 5:29:44  iter: 1039  total_loss: 0.4644  loss_cls: 0.288  loss_box_reg: 0.1794  time: 2.9638  data_time: 2.3415  lr: 0.002  max_mem: 6207M
[04/02 17:39:37] d2.utils.events INFO:  eta: 5:28:24  iter: 1059  total_loss: 0.4177  loss_cls: 0.2648  loss_box_reg: 0.1579  time: 2.9631  data_time: 2.4422  lr: 0.002  max_mem: 6207M
[04/02 17:40:34] d2.utils.events INFO:  eta: 5:26:51  iter: 1079  total_loss: 0.4011  loss_cls: 0.2466  loss_box_reg: 0.1424  time: 2.9614  data_time: 2.3852  lr: 0.002  max_mem: 6207M
[04/02 17:41:34] d2.utils.events INFO:  eta: 5:25:12  iter: 1099  total_loss: 0.4369  loss_cls: 0.2803  loss_box_reg: 0.1711  time: 2.9615  data_time: 2.4817  lr: 0.002  max_mem: 6207M
[04/02 17:42:30] d2.utils.events INFO:  eta: 5:23:40  iter: 1119  total_loss: 0.385  loss_cls: 0.2478  loss_box_reg: 0.1416  time: 2.9590  data_time: 2.3345  lr: 0.002  max_mem: 6207M
[04/02 17:43:29] d2.utils.events INFO:  eta: 5:22:29  iter: 1139  total_loss: 0.3916  loss_cls: 0.2335  loss_box_reg: 0.145  time: 2.9582  data_time: 2.4288  lr: 0.002  max_mem: 6207M
[04/02 17:44:25] d2.utils.events INFO:  eta: 5:21:22  iter: 1159  total_loss: 0.372  loss_cls: 0.2253  loss_box_reg: 0.1429  time: 2.9555  data_time: 2.3152  lr: 0.002  max_mem: 6207M
[04/02 17:45:27] d2.utils.events INFO:  eta: 5:20:38  iter: 1179  total_loss: 0.3828  loss_cls: 0.2321  loss_box_reg: 0.144  time: 2.9579  data_time: 2.6142  lr: 0.002  max_mem: 6207M
[04/02 17:46:27] d2.utils.events INFO:  eta: 5:19:26  iter: 1199  total_loss: 0.3936  loss_cls: 0.2294  loss_box_reg: 0.1566  time: 2.9588  data_time: 2.5238  lr: 0.002  max_mem: 6207M
[04/02 17:47:27] d2.utils.events INFO:  eta: 5:18:22  iter: 1219  total_loss: 0.5092  loss_cls: 0.217  loss_box_reg: 0.2794  time: 2.9592  data_time: 2.4992  lr: 0.002  max_mem: 6207M
[04/02 17:48:25] d2.utils.events INFO:  eta: 5:17:18  iter: 1239  total_loss: 0.4078  loss_cls: 0.2295  loss_box_reg: 0.1755  time: 2.9582  data_time: 2.4089  lr: 0.002  max_mem: 6207M
[04/02 17:48:48] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0001247.pth
[04/02 17:48:54] d2.data.datasets.coco INFO: Loaded 115 images in COCO format from /home/ps/DiskA/project/GZY1/Distill_GID_detectron2/datasets/PCBdataset/Annotations/PCBTRAIN.json
[04/02 17:48:54] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[04/02 17:48:54] d2.data.common INFO: Serializing 115 elements to byte tensors and concatenating them all ...
[04/02 17:48:54] d2.data.common INFO: Serialized dataset takes 0.06 MiB
[04/02 17:48:54] d2.evaluation.evaluator INFO: Start inference on 115 batches
[04/02 17:48:56] d2.evaluation.evaluator INFO: Inference done 11/115. Dataloading: 0.1091 s/iter. Inference: 0.0235 s/iter. Eval: 0.0003 s/iter. Total: 0.1329 s/iter. ETA=0:00:13
[04/02 17:49:02] d2.evaluation.evaluator INFO: Inference done 39/115. Dataloading: 0.1520 s/iter. Inference: 0.0227 s/iter. Eval: 0.0003 s/iter. Total: 0.1751 s/iter. ETA=0:00:13
[04/02 17:49:07] d2.evaluation.evaluator INFO: Inference done 69/115. Dataloading: 0.1497 s/iter. Inference: 0.0222 s/iter. Eval: 0.0003 s/iter. Total: 0.1723 s/iter. ETA=0:00:07
[04/02 17:49:12] d2.evaluation.evaluator INFO: Inference done 100/115. Dataloading: 0.1464 s/iter. Inference: 0.0231 s/iter. Eval: 0.0003 s/iter. Total: 0.1698 s/iter. ETA=0:00:02
[04/02 17:49:15] d2.evaluation.evaluator INFO: Total inference time: 0:00:19.116894 (0.173790 s / iter per device, on 1 devices)
[04/02 17:49:15] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:02 (0.023275 s / iter per device, on 1 devices)
[04/02 17:49:15] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[04/02 17:49:15] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[04/02 17:49:15] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[04/02 17:49:15] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/02 17:49:15] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.05 seconds.
[04/02 17:49:15] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/02 17:49:15] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.01 seconds.
[04/02 17:49:15] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 32.734 | 79.245 | 18.660 | 25.149 | 30.666 | 61.773 |
[04/02 17:49:15] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[04/02 17:49:15] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/02 17:49:15] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[04/02 17:49:15] d2.evaluation.testing INFO: copypaste: 32.7341,79.2453,18.6601,25.1485,30.6659,61.7728
[04/02 17:49:44] d2.utils.events INFO:  eta: 5:16:21  iter: 1259  total_loss: 0.3566  loss_cls: 0.2104  loss_box_reg: 0.1442  time: 2.9577  data_time: 2.4389  lr: 0.002  max_mem: 6207M
[04/02 17:50:41] d2.utils.events INFO:  eta: 5:14:53  iter: 1279  total_loss: 0.3549  loss_cls: 0.2155  loss_box_reg: 0.1292  time: 2.9556  data_time: 2.3370  lr: 0.002  max_mem: 6207M
[04/02 17:51:38] d2.utils.events INFO:  eta: 5:13:47  iter: 1299  total_loss: 0.3436  loss_cls: 0.2008  loss_box_reg: 0.1247  time: 2.9538  data_time: 2.3604  lr: 0.002  max_mem: 6207M
[04/02 17:52:36] d2.utils.events INFO:  eta: 5:12:43  iter: 1319  total_loss: 0.3744  loss_cls: 0.2219  loss_box_reg: 0.1508  time: 2.9535  data_time: 2.4486  lr: 0.002  max_mem: 6207M
[04/02 17:53:33] d2.utils.events INFO:  eta: 5:11:42  iter: 1339  total_loss: 0.3772  loss_cls: 0.2206  loss_box_reg: 0.1513  time: 2.9514  data_time: 2.3237  lr: 0.002  max_mem: 6207M
[04/02 17:54:30] d2.utils.events INFO:  eta: 5:10:47  iter: 1359  total_loss: 0.3358  loss_cls: 0.2009  loss_box_reg: 0.1389  time: 2.9500  data_time: 2.3717  lr: 0.002  max_mem: 6207M
[04/02 17:55:26] d2.utils.events INFO:  eta: 5:09:47  iter: 1379  total_loss: 0.3241  loss_cls: 0.1908  loss_box_reg: 0.1339  time: 2.9477  data_time: 2.3097  lr: 0.002  max_mem: 6207M
[04/02 17:56:25] d2.utils.events INFO:  eta: 5:08:46  iter: 1399  total_loss: 0.2938  loss_cls: 0.1795  loss_box_reg: 0.1146  time: 2.9477  data_time: 2.4615  lr: 0.002  max_mem: 6207M
[04/02 17:57:22] d2.utils.events INFO:  eta: 5:07:35  iter: 1419  total_loss: 0.3062  loss_cls: 0.1963  loss_box_reg: 0.1131  time: 2.9465  data_time: 2.3711  lr: 0.002  max_mem: 6207M
[04/02 17:58:16] d2.utils.events INFO:  eta: 5:06:08  iter: 1439  total_loss: 0.3235  loss_cls: 0.1918  loss_box_reg: 0.131  time: 2.9434  data_time: 2.2375  lr: 0.002  max_mem: 6207M
[04/02 17:59:17] d2.utils.events INFO:  eta: 5:05:13  iter: 1459  total_loss: 0.308  loss_cls: 0.1782  loss_box_reg: 0.1223  time: 2.9443  data_time: 2.5298  lr: 0.002  max_mem: 6207M
[04/02 18:00:16] d2.utils.events INFO:  eta: 5:03:50  iter: 1479  total_loss: 0.3185  loss_cls: 0.18  loss_box_reg: 0.1281  time: 2.9446  data_time: 2.4795  lr: 0.002  max_mem: 6207M
[04/02 18:01:14] d2.utils.events INFO:  eta: 5:03:07  iter: 1499  total_loss: 0.2975  loss_cls: 0.1844  loss_box_reg: 0.1186  time: 2.9440  data_time: 2.4076  lr: 0.002  max_mem: 6207M
[04/02 18:02:11] d2.utils.events INFO:  eta: 5:02:11  iter: 1519  total_loss: 0.2692  loss_cls: 0.179  loss_box_reg: 0.1009  time: 2.9427  data_time: 2.3644  lr: 0.002  max_mem: 6207M
[04/02 18:03:07] d2.utils.events INFO:  eta: 5:00:36  iter: 1539  total_loss: 0.2772  loss_cls: 0.1776  loss_box_reg: 0.1009  time: 2.9410  data_time: 2.3241  lr: 0.002  max_mem: 6207M
[04/02 18:04:07] d2.utils.events INFO:  eta: 4:59:29  iter: 1559  total_loss: 0.2998  loss_cls: 0.1787  loss_box_reg: 0.1327  time: 2.9416  data_time: 2.4987  lr: 0.002  max_mem: 6207M
[04/02 18:05:03] d2.utils.events INFO:  eta: 4:58:17  iter: 1579  total_loss: 0.2982  loss_cls: 0.1646  loss_box_reg: 0.1253  time: 2.9399  data_time: 2.3245  lr: 0.002  max_mem: 6207M
[04/02 18:06:00] d2.utils.events INFO:  eta: 4:56:04  iter: 1599  total_loss: 0.2867  loss_cls: 0.1789  loss_box_reg: 0.1152  time: 2.9385  data_time: 2.3420  lr: 0.002  max_mem: 6207M
[04/02 18:07:00] d2.utils.events INFO:  eta: 4:54:37  iter: 1619  total_loss: 0.2453  loss_cls: 0.1581  loss_box_reg: 0.09451  time: 2.9395  data_time: 2.5348  lr: 0.002  max_mem: 6207M
[04/02 18:07:57] d2.utils.events INFO:  eta: 4:53:37  iter: 1639  total_loss: 0.2668  loss_cls: 0.1712  loss_box_reg: 0.09547  time: 2.9384  data_time: 2.3607  lr: 0.002  max_mem: 6207M
[04/02 18:08:56] d2.utils.events INFO:  eta: 4:52:31  iter: 1659  total_loss: 0.2744  loss_cls: 0.166  loss_box_reg: 0.1176  time: 2.9383  data_time: 2.4402  lr: 0.002  max_mem: 6207M
[04/02 18:09:53] d2.utils.events INFO:  eta: 4:51:03  iter: 1679  total_loss: 0.2745  loss_cls: 0.1585  loss_box_reg: 0.1023  time: 2.9373  data_time: 2.3710  lr: 0.002  max_mem: 6207M
[04/02 18:10:55] d2.utils.events INFO:  eta: 4:50:10  iter: 1699  total_loss: 0.2631  loss_cls: 0.1593  loss_box_reg: 0.09804  time: 2.9392  data_time: 2.6189  lr: 0.002  max_mem: 6207M
[04/02 18:11:50] d2.utils.events INFO:  eta: 4:49:00  iter: 1719  total_loss: 0.2881  loss_cls: 0.1567  loss_box_reg: 0.1257  time: 2.9370  data_time: 2.2694  lr: 0.002  max_mem: 6207M
[04/02 18:12:48] d2.utils.events INFO:  eta: 4:47:58  iter: 1739  total_loss: 0.2652  loss_cls: 0.1643  loss_box_reg: 0.102  time: 2.9367  data_time: 2.4252  lr: 0.002  max_mem: 6207M
[04/02 18:13:46] d2.utils.events INFO:  eta: 4:47:31  iter: 1759  total_loss: 0.2461  loss_cls: 0.1484  loss_box_reg: 0.08944  time: 2.9359  data_time: 2.3805  lr: 0.002  max_mem: 6207M
[04/02 18:14:46] d2.utils.events INFO:  eta: 4:46:30  iter: 1779  total_loss: 0.2685  loss_cls: 0.1553  loss_box_reg: 0.1116  time: 2.9365  data_time: 2.5052  lr: 0.002  max_mem: 6207M
[04/02 18:15:45] d2.utils.events INFO:  eta: 4:45:30  iter: 1799  total_loss: 0.2652  loss_cls: 0.1495  loss_box_reg: 0.1217  time: 2.9366  data_time: 2.4586  lr: 0.002  max_mem: 6207M
[04/02 18:16:41] d2.utils.events INFO:  eta: 4:44:30  iter: 1819  total_loss: 0.2846  loss_cls: 0.1606  loss_box_reg: 0.1319  time: 2.9356  data_time: 2.3596  lr: 0.002  max_mem: 6207M
[04/02 18:17:39] d2.utils.events INFO:  eta: 4:43:30  iter: 1839  total_loss: 0.2495  loss_cls: 0.1477  loss_box_reg: 0.1063  time: 2.9348  data_time: 2.3758  lr: 0.002  max_mem: 6207M
[04/02 18:18:39] d2.utils.events INFO:  eta: 4:42:05  iter: 1859  total_loss: 0.2458  loss_cls: 0.1454  loss_box_reg: 0.09367  time: 2.9355  data_time: 2.5146  lr: 0.002  max_mem: 6207M
[04/02 18:19:14] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0001871.pth
[04/02 18:19:20] d2.data.datasets.coco INFO: Loaded 115 images in COCO format from /home/ps/DiskA/project/GZY1/Distill_GID_detectron2/datasets/PCBdataset/Annotations/PCBTRAIN.json
[04/02 18:19:20] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[04/02 18:19:20] d2.data.common INFO: Serializing 115 elements to byte tensors and concatenating them all ...
[04/02 18:19:20] d2.data.common INFO: Serialized dataset takes 0.06 MiB
[04/02 18:19:20] d2.evaluation.evaluator INFO: Start inference on 115 batches
[04/02 18:19:23] d2.evaluation.evaluator INFO: Inference done 11/115. Dataloading: 0.0949 s/iter. Inference: 0.0211 s/iter. Eval: 0.0003 s/iter. Total: 0.1163 s/iter. ETA=0:00:12
[04/02 18:19:28] d2.evaluation.evaluator INFO: Inference done 36/115. Dataloading: 0.1699 s/iter. Inference: 0.0236 s/iter. Eval: 0.0003 s/iter. Total: 0.1939 s/iter. ETA=0:00:15
[04/02 18:19:33] d2.evaluation.evaluator INFO: Inference done 64/115. Dataloading: 0.1651 s/iter. Inference: 0.0227 s/iter. Eval: 0.0003 s/iter. Total: 0.1881 s/iter. ETA=0:00:09
[04/02 18:19:38] d2.evaluation.evaluator INFO: Inference done 96/115. Dataloading: 0.1550 s/iter. Inference: 0.0221 s/iter. Eval: 0.0003 s/iter. Total: 0.1774 s/iter. ETA=0:00:03
[04/02 18:19:41] d2.evaluation.evaluator INFO: Total inference time: 0:00:19.287503 (0.175341 s / iter per device, on 1 devices)
[04/02 18:19:41] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:02 (0.022478 s / iter per device, on 1 devices)
[04/02 18:19:41] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[04/02 18:19:41] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[04/02 18:19:41] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[04/02 18:19:41] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/02 18:19:41] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.05 seconds.
[04/02 18:19:41] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/02 18:19:41] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.01 seconds.
[04/02 18:19:41] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 49.601 | 91.536 | 47.452 | 25.365 | 47.929 | 72.689 |
[04/02 18:19:41] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[04/02 18:19:41] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/02 18:19:41] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[04/02 18:19:41] d2.evaluation.testing INFO: copypaste: 49.6006,91.5356,47.4524,25.3647,47.9292,72.6889
[04/02 18:19:57] d2.utils.events INFO:  eta: 4:41:09  iter: 1879  total_loss: 0.2554  loss_cls: 0.146  loss_box_reg: 0.08519  time: 2.9348  data_time: 2.3761  lr: 0.002  max_mem: 6207M
[04/02 18:20:55] d2.utils.events INFO:  eta: 4:40:03  iter: 1899  total_loss: 0.2417  loss_cls: 0.1504  loss_box_reg: 0.08693  time: 2.9341  data_time: 2.3830  lr: 0.002  max_mem: 6207M
[04/02 18:21:57] d2.utils.events INFO:  eta: 4:39:05  iter: 1919  total_loss: 0.2487  loss_cls: 0.151  loss_box_reg: 0.09265  time: 2.9361  data_time: 2.6437  lr: 0.002  max_mem: 6207M
[04/02 18:22:54] d2.utils.events INFO:  eta: 4:38:03  iter: 1939  total_loss: 0.223  loss_cls: 0.1359  loss_box_reg: 0.08803  time: 2.9349  data_time: 2.3356  lr: 0.002  max_mem: 6207M
[04/02 18:23:52] d2.utils.events INFO:  eta: 4:37:05  iter: 1959  total_loss: 0.2172  loss_cls: 0.1357  loss_box_reg: 0.08192  time: 2.9344  data_time: 2.4024  lr: 0.002  max_mem: 6207M
[04/02 18:24:52] d2.utils.events INFO:  eta: 4:36:12  iter: 1979  total_loss: 0.25  loss_cls: 0.1349  loss_box_reg: 0.1111  time: 2.9351  data_time: 2.5162  lr: 0.002  max_mem: 6207M
[04/02 18:25:51] d2.utils.events INFO:  eta: 4:35:09  iter: 1999  total_loss: 0.2563  loss_cls: 0.1511  loss_box_reg: 0.09832  time: 2.9353  data_time: 2.4687  lr: 0.002  max_mem: 6207M
[04/02 18:26:48] d2.utils.events INFO:  eta: 4:34:03  iter: 2019  total_loss: 0.2211  loss_cls: 0.1376  loss_box_reg: 0.08873  time: 2.9343  data_time: 2.3544  lr: 0.002  max_mem: 6207M
[04/02 18:27:46] d2.utils.events INFO:  eta: 4:33:00  iter: 2039  total_loss: 0.2355  loss_cls: 0.1348  loss_box_reg: 0.09974  time: 2.9339  data_time: 2.4040  lr: 0.002  max_mem: 6207M
[04/02 18:28:42] d2.utils.events INFO:  eta: 4:32:00  iter: 2059  total_loss: 0.229  loss_cls: 0.1298  loss_box_reg: 0.0951  time: 2.9327  data_time: 2.3206  lr: 0.002  max_mem: 6207M
[04/02 18:29:43] d2.utils.events INFO:  eta: 4:31:04  iter: 2079  total_loss: 0.2166  loss_cls: 0.1291  loss_box_reg: 0.08881  time: 2.9341  data_time: 2.6030  lr: 0.002  max_mem: 6207M
[04/02 18:30:41] d2.utils.events INFO:  eta: 4:29:58  iter: 2099  total_loss: 0.2173  loss_cls: 0.1291  loss_box_reg: 0.09004  time: 2.9337  data_time: 2.3996  lr: 0.002  max_mem: 6207M
[04/02 18:31:37] d2.utils.events INFO:  eta: 4:28:58  iter: 2119  total_loss: 0.2159  loss_cls: 0.1325  loss_box_reg: 0.08303  time: 2.9322  data_time: 2.2891  lr: 0.002  max_mem: 6207M
[04/02 18:32:34] d2.utils.events INFO:  eta: 4:27:53  iter: 2139  total_loss: 0.2077  loss_cls: 0.1297  loss_box_reg: 0.07964  time: 2.9314  data_time: 2.3556  lr: 0.002  max_mem: 6207M
[04/02 18:33:32] d2.utils.events INFO:  eta: 4:26:58  iter: 2159  total_loss: 0.2076  loss_cls: 0.1371  loss_box_reg: 0.07511  time: 2.9314  data_time: 2.4528  lr: 0.002  max_mem: 6207M
[04/02 18:34:30] d2.utils.events INFO:  eta: 4:25:35  iter: 2179  total_loss: 0.2128  loss_cls: 0.1334  loss_box_reg: 0.08042  time: 2.9310  data_time: 2.4027  lr: 0.002  max_mem: 6207M
[04/02 18:35:26] d2.utils.events INFO:  eta: 4:24:12  iter: 2199  total_loss: 0.2246  loss_cls: 0.1468  loss_box_reg: 0.0807  time: 2.9299  data_time: 2.3207  lr: 0.002  max_mem: 6207M
[04/02 18:36:23] d2.utils.events INFO:  eta: 4:23:07  iter: 2219  total_loss: 0.2221  loss_cls: 0.1305  loss_box_reg: 0.07655  time: 2.9291  data_time: 2.3470  lr: 0.002  max_mem: 6207M
[04/02 18:37:25] d2.utils.events INFO:  eta: 4:22:09  iter: 2239  total_loss: 0.215  loss_cls: 0.1276  loss_box_reg: 0.08627  time: 2.9303  data_time: 2.5798  lr: 0.002  max_mem: 6207M
[04/02 18:38:20] d2.utils.events INFO:  eta: 4:21:02  iter: 2259  total_loss: 0.1973  loss_cls: 0.1236  loss_box_reg: 0.07394  time: 2.9289  data_time: 2.2904  lr: 0.002  max_mem: 6207M
[04/02 18:39:20] d2.utils.events INFO:  eta: 4:20:07  iter: 2279  total_loss: 0.2152  loss_cls: 0.1214  loss_box_reg: 0.09079  time: 2.9293  data_time: 2.4862  lr: 0.002  max_mem: 6207M
[04/02 18:40:18] d2.utils.events INFO:  eta: 4:19:05  iter: 2299  total_loss: 0.202  loss_cls: 0.1179  loss_box_reg: 0.08029  time: 2.9290  data_time: 2.4199  lr: 0.002  max_mem: 6207M
[04/02 18:41:17] d2.utils.events INFO:  eta: 4:18:07  iter: 2319  total_loss: 0.2001  loss_cls: 0.1245  loss_box_reg: 0.07808  time: 2.9292  data_time: 2.4588  lr: 0.002  max_mem: 6207M
[04/02 18:42:14] d2.utils.events INFO:  eta: 4:17:08  iter: 2339  total_loss: 0.1943  loss_cls: 0.1161  loss_box_reg: 0.07716  time: 2.9285  data_time: 2.3669  lr: 0.002  max_mem: 6207M
[04/02 18:43:10] d2.utils.events INFO:  eta: 4:16:07  iter: 2359  total_loss: 0.2062  loss_cls: 0.1221  loss_box_reg: 0.08379  time: 2.9275  data_time: 2.3190  lr: 0.002  max_mem: 6207M
[04/02 18:44:08] d2.utils.events INFO:  eta: 4:15:10  iter: 2379  total_loss: 0.1983  loss_cls: 0.1273  loss_box_reg: 0.07159  time: 2.9275  data_time: 2.4397  lr: 0.002  max_mem: 6207M
[04/02 18:45:05] d2.utils.events INFO:  eta: 4:14:08  iter: 2399  total_loss: 0.1927  loss_cls: 0.1107  loss_box_reg: 0.0754  time: 2.9268  data_time: 2.3557  lr: 0.002  max_mem: 6207M
[04/02 18:46:03] d2.utils.events INFO:  eta: 4:13:14  iter: 2419  total_loss: 0.2048  loss_cls: 0.1307  loss_box_reg: 0.07306  time: 2.9264  data_time: 2.3916  lr: 0.002  max_mem: 6207M
[04/02 18:47:00] d2.utils.events INFO:  eta: 4:12:27  iter: 2439  total_loss: 0.1936  loss_cls: 0.1168  loss_box_reg: 0.07336  time: 2.9257  data_time: 2.3579  lr: 0.002  max_mem: 6207M
[04/02 18:47:56] d2.utils.events INFO:  eta: 4:11:18  iter: 2459  total_loss: 0.208  loss_cls: 0.1257  loss_box_reg: 0.07688  time: 2.9248  data_time: 2.3390  lr: 0.002  max_mem: 6207M
[04/02 18:48:54] d2.utils.events INFO:  eta: 4:10:14  iter: 2479  total_loss: 0.1927  loss_cls: 0.1193  loss_box_reg: 0.08523  time: 2.9243  data_time: 2.3757  lr: 0.002  max_mem: 6207M
[04/02 18:49:37] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0002495.pth
[04/02 18:49:50] d2.data.datasets.coco INFO: Loaded 115 images in COCO format from /home/ps/DiskA/project/GZY1/Distill_GID_detectron2/datasets/PCBdataset/Annotations/PCBTRAIN.json
[04/02 18:49:50] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[04/02 18:49:50] d2.data.common INFO: Serializing 115 elements to byte tensors and concatenating them all ...
[04/02 18:49:50] d2.data.common INFO: Serialized dataset takes 0.06 MiB
[04/02 18:49:50] d2.evaluation.evaluator INFO: Start inference on 115 batches
[04/02 18:49:52] d2.evaluation.evaluator INFO: Inference done 11/115. Dataloading: 0.1111 s/iter. Inference: 0.0234 s/iter. Eval: 0.0003 s/iter. Total: 0.1348 s/iter. ETA=0:00:14
[04/02 18:49:58] d2.evaluation.evaluator INFO: Inference done 37/115. Dataloading: 0.1633 s/iter. Inference: 0.0233 s/iter. Eval: 0.0002 s/iter. Total: 0.1869 s/iter. ETA=0:00:14
[04/02 18:50:03] d2.evaluation.evaluator INFO: Inference done 68/115. Dataloading: 0.1540 s/iter. Inference: 0.0221 s/iter. Eval: 0.0002 s/iter. Total: 0.1763 s/iter. ETA=0:00:08
[04/02 18:50:08] d2.evaluation.evaluator INFO: Inference done 101/115. Dataloading: 0.1467 s/iter. Inference: 0.0217 s/iter. Eval: 0.0002 s/iter. Total: 0.1687 s/iter. ETA=0:00:02
[04/02 18:50:10] d2.evaluation.evaluator INFO: Total inference time: 0:00:18.597185 (0.169065 s / iter per device, on 1 devices)
[04/02 18:50:10] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:02 (0.022032 s / iter per device, on 1 devices)
[04/02 18:50:10] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[04/02 18:50:10] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[04/02 18:50:10] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[04/02 18:50:10] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/02 18:50:10] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.03 seconds.
[04/02 18:50:10] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/02 18:50:10] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.01 seconds.
[04/02 18:50:10] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 52.411 | 92.461 | 53.578 | 49.274 | 50.126 | 77.128 |
[04/02 18:50:10] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[04/02 18:50:10] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/02 18:50:10] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[04/02 18:50:10] d2.evaluation.testing INFO: copypaste: 52.4111,92.4614,53.5782,49.2739,50.1256,77.1275
[04/02 18:50:10] d2.utils.events INFO:  eta: 4:09:00  iter: 2499  total_loss: 0.2045  loss_cls: 0.1191  loss_box_reg: 0.08241  time: 2.9234  data_time: 2.3237  lr: 0.002  max_mem: 6207M
[04/02 18:51:07] d2.utils.events INFO:  eta: 4:08:04  iter: 2519  total_loss: 0.1914  loss_cls: 0.1163  loss_box_reg: 0.07778  time: 2.9226  data_time: 2.3363  lr: 0.002  max_mem: 6207M
[04/02 18:52:05] d2.utils.events INFO:  eta: 4:07:08  iter: 2539  total_loss: 0.1857  loss_cls: 0.1138  loss_box_reg: 0.07555  time: 2.9226  data_time: 2.4388  lr: 0.002  max_mem: 6207M
[04/02 18:53:01] d2.utils.events INFO:  eta: 4:05:53  iter: 2559  total_loss: 0.1751  loss_cls: 0.1062  loss_box_reg: 0.07163  time: 2.9215  data_time: 2.2909  lr: 0.002  max_mem: 6207M
[04/02 18:54:00] d2.utils.events INFO:  eta: 4:05:10  iter: 2579  total_loss: 0.1706  loss_cls: 0.1066  loss_box_reg: 0.06056  time: 2.9216  data_time: 2.4503  lr: 0.002  max_mem: 6207M
[04/02 18:54:57] d2.utils.events INFO:  eta: 4:04:08  iter: 2599  total_loss: 0.1852  loss_cls: 0.1101  loss_box_reg: 0.07021  time: 2.9211  data_time: 2.3748  lr: 0.002  max_mem: 6207M
[04/02 18:55:56] d2.utils.events INFO:  eta: 4:03:11  iter: 2619  total_loss: 0.1826  loss_cls: 0.1124  loss_box_reg: 0.06867  time: 2.9213  data_time: 2.4541  lr: 0.002  max_mem: 6207M
[04/02 18:56:55] d2.utils.events INFO:  eta: 4:02:19  iter: 2639  total_loss: 0.184  loss_cls: 0.1106  loss_box_reg: 0.06859  time: 2.9218  data_time: 2.4971  lr: 0.002  max_mem: 6207M
[04/02 18:57:51] d2.utils.events INFO:  eta: 4:01:19  iter: 2659  total_loss: 0.1801  loss_cls: 0.1078  loss_box_reg: 0.07163  time: 2.9206  data_time: 2.2891  lr: 0.002  max_mem: 6207M
[04/02 18:58:46] d2.utils.events INFO:  eta: 4:00:13  iter: 2679  total_loss: 0.1792  loss_cls: 0.1091  loss_box_reg: 0.07304  time: 2.9194  data_time: 2.2641  lr: 0.002  max_mem: 6207M
[04/02 18:59:47] d2.utils.events INFO:  eta: 3:59:13  iter: 2699  total_loss: 0.1871  loss_cls: 0.1175  loss_box_reg: 0.07158  time: 2.9204  data_time: 2.5703  lr: 0.002  max_mem: 6207M
[04/02 19:00:45] d2.utils.events INFO:  eta: 3:58:24  iter: 2719  total_loss: 0.1873  loss_cls: 0.1121  loss_box_reg: 0.07481  time: 2.9202  data_time: 2.4107  lr: 0.002  max_mem: 6207M
[04/02 19:01:42] d2.utils.events INFO:  eta: 3:57:24  iter: 2739  total_loss: 0.1854  loss_cls: 0.1103  loss_box_reg: 0.07225  time: 2.9195  data_time: 2.3394  lr: 0.002  max_mem: 6207M
[04/02 19:02:42] d2.utils.events INFO:  eta: 3:56:19  iter: 2759  total_loss: 0.1792  loss_cls: 0.115  loss_box_reg: 0.06599  time: 2.9200  data_time: 2.5034  lr: 0.002  max_mem: 6207M
[04/02 19:03:43] d2.utils.events INFO:  eta: 3:55:27  iter: 2779  total_loss: 0.1831  loss_cls: 0.1125  loss_box_reg: 0.06113  time: 2.9212  data_time: 2.5937  lr: 0.002  max_mem: 6207M
[04/02 19:04:41] d2.utils.events INFO:  eta: 3:54:25  iter: 2799  total_loss: 0.1624  loss_cls: 0.1043  loss_box_reg: 0.05964  time: 2.9208  data_time: 2.3831  lr: 0.002  max_mem: 6207M
[04/02 19:05:36] d2.utils.events INFO:  eta: 3:53:25  iter: 2819  total_loss: 0.1763  loss_cls: 0.1168  loss_box_reg: 0.06011  time: 2.9198  data_time: 2.2870  lr: 0.002  max_mem: 6207M
[04/02 19:06:33] d2.utils.events INFO:  eta: 3:52:25  iter: 2839  total_loss: 0.1697  loss_cls: 0.1068  loss_box_reg: 0.06598  time: 2.9192  data_time: 2.3514  lr: 0.002  max_mem: 6207M
[04/02 19:07:32] d2.utils.events INFO:  eta: 3:51:13  iter: 2859  total_loss: 0.2017  loss_cls: 0.1145  loss_box_reg: 0.09214  time: 2.9195  data_time: 2.4713  lr: 0.002  max_mem: 6207M
[04/02 19:08:27] d2.utils.events INFO:  eta: 3:50:10  iter: 2879  total_loss: 0.1729  loss_cls: 0.1024  loss_box_reg: 0.07287  time: 2.9182  data_time: 2.2570  lr: 0.002  max_mem: 6207M
[04/02 19:09:23] d2.utils.events INFO:  eta: 3:49:10  iter: 2899  total_loss: 0.1744  loss_cls: 0.1054  loss_box_reg: 0.07099  time: 2.9175  data_time: 2.3332  lr: 0.002  max_mem: 6207M
[04/02 19:10:21] d2.utils.events INFO:  eta: 3:48:10  iter: 2919  total_loss: 0.1755  loss_cls: 0.111  loss_box_reg: 0.07037  time: 2.9173  data_time: 2.4024  lr: 0.002  max_mem: 6207M
[04/02 19:11:17] d2.utils.events INFO:  eta: 3:46:57  iter: 2939  total_loss: 0.1717  loss_cls: 0.09967  loss_box_reg: 0.07048  time: 2.9164  data_time: 2.2967  lr: 0.002  max_mem: 6207M
[04/02 19:12:12] d2.utils.events INFO:  eta: 3:45:44  iter: 2959  total_loss: 0.171  loss_cls: 0.105  loss_box_reg: 0.06495  time: 2.9153  data_time: 2.2748  lr: 0.002  max_mem: 6207M
[04/02 19:13:11] d2.utils.events INFO:  eta: 3:44:30  iter: 2979  total_loss: 0.1771  loss_cls: 0.1031  loss_box_reg: 0.07274  time: 2.9155  data_time: 2.4494  lr: 0.002  max_mem: 6207M
[04/02 19:14:10] d2.utils.events INFO:  eta: 3:43:24  iter: 2999  total_loss: 0.1822  loss_cls: 0.1101  loss_box_reg: 0.06239  time: 2.9156  data_time: 2.4476  lr: 0.002  max_mem: 6207M
[04/02 19:15:06] d2.utils.events INFO:  eta: 3:42:24  iter: 3019  total_loss: 0.1663  loss_cls: 0.1081  loss_box_reg: 0.0601  time: 2.9149  data_time: 2.3270  lr: 0.002  max_mem: 6207M
[04/02 19:16:02] d2.utils.events INFO:  eta: 3:41:25  iter: 3039  total_loss: 0.1582  loss_cls: 0.09628  loss_box_reg: 0.05847  time: 2.9142  data_time: 2.3113  lr: 0.002  max_mem: 6207M
[04/02 19:16:58] d2.utils.events INFO:  eta: 3:40:08  iter: 3059  total_loss: 0.1551  loss_cls: 0.1006  loss_box_reg: 0.05537  time: 2.9134  data_time: 2.3058  lr: 0.002  max_mem: 6207M
[04/02 19:17:56] d2.utils.events INFO:  eta: 3:38:53  iter: 3079  total_loss: 0.1541  loss_cls: 0.09641  loss_box_reg: 0.05902  time: 2.9134  data_time: 2.4325  lr: 0.002  max_mem: 6207M
[04/02 19:18:55] d2.utils.events INFO:  eta: 3:38:09  iter: 3099  total_loss: 0.1906  loss_cls: 0.106  loss_box_reg: 0.08089  time: 2.9136  data_time: 2.4648  lr: 0.002  max_mem: 6207M
[04/02 19:19:53] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0003119.pth
[04/02 19:19:54] d2.utils.events INFO:  eta: 3:37:48  iter: 3119  total_loss: 0.1576  loss_cls: 0.1027  loss_box_reg: 0.05811  time: 2.9135  data_time: 2.4101  lr: 0.002  max_mem: 6207M
[04/02 19:20:08] d2.data.datasets.coco INFO: Loaded 115 images in COCO format from /home/ps/DiskA/project/GZY1/Distill_GID_detectron2/datasets/PCBdataset/Annotations/PCBTRAIN.json
[04/02 19:20:08] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[04/02 19:20:08] d2.data.common INFO: Serializing 115 elements to byte tensors and concatenating them all ...
[04/02 19:20:08] d2.data.common INFO: Serialized dataset takes 0.06 MiB
[04/02 19:20:08] d2.evaluation.evaluator INFO: Start inference on 115 batches
[04/02 19:20:10] d2.evaluation.evaluator INFO: Inference done 11/115. Dataloading: 0.1169 s/iter. Inference: 0.0229 s/iter. Eval: 0.0003 s/iter. Total: 0.1401 s/iter. ETA=0:00:14
[04/02 19:20:15] d2.evaluation.evaluator INFO: Inference done 37/115. Dataloading: 0.1636 s/iter. Inference: 0.0216 s/iter. Eval: 0.0002 s/iter. Total: 0.1855 s/iter. ETA=0:00:14
[04/02 19:20:21] d2.evaluation.evaluator INFO: Inference done 68/115. Dataloading: 0.1538 s/iter. Inference: 0.0208 s/iter. Eval: 0.0002 s/iter. Total: 0.1749 s/iter. ETA=0:00:08
[04/02 19:20:26] d2.evaluation.evaluator INFO: Inference done 101/115. Dataloading: 0.1460 s/iter. Inference: 0.0208 s/iter. Eval: 0.0002 s/iter. Total: 0.1670 s/iter. ETA=0:00:02
[04/02 19:20:28] d2.evaluation.evaluator INFO: Total inference time: 0:00:18.381112 (0.167101 s / iter per device, on 1 devices)
[04/02 19:20:28] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:02 (0.021212 s / iter per device, on 1 devices)
[04/02 19:20:28] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[04/02 19:20:28] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[04/02 19:20:28] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[04/02 19:20:28] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/02 19:20:28] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.02 seconds.
[04/02 19:20:28] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/02 19:20:28] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.01 seconds.
[04/02 19:20:28] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 58.198 | 94.427 | 66.261 | 30.099 | 56.941 | 76.206 |
[04/02 19:20:28] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[04/02 19:20:28] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/02 19:20:28] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[04/02 19:20:28] d2.evaluation.testing INFO: copypaste: 58.1981,94.4265,66.2610,30.0990,56.9413,76.2065
[04/02 19:21:09] d2.utils.events INFO:  eta: 3:36:27  iter: 3139  total_loss: 0.1482  loss_cls: 0.09089  loss_box_reg: 0.05491  time: 2.9127  data_time: 2.2919  lr: 0.002  max_mem: 6207M
[04/02 19:22:07] d2.utils.events INFO:  eta: 3:35:11  iter: 3159  total_loss: 0.1697  loss_cls: 0.1129  loss_box_reg: 0.0568  time: 2.9125  data_time: 2.4089  lr: 0.002  max_mem: 6207M
[04/02 19:23:03] d2.utils.events INFO:  eta: 3:33:56  iter: 3179  total_loss: 0.1562  loss_cls: 0.1024  loss_box_reg: 0.05641  time: 2.9118  data_time: 2.3119  lr: 0.002  max_mem: 6207M
[04/02 19:23:58] d2.utils.events INFO:  eta: 3:32:54  iter: 3199  total_loss: 0.1495  loss_cls: 0.09855  loss_box_reg: 0.05214  time: 2.9106  data_time: 2.2318  lr: 0.002  max_mem: 6207M
[04/02 19:24:54] d2.utils.events INFO:  eta: 3:31:52  iter: 3219  total_loss: 0.1546  loss_cls: 0.1031  loss_box_reg: 0.05229  time: 2.9102  data_time: 2.3582  lr: 0.002  max_mem: 6207M
[04/02 19:25:54] d2.utils.events INFO:  eta: 3:30:49  iter: 3239  total_loss: 0.1532  loss_cls: 0.09452  loss_box_reg: 0.06112  time: 2.9107  data_time: 2.4993  lr: 0.002  max_mem: 6207M
[04/02 19:26:53] d2.utils.events INFO:  eta: 3:29:56  iter: 3259  total_loss: 0.1582  loss_cls: 0.1007  loss_box_reg: 0.05993  time: 2.9109  data_time: 2.4686  lr: 0.002  max_mem: 6207M
[04/02 19:27:49] d2.utils.events INFO:  eta: 3:28:51  iter: 3279  total_loss: 0.1562  loss_cls: 0.09826  loss_box_reg: 0.05859  time: 2.9102  data_time: 2.2991  lr: 0.002  max_mem: 6207M
[04/02 19:28:48] d2.utils.events INFO:  eta: 3:27:46  iter: 3299  total_loss: 0.1457  loss_cls: 0.09097  loss_box_reg: 0.05703  time: 2.9105  data_time: 2.4760  lr: 0.002  max_mem: 6207M
[04/02 19:29:50] d2.utils.events INFO:  eta: 3:26:52  iter: 3319  total_loss: 0.1578  loss_cls: 0.09937  loss_box_reg: 0.05502  time: 2.9116  data_time: 2.6017  lr: 0.002  max_mem: 6207M
[04/02 19:30:49] d2.utils.events INFO:  eta: 3:25:52  iter: 3339  total_loss: 0.1389  loss_cls: 0.08865  loss_box_reg: 0.04853  time: 2.9119  data_time: 2.4763  lr: 0.002  max_mem: 6207M
[04/02 19:31:50] d2.utils.events INFO:  eta: 3:25:27  iter: 3359  total_loss: 0.1475  loss_cls: 0.09262  loss_box_reg: 0.05392  time: 2.9126  data_time: 2.5522  lr: 0.002  max_mem: 6207M
[04/02 19:32:46] d2.utils.events INFO:  eta: 3:24:03  iter: 3379  total_loss: 0.1388  loss_cls: 0.0922  loss_box_reg: 0.04966  time: 2.9117  data_time: 2.2835  lr: 0.002  max_mem: 6207M
[04/02 19:33:46] d2.utils.events INFO:  eta: 3:23:32  iter: 3399  total_loss: 0.1438  loss_cls: 0.09328  loss_box_reg: 0.04974  time: 2.9125  data_time: 2.5557  lr: 0.002  max_mem: 6207M
[04/02 19:34:45] d2.utils.events INFO:  eta: 3:22:40  iter: 3419  total_loss: 0.1382  loss_cls: 0.08733  loss_box_reg: 0.05103  time: 2.9125  data_time: 2.4254  lr: 0.002  max_mem: 6207M
[04/02 19:35:41] d2.utils.events INFO:  eta: 3:21:30  iter: 3439  total_loss: 0.1463  loss_cls: 0.08909  loss_box_reg: 0.05182  time: 2.9121  data_time: 2.3497  lr: 0.002  max_mem: 6207M
[04/02 19:36:43] d2.utils.events INFO:  eta: 3:20:54  iter: 3459  total_loss: 0.1584  loss_cls: 0.09768  loss_box_reg: 0.05961  time: 2.9131  data_time: 2.6056  lr: 0.002  max_mem: 6207M
[04/02 19:37:41] d2.utils.events INFO:  eta: 3:19:58  iter: 3479  total_loss: 0.155  loss_cls: 0.09689  loss_box_reg: 0.05494  time: 2.9130  data_time: 2.4166  lr: 0.002  max_mem: 6207M
[04/02 19:38:40] d2.utils.events INFO:  eta: 3:19:22  iter: 3499  total_loss: 0.1453  loss_cls: 0.09061  loss_box_reg: 0.05404  time: 2.9130  data_time: 2.4164  lr: 0.002  max_mem: 6207M
[04/02 19:39:35] d2.utils.events INFO:  eta: 3:18:22  iter: 3519  total_loss: 0.1453  loss_cls: 0.09451  loss_box_reg: 0.0489  time: 2.9122  data_time: 2.2877  lr: 0.002  max_mem: 6207M
[04/02 19:40:38] d2.utils.events INFO:  eta: 3:17:28  iter: 3539  total_loss: 0.1499  loss_cls: 0.09393  loss_box_reg: 0.05368  time: 2.9134  data_time: 2.6404  lr: 0.002  max_mem: 6207M
[04/02 19:41:36] d2.utils.events INFO:  eta: 3:16:35  iter: 3559  total_loss: 0.1553  loss_cls: 0.09569  loss_box_reg: 0.05637  time: 2.9135  data_time: 2.4513  lr: 0.002  max_mem: 6207M
[04/02 19:42:32] d2.utils.events INFO:  eta: 3:15:25  iter: 3579  total_loss: 0.1443  loss_cls: 0.09353  loss_box_reg: 0.05207  time: 2.9129  data_time: 2.3148  lr: 0.002  max_mem: 6207M
[04/02 19:43:27] d2.utils.events INFO:  eta: 3:14:28  iter: 3599  total_loss: 0.1445  loss_cls: 0.08936  loss_box_reg: 0.05833  time: 2.9120  data_time: 2.2650  lr: 0.002  max_mem: 6207M
[04/02 19:44:30] d2.utils.events INFO:  eta: 3:13:31  iter: 3619  total_loss: 0.1498  loss_cls: 0.08867  loss_box_reg: 0.05495  time: 2.9132  data_time: 2.6390  lr: 0.002  max_mem: 6207M
[04/02 19:45:28] d2.utils.events INFO:  eta: 3:12:19  iter: 3639  total_loss: 0.1468  loss_cls: 0.09108  loss_box_reg: 0.05371  time: 2.9131  data_time: 2.4065  lr: 0.002  max_mem: 6207M
[04/02 19:46:23] d2.utils.events INFO:  eta: 3:11:05  iter: 3659  total_loss: 0.1486  loss_cls: 0.09356  loss_box_reg: 0.05025  time: 2.9122  data_time: 2.2713  lr: 0.002  max_mem: 6207M
[04/02 19:47:19] d2.utils.events INFO:  eta: 3:10:05  iter: 3679  total_loss: 0.1471  loss_cls: 0.09472  loss_box_reg: 0.05307  time: 2.9115  data_time: 2.2968  lr: 0.002  max_mem: 6207M
[04/02 19:48:17] d2.utils.events INFO:  eta: 3:09:01  iter: 3699  total_loss: 0.152  loss_cls: 0.1057  loss_box_reg: 0.04863  time: 2.9116  data_time: 2.4361  lr: 0.002  max_mem: 6207M
[04/02 19:49:15] d2.utils.events INFO:  eta: 3:07:43  iter: 3719  total_loss: 0.1495  loss_cls: 0.08751  loss_box_reg: 0.06179  time: 2.9113  data_time: 2.3807  lr: 0.002  max_mem: 6207M
[04/02 19:50:15] d2.utils.events INFO:  eta: 3:06:56  iter: 3739  total_loss: 0.1793  loss_cls: 0.09805  loss_box_reg: 0.07879  time: 2.9118  data_time: 2.5244  lr: 0.002  max_mem: 6207M
[04/02 19:50:27] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0003743.pth
[04/02 19:50:43] d2.data.datasets.coco INFO: Loaded 115 images in COCO format from /home/ps/DiskA/project/GZY1/Distill_GID_detectron2/datasets/PCBdataset/Annotations/PCBTRAIN.json
[04/02 19:50:43] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[04/02 19:50:43] d2.data.common INFO: Serializing 115 elements to byte tensors and concatenating them all ...
[04/02 19:50:43] d2.data.common INFO: Serialized dataset takes 0.06 MiB
[04/02 19:50:43] d2.evaluation.evaluator INFO: Start inference on 115 batches
[04/02 19:50:45] d2.evaluation.evaluator INFO: Inference done 11/115. Dataloading: 0.0947 s/iter. Inference: 0.0209 s/iter. Eval: 0.0003 s/iter. Total: 0.1159 s/iter. ETA=0:00:12
[04/02 19:50:50] d2.evaluation.evaluator INFO: Inference done 39/115. Dataloading: 0.1499 s/iter. Inference: 0.0206 s/iter. Eval: 0.0002 s/iter. Total: 0.1708 s/iter. ETA=0:00:12
[04/02 19:50:55] d2.evaluation.evaluator INFO: Inference done 70/115. Dataloading: 0.1456 s/iter. Inference: 0.0207 s/iter. Eval: 0.0002 s/iter. Total: 0.1666 s/iter. ETA=0:00:07
[04/02 19:51:01] d2.evaluation.evaluator INFO: Inference done 95/115. Dataloading: 0.1561 s/iter. Inference: 0.0207 s/iter. Eval: 0.0002 s/iter. Total: 0.1771 s/iter. ETA=0:00:03
[04/02 19:51:04] d2.evaluation.evaluator INFO: Total inference time: 0:00:19.114528 (0.173768 s / iter per device, on 1 devices)
[04/02 19:51:04] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:02 (0.021141 s / iter per device, on 1 devices)
[04/02 19:51:04] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[04/02 19:51:04] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[04/02 19:51:04] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[04/02 19:51:04] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/02 19:51:04] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.01 seconds.
[04/02 19:51:04] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/02 19:51:04] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[04/02 19:51:04] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:------:|:------:|:------:|:-----:|:------:|:------:|
| 50.157 | 88.468 | 51.432 | 3.239 | 50.209 | 75.842 |
[04/02 19:51:04] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[04/02 19:51:04] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/02 19:51:04] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[04/02 19:51:04] d2.evaluation.testing INFO: copypaste: 50.1568,88.4680,51.4324,3.2395,50.2089,75.8418
[04/02 19:51:35] d2.utils.events INFO:  eta: 3:05:18  iter: 3759  total_loss: 0.1587  loss_cls: 0.09243  loss_box_reg: 0.06334  time: 2.9120  data_time: 2.4550  lr: 0.002  max_mem: 6207M
[04/02 19:52:32] d2.utils.events INFO:  eta: 3:04:10  iter: 3779  total_loss: 0.1372  loss_cls: 0.08432  loss_box_reg: 0.05014  time: 2.9118  data_time: 2.3886  lr: 0.002  max_mem: 6207M
[04/02 19:53:28] d2.utils.events INFO:  eta: 3:03:05  iter: 3799  total_loss: 0.1333  loss_cls: 0.08115  loss_box_reg: 0.05006  time: 2.9111  data_time: 2.2943  lr: 0.002  max_mem: 6207M
[04/02 19:54:26] d2.utils.events INFO:  eta: 3:02:06  iter: 3819  total_loss: 0.1285  loss_cls: 0.07922  loss_box_reg: 0.0471  time: 2.9109  data_time: 2.3999  lr: 0.002  max_mem: 6207M
[04/02 19:55:25] d2.utils.events INFO:  eta: 3:01:06  iter: 3839  total_loss: 0.1333  loss_cls: 0.08234  loss_box_reg: 0.05123  time: 2.9112  data_time: 2.4683  lr: 0.002  max_mem: 6207M
[04/02 19:56:22] d2.utils.events INFO:  eta: 3:00:07  iter: 3859  total_loss: 0.13  loss_cls: 0.08487  loss_box_reg: 0.04753  time: 2.9110  data_time: 2.3807  lr: 0.002  max_mem: 6207M
[04/02 19:57:17] d2.utils.events INFO:  eta: 2:59:07  iter: 3879  total_loss: 0.1373  loss_cls: 0.08842  loss_box_reg: 0.04798  time: 2.9101  data_time: 2.2560  lr: 0.002  max_mem: 6207M
[04/02 19:58:13] d2.utils.events INFO:  eta: 2:58:08  iter: 3899  total_loss: 0.1405  loss_cls: 0.08823  loss_box_reg: 0.05398  time: 2.9096  data_time: 2.3336  lr: 0.002  max_mem: 6207M
[04/02 19:59:12] d2.utils.events INFO:  eta: 2:57:07  iter: 3919  total_loss: 0.1323  loss_cls: 0.08559  loss_box_reg: 0.0474  time: 2.9098  data_time: 2.4523  lr: 0.002  max_mem: 6207M
[04/02 20:00:11] d2.utils.events INFO:  eta: 2:56:09  iter: 3939  total_loss: 0.1318  loss_cls: 0.08267  loss_box_reg: 0.05065  time: 2.9098  data_time: 2.4265  lr: 0.002  max_mem: 6207M
[04/02 20:01:07] d2.utils.events INFO:  eta: 2:55:10  iter: 3959  total_loss: 0.129  loss_cls: 0.08313  loss_box_reg: 0.04634  time: 2.9093  data_time: 2.3271  lr: 0.002  max_mem: 6207M
[04/02 20:02:05] d2.utils.events INFO:  eta: 2:54:16  iter: 3979  total_loss: 0.1459  loss_cls: 0.08327  loss_box_reg: 0.05696  time: 2.9093  data_time: 2.4266  lr: 0.002  max_mem: 6207M
[04/02 20:03:07] d2.utils.events INFO:  eta: 2:53:25  iter: 3999  total_loss: 0.1525  loss_cls: 0.08494  loss_box_reg: 0.0702  time: 2.9102  data_time: 2.5932  lr: 0.002  max_mem: 6207M
[04/02 20:04:05] d2.utils.events INFO:  eta: 2:52:25  iter: 4019  total_loss: 0.1332  loss_cls: 0.08222  loss_box_reg: 0.04826  time: 2.9101  data_time: 2.4105  lr: 0.002  max_mem: 6207M
[04/02 20:05:02] d2.utils.events INFO:  eta: 2:51:34  iter: 4039  total_loss: 0.1409  loss_cls: 0.08874  loss_box_reg: 0.05279  time: 2.9100  data_time: 2.4015  lr: 0.002  max_mem: 6207M
[04/02 20:06:00] d2.utils.events INFO:  eta: 2:50:45  iter: 4059  total_loss: 0.1377  loss_cls: 0.08926  loss_box_reg: 0.05307  time: 2.9098  data_time: 2.3781  lr: 0.002  max_mem: 6207M
[04/02 20:06:59] d2.utils.events INFO:  eta: 2:49:26  iter: 4079  total_loss: 0.1324  loss_cls: 0.08086  loss_box_reg: 0.05211  time: 2.9099  data_time: 2.4652  lr: 0.002  max_mem: 6207M
[04/02 20:07:58] d2.utils.events INFO:  eta: 2:48:43  iter: 4099  total_loss: 0.1287  loss_cls: 0.08812  loss_box_reg: 0.04539  time: 2.9103  data_time: 2.5018  lr: 0.002  max_mem: 6207M
[04/02 20:08:55] d2.utils.events INFO:  eta: 2:47:35  iter: 4119  total_loss: 0.128  loss_cls: 0.08322  loss_box_reg: 0.0433  time: 2.9099  data_time: 2.3431  lr: 0.002  max_mem: 6207M
[04/02 20:09:53] d2.utils.events INFO:  eta: 2:46:49  iter: 4139  total_loss: 0.1287  loss_cls: 0.07831  loss_box_reg: 0.04643  time: 2.9097  data_time: 2.3848  lr: 0.002  max_mem: 6207M
[04/02 20:10:53] d2.utils.events INFO:  eta: 2:45:59  iter: 4159  total_loss: 0.1221  loss_cls: 0.07912  loss_box_reg: 0.04422  time: 2.9102  data_time: 2.5219  lr: 0.002  max_mem: 6207M
[04/02 20:11:48] d2.utils.events INFO:  eta: 2:44:51  iter: 4179  total_loss: 0.1291  loss_cls: 0.08489  loss_box_reg: 0.04172  time: 2.9094  data_time: 2.2651  lr: 0.002  max_mem: 6207M
[04/02 20:12:44] d2.utils.events INFO:  eta: 2:43:55  iter: 4199  total_loss: 0.1289  loss_cls: 0.07724  loss_box_reg: 0.05068  time: 2.9090  data_time: 2.3266  lr: 0.002  max_mem: 6207M
[04/02 20:13:41] d2.utils.events INFO:  eta: 2:43:02  iter: 4219  total_loss: 0.1413  loss_cls: 0.09127  loss_box_reg: 0.05281  time: 2.9086  data_time: 2.3375  lr: 0.002  max_mem: 6207M
[04/02 20:14:41] d2.utils.events INFO:  eta: 2:42:05  iter: 4239  total_loss: 0.1381  loss_cls: 0.08698  loss_box_reg: 0.04843  time: 2.9091  data_time: 2.5267  lr: 0.002  max_mem: 6207M
[04/02 20:15:40] d2.utils.events INFO:  eta: 2:41:05  iter: 4259  total_loss: 0.1347  loss_cls: 0.07989  loss_box_reg: 0.05256  time: 2.9092  data_time: 2.4648  lr: 0.002  max_mem: 6207M
[04/02 20:16:36] d2.utils.events INFO:  eta: 2:40:08  iter: 4279  total_loss: 0.1306  loss_cls: 0.07717  loss_box_reg: 0.04797  time: 2.9087  data_time: 2.3096  lr: 0.002  max_mem: 6207M
[04/02 20:17:36] d2.utils.events INFO:  eta: 2:39:13  iter: 4299  total_loss: 0.126  loss_cls: 0.07318  loss_box_reg: 0.04598  time: 2.9092  data_time: 2.5372  lr: 0.002  max_mem: 6207M
[04/02 20:18:32] d2.utils.events INFO:  eta: 2:38:11  iter: 4319  total_loss: 0.126  loss_cls: 0.08243  loss_box_reg: 0.04365  time: 2.9088  data_time: 2.3141  lr: 0.002  max_mem: 6207M
[04/02 20:19:29] d2.utils.events INFO:  eta: 2:37:06  iter: 4339  total_loss: 0.1304  loss_cls: 0.0808  loss_box_reg: 0.05061  time: 2.9084  data_time: 2.3453  lr: 0.002  max_mem: 6207M
[04/02 20:20:25] d2.utils.events INFO:  eta: 2:35:55  iter: 4359  total_loss: 0.1275  loss_cls: 0.08128  loss_box_reg: 0.04606  time: 2.9078  data_time: 2.3049  lr: 0.002  max_mem: 6207M
[04/02 20:20:50] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0004367.pth
[04/02 20:21:09] d2.data.datasets.coco INFO: Loaded 115 images in COCO format from /home/ps/DiskA/project/GZY1/Distill_GID_detectron2/datasets/PCBdataset/Annotations/PCBTRAIN.json
[04/02 20:21:09] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[04/02 20:21:09] d2.data.common INFO: Serializing 115 elements to byte tensors and concatenating them all ...
[04/02 20:21:09] d2.data.common INFO: Serialized dataset takes 0.06 MiB
[04/02 20:21:09] d2.evaluation.evaluator INFO: Start inference on 115 batches
[04/02 20:21:11] d2.evaluation.evaluator INFO: Inference done 11/115. Dataloading: 0.1094 s/iter. Inference: 0.0212 s/iter. Eval: 0.0002 s/iter. Total: 0.1308 s/iter. ETA=0:00:13
[04/02 20:21:16] d2.evaluation.evaluator INFO: Inference done 39/115. Dataloading: 0.1532 s/iter. Inference: 0.0211 s/iter. Eval: 0.0002 s/iter. Total: 0.1746 s/iter. ETA=0:00:13
[04/02 20:21:21] d2.evaluation.evaluator INFO: Inference done 70/115. Dataloading: 0.1480 s/iter. Inference: 0.0209 s/iter. Eval: 0.0002 s/iter. Total: 0.1692 s/iter. ETA=0:00:07
[04/02 20:21:26] d2.evaluation.evaluator INFO: Inference done 100/115. Dataloading: 0.1478 s/iter. Inference: 0.0211 s/iter. Eval: 0.0002 s/iter. Total: 0.1691 s/iter. ETA=0:00:02
[04/02 20:21:29] d2.evaluation.evaluator INFO: Total inference time: 0:00:18.569635 (0.168815 s / iter per device, on 1 devices)
[04/02 20:21:29] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:02 (0.021691 s / iter per device, on 1 devices)
[04/02 20:21:29] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[04/02 20:21:29] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[04/02 20:21:29] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[04/02 20:21:29] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/02 20:21:29] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.02 seconds.
[04/02 20:21:29] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/02 20:21:29] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.01 seconds.
[04/02 20:21:29] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 55.658 | 95.596 | 59.665 | 45.248 | 53.417 | 81.813 |
[04/02 20:21:29] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[04/02 20:21:29] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/02 20:21:29] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[04/02 20:21:29] d2.evaluation.testing INFO: copypaste: 55.6578,95.5960,59.6649,45.2475,53.4172,81.8135
[04/02 20:21:44] d2.utils.events INFO:  eta: 2:35:03  iter: 4379  total_loss: 0.125  loss_cls: 0.07502  loss_box_reg: 0.04623  time: 2.9080  data_time: 2.4638  lr: 0.002  max_mem: 6207M
[04/02 20:22:43] d2.utils.events INFO:  eta: 2:33:58  iter: 4399  total_loss: 0.1368  loss_cls: 0.08311  loss_box_reg: 0.0521  time: 2.9080  data_time: 2.4261  lr: 0.002  max_mem: 6207M
[04/02 20:23:38] d2.utils.events INFO:  eta: 2:32:36  iter: 4419  total_loss: 0.1317  loss_cls: 0.07653  loss_box_reg: 0.05324  time: 2.9073  data_time: 2.2622  lr: 0.002  max_mem: 6207M
[04/02 20:24:35] d2.utils.events INFO:  eta: 2:31:43  iter: 4439  total_loss: 0.1161  loss_cls: 0.07596  loss_box_reg: 0.04487  time: 2.9072  data_time: 2.3848  lr: 0.002  max_mem: 6207M
[04/02 20:25:34] d2.utils.events INFO:  eta: 2:30:32  iter: 4459  total_loss: 0.1158  loss_cls: 0.07887  loss_box_reg: 0.03755  time: 2.9072  data_time: 2.4392  lr: 0.002  max_mem: 6207M
[04/02 20:26:31] d2.utils.events INFO:  eta: 2:29:32  iter: 4479  total_loss: 0.1221  loss_cls: 0.08144  loss_box_reg: 0.04082  time: 2.9069  data_time: 2.3576  lr: 0.002  max_mem: 6207M
[04/02 20:27:25] d2.utils.events INFO:  eta: 2:28:26  iter: 4499  total_loss: 0.1247  loss_cls: 0.07593  loss_box_reg: 0.04287  time: 2.9061  data_time: 2.2420  lr: 0.002  max_mem: 6207M
[04/02 20:28:22] d2.utils.events INFO:  eta: 2:27:27  iter: 4519  total_loss: 0.12  loss_cls: 0.07992  loss_box_reg: 0.04653  time: 2.9059  data_time: 2.3815  lr: 0.002  max_mem: 6207M
[04/02 20:29:24] d2.utils.events INFO:  eta: 2:26:23  iter: 4539  total_loss: 0.1161  loss_cls: 0.07313  loss_box_reg: 0.04261  time: 2.9068  data_time: 2.6125  lr: 0.002  max_mem: 6207M
[04/02 20:30:20] d2.utils.events INFO:  eta: 2:25:24  iter: 4559  total_loss: 0.1252  loss_cls: 0.07534  loss_box_reg: 0.04469  time: 2.9063  data_time: 2.3126  lr: 0.002  max_mem: 6207M
[04/02 20:31:16] d2.utils.events INFO:  eta: 2:24:29  iter: 4579  total_loss: 0.1183  loss_cls: 0.07147  loss_box_reg: 0.04591  time: 2.9057  data_time: 2.2859  lr: 0.002  max_mem: 6207M
[04/02 20:32:13] d2.utils.events INFO:  eta: 2:23:31  iter: 4599  total_loss: 0.1471  loss_cls: 0.08504  loss_box_reg: 0.06596  time: 2.9055  data_time: 2.3652  lr: 0.002  max_mem: 6207M
[04/02 20:33:14] d2.utils.events INFO:  eta: 2:22:30  iter: 4619  total_loss: 0.1319  loss_cls: 0.07241  loss_box_reg: 0.05128  time: 2.9061  data_time: 2.5628  lr: 0.002  max_mem: 6207M
[04/02 20:34:12] d2.utils.events INFO:  eta: 2:21:32  iter: 4639  total_loss: 0.1227  loss_cls: 0.0799  loss_box_reg: 0.04342  time: 2.9061  data_time: 2.4124  lr: 0.002  max_mem: 6207M
[04/02 20:35:08] d2.utils.events INFO:  eta: 2:20:34  iter: 4659  total_loss: 0.1131  loss_cls: 0.07539  loss_box_reg: 0.03917  time: 2.9057  data_time: 2.3391  lr: 0.002  max_mem: 6207M
[04/02 20:36:06] d2.utils.events INFO:  eta: 2:19:34  iter: 4679  total_loss: 0.1247  loss_cls: 0.07389  loss_box_reg: 0.05138  time: 2.9057  data_time: 2.4031  lr: 0.002  max_mem: 6207M
[04/02 20:37:03] d2.utils.events INFO:  eta: 2:18:33  iter: 4699  total_loss: 0.1217  loss_cls: 0.0748  loss_box_reg: 0.04885  time: 2.9054  data_time: 2.3511  lr: 0.002  max_mem: 6207M
[04/02 20:38:02] d2.utils.events INFO:  eta: 2:17:58  iter: 4719  total_loss: 0.1239  loss_cls: 0.07123  loss_box_reg: 0.05133  time: 2.9056  data_time: 2.4692  lr: 0.002  max_mem: 6207M
[04/02 20:39:00] d2.utils.events INFO:  eta: 2:16:36  iter: 4739  total_loss: 0.1121  loss_cls: 0.07346  loss_box_reg: 0.04255  time: 2.9054  data_time: 2.3823  lr: 0.002  max_mem: 6207M
[04/02 20:39:56] d2.utils.events INFO:  eta: 2:15:40  iter: 4759  total_loss: 0.1194  loss_cls: 0.0754  loss_box_reg: 0.04091  time: 2.9050  data_time: 2.3197  lr: 0.002  max_mem: 6207M
[04/02 20:40:56] d2.utils.events INFO:  eta: 2:14:59  iter: 4779  total_loss: 0.1158  loss_cls: 0.07184  loss_box_reg: 0.04105  time: 2.9055  data_time: 2.5423  lr: 0.002  max_mem: 6207M
[04/02 20:41:53] d2.utils.events INFO:  eta: 2:14:06  iter: 4799  total_loss: 0.1151  loss_cls: 0.07654  loss_box_reg: 0.03793  time: 2.9051  data_time: 2.3275  lr: 0.002  max_mem: 6207M
[04/02 20:42:50] d2.utils.events INFO:  eta: 2:13:14  iter: 4819  total_loss: 0.1095  loss_cls: 0.07282  loss_box_reg: 0.03502  time: 2.9050  data_time: 2.3881  lr: 0.002  max_mem: 6207M
[04/02 20:43:49] d2.utils.events INFO:  eta: 2:12:06  iter: 4839  total_loss: 0.1154  loss_cls: 0.07549  loss_box_reg: 0.03765  time: 2.9051  data_time: 2.4408  lr: 0.002  max_mem: 6207M
[04/02 20:44:48] d2.utils.events INFO:  eta: 2:11:05  iter: 4859  total_loss: 0.1161  loss_cls: 0.08028  loss_box_reg: 0.03487  time: 2.9053  data_time: 2.4681  lr: 0.002  max_mem: 6207M
[04/02 20:45:46] d2.utils.events INFO:  eta: 2:10:07  iter: 4879  total_loss: 0.1186  loss_cls: 0.07517  loss_box_reg: 0.04423  time: 2.9054  data_time: 2.4402  lr: 0.002  max_mem: 6207M
[04/02 20:46:45] d2.utils.events INFO:  eta: 2:09:05  iter: 4899  total_loss: 0.1198  loss_cls: 0.07506  loss_box_reg: 0.04068  time: 2.9054  data_time: 2.4265  lr: 0.002  max_mem: 6207M
[04/02 20:47:44] d2.utils.events INFO:  eta: 2:08:17  iter: 4919  total_loss: 0.1141  loss_cls: 0.0724  loss_box_reg: 0.03793  time: 2.9056  data_time: 2.4696  lr: 0.002  max_mem: 6207M
[04/02 20:48:40] d2.utils.events INFO:  eta: 2:07:18  iter: 4939  total_loss: 0.1133  loss_cls: 0.07587  loss_box_reg: 0.03939  time: 2.9051  data_time: 2.2955  lr: 0.002  max_mem: 6207M
[04/02 20:49:38] d2.utils.events INFO:  eta: 2:06:20  iter: 4959  total_loss: 0.1027  loss_cls: 0.06595  loss_box_reg: 0.03532  time: 2.9052  data_time: 2.4284  lr: 0.002  max_mem: 6207M
[04/02 20:50:36] d2.utils.events INFO:  eta: 2:05:16  iter: 4979  total_loss: 0.106  loss_cls: 0.07098  loss_box_reg: 0.03634  time: 2.9051  data_time: 2.3961  lr: 0.002  max_mem: 6207M
[04/02 20:51:11] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0004991.pth
[04/02 20:51:36] d2.data.datasets.coco INFO: Loaded 115 images in COCO format from /home/ps/DiskA/project/GZY1/Distill_GID_detectron2/datasets/PCBdataset/Annotations/PCBTRAIN.json
[04/02 20:51:36] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[04/02 20:51:36] d2.data.common INFO: Serializing 115 elements to byte tensors and concatenating them all ...
[04/02 20:51:36] d2.data.common INFO: Serialized dataset takes 0.06 MiB
[04/02 20:51:36] d2.evaluation.evaluator INFO: Start inference on 115 batches
[04/02 20:51:38] d2.evaluation.evaluator INFO: Inference done 11/115. Dataloading: 0.0919 s/iter. Inference: 0.0197 s/iter. Eval: 0.0002 s/iter. Total: 0.1118 s/iter. ETA=0:00:11
[04/02 20:51:43] d2.evaluation.evaluator INFO: Inference done 37/115. Dataloading: 0.1558 s/iter. Inference: 0.0217 s/iter. Eval: 0.0002 s/iter. Total: 0.1777 s/iter. ETA=0:00:13
[04/02 20:51:48] d2.evaluation.evaluator INFO: Inference done 67/115. Dataloading: 0.1508 s/iter. Inference: 0.0220 s/iter. Eval: 0.0002 s/iter. Total: 0.1730 s/iter. ETA=0:00:08
[04/02 20:51:53] d2.evaluation.evaluator INFO: Inference done 100/115. Dataloading: 0.1440 s/iter. Inference: 0.0218 s/iter. Eval: 0.0002 s/iter. Total: 0.1661 s/iter. ETA=0:00:02
[04/02 20:51:56] d2.evaluation.evaluator INFO: Total inference time: 0:00:18.269185 (0.166084 s / iter per device, on 1 devices)
[04/02 20:51:56] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:02 (0.022375 s / iter per device, on 1 devices)
[04/02 20:51:56] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[04/02 20:51:56] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[04/02 20:51:56] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[04/02 20:51:56] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/02 20:51:56] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.02 seconds.
[04/02 20:51:56] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/02 20:51:56] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[04/02 20:51:56] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 63.151 | 97.568 | 71.833 | 50.099 | 61.427 | 84.791 |
[04/02 20:51:56] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[04/02 20:51:56] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/02 20:51:56] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[04/02 20:51:56] d2.evaluation.testing INFO: copypaste: 63.1513,97.5684,71.8329,50.0990,61.4274,84.7914
[04/02 20:51:56] d2.utils.events INFO:  eta: 2:04:13  iter: 4999  total_loss: 0.1079  loss_cls: 0.06922  loss_box_reg: 0.03593  time: 2.9055  data_time: 2.5255  lr: 0.002  max_mem: 6207M
[04/02 20:52:54] d2.utils.events INFO:  eta: 2:03:18  iter: 5019  total_loss: 0.1069  loss_cls: 0.06891  loss_box_reg: 0.03597  time: 2.9054  data_time: 2.3909  lr: 0.002  max_mem: 6207M
[04/02 20:53:48] d2.utils.events INFO:  eta: 2:02:16  iter: 5039  total_loss: 0.1201  loss_cls: 0.07334  loss_box_reg: 0.0421  time: 2.9047  data_time: 2.2528  lr: 0.002  max_mem: 6207M
[04/02 20:54:46] d2.utils.events INFO:  eta: 2:01:12  iter: 5059  total_loss: 0.1093  loss_cls: 0.07075  loss_box_reg: 0.03734  time: 2.9046  data_time: 2.3959  lr: 0.002  max_mem: 6207M
[04/02 20:55:45] d2.utils.events INFO:  eta: 2:00:14  iter: 5079  total_loss: 0.1194  loss_cls: 0.0747  loss_box_reg: 0.0441  time: 2.9049  data_time: 2.4800  lr: 0.002  max_mem: 6207M
[04/02 20:56:42] d2.utils.events INFO:  eta: 1:59:04  iter: 5099  total_loss: 0.1136  loss_cls: 0.072  loss_box_reg: 0.04213  time: 2.9045  data_time: 2.3219  lr: 0.002  max_mem: 6207M
[04/02 20:57:38] d2.utils.events INFO:  eta: 1:58:05  iter: 5119  total_loss: 0.105  loss_cls: 0.06498  loss_box_reg: 0.03782  time: 2.9042  data_time: 2.3326  lr: 0.002  max_mem: 6207M
[04/02 20:58:35] d2.utils.events INFO:  eta: 1:57:05  iter: 5139  total_loss: 0.1147  loss_cls: 0.07305  loss_box_reg: 0.04255  time: 2.9040  data_time: 2.3803  lr: 0.002  max_mem: 6207M
[04/02 20:59:35] d2.utils.events INFO:  eta: 1:55:58  iter: 5159  total_loss: 0.1165  loss_cls: 0.07181  loss_box_reg: 0.04525  time: 2.9044  data_time: 2.5053  lr: 0.002  max_mem: 6207M
[04/02 21:00:33] d2.utils.events INFO:  eta: 1:55:06  iter: 5179  total_loss: 0.108  loss_cls: 0.06753  loss_box_reg: 0.04169  time: 2.9044  data_time: 2.4182  lr: 0.002  max_mem: 6207M
[04/02 21:01:32] d2.utils.events INFO:  eta: 1:54:07  iter: 5199  total_loss: 0.1057  loss_cls: 0.06971  loss_box_reg: 0.03873  time: 2.9044  data_time: 2.4225  lr: 0.002  max_mem: 6207M
[04/02 21:02:31] d2.utils.events INFO:  eta: 1:53:06  iter: 5219  total_loss: 0.1125  loss_cls: 0.07534  loss_box_reg: 0.03445  time: 2.9047  data_time: 2.5025  lr: 0.002  max_mem: 6207M
[04/02 21:03:27] d2.utils.events INFO:  eta: 1:52:01  iter: 5239  total_loss: 0.1181  loss_cls: 0.08079  loss_box_reg: 0.03735  time: 2.9042  data_time: 2.2948  lr: 0.002  max_mem: 6207M
[04/02 21:04:26] d2.utils.events INFO:  eta: 1:51:08  iter: 5259  total_loss: 0.1175  loss_cls: 0.07765  loss_box_reg: 0.03773  time: 2.9045  data_time: 2.4805  lr: 0.002  max_mem: 6207M
[04/02 21:05:23] d2.utils.events INFO:  eta: 1:50:08  iter: 5279  total_loss: 0.1119  loss_cls: 0.07359  loss_box_reg: 0.03863  time: 2.9042  data_time: 2.3523  lr: 0.002  max_mem: 6207M
[04/02 21:06:20] d2.utils.events INFO:  eta: 1:48:58  iter: 5299  total_loss: 0.1135  loss_cls: 0.07137  loss_box_reg: 0.04253  time: 2.9039  data_time: 2.3337  lr: 0.002  max_mem: 6207M
[04/02 21:07:17] d2.utils.events INFO:  eta: 1:47:59  iter: 5319  total_loss: 0.1131  loss_cls: 0.07912  loss_box_reg: 0.03885  time: 2.9038  data_time: 2.3732  lr: 0.002  max_mem: 6207M
[04/02 21:08:13] d2.utils.events INFO:  eta: 1:46:56  iter: 5339  total_loss: 0.1072  loss_cls: 0.06827  loss_box_reg: 0.03884  time: 2.9034  data_time: 2.3173  lr: 0.002  max_mem: 6207M
[04/02 21:09:11] d2.utils.events INFO:  eta: 1:45:52  iter: 5359  total_loss: 0.1043  loss_cls: 0.06993  loss_box_reg: 0.03461  time: 2.9034  data_time: 2.4184  lr: 0.002  max_mem: 6207M
[04/02 21:10:12] d2.utils.events INFO:  eta: 1:45:00  iter: 5379  total_loss: 0.1164  loss_cls: 0.07586  loss_box_reg: 0.03858  time: 2.9038  data_time: 2.5385  lr: 0.002  max_mem: 6207M
[04/02 21:11:06] d2.utils.events INFO:  eta: 1:43:53  iter: 5399  total_loss: 0.1083  loss_cls: 0.07151  loss_box_reg: 0.03906  time: 2.9032  data_time: 2.2446  lr: 0.002  max_mem: 6207M
[04/02 21:12:04] d2.utils.events INFO:  eta: 1:43:02  iter: 5419  total_loss: 0.1219  loss_cls: 0.07752  loss_box_reg: 0.05263  time: 2.9031  data_time: 2.3868  lr: 0.002  max_mem: 6207M
[04/02 21:13:01] d2.utils.events INFO:  eta: 1:42:10  iter: 5439  total_loss: 0.1054  loss_cls: 0.07106  loss_box_reg: 0.03816  time: 2.9029  data_time: 2.3857  lr: 0.002  max_mem: 6207M
[04/02 21:13:59] d2.utils.events INFO:  eta: 1:41:00  iter: 5459  total_loss: 0.113  loss_cls: 0.07097  loss_box_reg: 0.04079  time: 2.9028  data_time: 2.3822  lr: 0.002  max_mem: 6207M
[04/02 21:14:56] d2.utils.events INFO:  eta: 1:40:04  iter: 5479  total_loss: 0.1129  loss_cls: 0.07747  loss_box_reg: 0.03452  time: 2.9026  data_time: 2.3493  lr: 0.002  max_mem: 6207M
[04/02 21:15:54] d2.utils.events INFO:  eta: 1:39:13  iter: 5499  total_loss: 0.1017  loss_cls: 0.07007  loss_box_reg: 0.03619  time: 2.9026  data_time: 2.4119  lr: 0.002  max_mem: 6207M
[04/02 21:16:51] d2.utils.events INFO:  eta: 1:38:08  iter: 5519  total_loss: 0.1015  loss_cls: 0.06656  loss_box_reg: 0.03522  time: 2.9025  data_time: 2.3956  lr: 0.002  max_mem: 6207M
[04/02 21:17:52] d2.utils.events INFO:  eta: 1:37:12  iter: 5539  total_loss: 0.1009  loss_cls: 0.06336  loss_box_reg: 0.03761  time: 2.9029  data_time: 2.5313  lr: 0.002  max_mem: 6207M
[04/02 21:18:47] d2.utils.events INFO:  eta: 1:36:06  iter: 5559  total_loss: 0.1093  loss_cls: 0.0709  loss_box_reg: 0.03991  time: 2.9024  data_time: 2.2809  lr: 0.002  max_mem: 6207M
[04/02 21:19:43] d2.utils.events INFO:  eta: 1:35:04  iter: 5579  total_loss: 0.1054  loss_cls: 0.07283  loss_box_reg: 0.03462  time: 2.9021  data_time: 2.3199  lr: 0.002  max_mem: 6207M
[04/02 21:20:44] d2.utils.events INFO:  eta: 1:34:05  iter: 5599  total_loss: 0.1074  loss_cls: 0.0687  loss_box_reg: 0.03571  time: 2.9025  data_time: 2.5345  lr: 0.002  max_mem: 6207M
[04/02 21:21:31] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0005615.pth
[04/02 21:21:45] d2.utils.events INFO:  eta: 1:33:05  iter: 5619  total_loss: 0.1023  loss_cls: 0.06671  loss_box_reg: 0.0363  time: 2.9030  data_time: 2.5583  lr: 0.002  max_mem: 6207M
[04/02 21:21:58] d2.data.datasets.coco INFO: Loaded 115 images in COCO format from /home/ps/DiskA/project/GZY1/Distill_GID_detectron2/datasets/PCBdataset/Annotations/PCBTRAIN.json
[04/02 21:21:58] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[04/02 21:21:58] d2.data.common INFO: Serializing 115 elements to byte tensors and concatenating them all ...
[04/02 21:21:58] d2.data.common INFO: Serialized dataset takes 0.06 MiB
[04/02 21:21:58] d2.evaluation.evaluator INFO: Start inference on 115 batches
[04/02 21:22:00] d2.evaluation.evaluator INFO: Inference done 11/115. Dataloading: 0.1172 s/iter. Inference: 0.0216 s/iter. Eval: 0.0002 s/iter. Total: 0.1390 s/iter. ETA=0:00:14
[04/02 21:22:05] d2.evaluation.evaluator INFO: Inference done 39/115. Dataloading: 0.1542 s/iter. Inference: 0.0216 s/iter. Eval: 0.0002 s/iter. Total: 0.1760 s/iter. ETA=0:00:13
[04/02 21:22:10] d2.evaluation.evaluator INFO: Inference done 70/115. Dataloading: 0.1484 s/iter. Inference: 0.0207 s/iter. Eval: 0.0002 s/iter. Total: 0.1694 s/iter. ETA=0:00:07
[04/02 21:22:15] d2.evaluation.evaluator INFO: Inference done 103/115. Dataloading: 0.1427 s/iter. Inference: 0.0208 s/iter. Eval: 0.0002 s/iter. Total: 0.1638 s/iter. ETA=0:00:01
[04/02 21:22:17] d2.evaluation.evaluator INFO: Total inference time: 0:00:18.121753 (0.164743 s / iter per device, on 1 devices)
[04/02 21:22:17] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:02 (0.021310 s / iter per device, on 1 devices)
[04/02 21:22:17] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[04/02 21:22:17] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[04/02 21:22:17] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[04/02 21:22:17] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/02 21:22:17] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.02 seconds.
[04/02 21:22:17] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/02 21:22:17] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[04/02 21:22:17] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 61.294 | 96.443 | 72.797 | 50.000 | 59.827 | 77.487 |
[04/02 21:22:17] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[04/02 21:22:17] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/02 21:22:17] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[04/02 21:22:17] d2.evaluation.testing INFO: copypaste: 61.2936,96.4433,72.7967,50.0000,59.8273,77.4869
[04/02 21:23:00] d2.utils.events INFO:  eta: 1:32:02  iter: 5639  total_loss: 0.1116  loss_cls: 0.07517  loss_box_reg: 0.03593  time: 2.9026  data_time: 2.3043  lr: 0.002  max_mem: 6207M
[04/02 21:23:55] d2.utils.events INFO:  eta: 1:31:01  iter: 5659  total_loss: 0.1039  loss_cls: 0.06921  loss_box_reg: 0.03585  time: 2.9020  data_time: 2.2585  lr: 0.002  max_mem: 6207M
[04/02 21:24:56] d2.utils.events INFO:  eta: 1:30:04  iter: 5679  total_loss: 0.09836  loss_cls: 0.0639  loss_box_reg: 0.03405  time: 2.9024  data_time: 2.5378  lr: 0.002  max_mem: 6207M
[04/02 21:25:55] d2.utils.events INFO:  eta: 1:29:03  iter: 5699  total_loss: 0.103  loss_cls: 0.06728  loss_box_reg: 0.0343  time: 2.9026  data_time: 2.4704  lr: 0.002  max_mem: 6207M
[04/02 21:26:55] d2.utils.events INFO:  eta: 1:27:58  iter: 5719  total_loss: 0.1041  loss_cls: 0.06695  loss_box_reg: 0.03592  time: 2.9030  data_time: 2.5348  lr: 0.002  max_mem: 6207M
[04/02 21:27:51] d2.utils.events INFO:  eta: 1:26:59  iter: 5739  total_loss: 0.1105  loss_cls: 0.07278  loss_box_reg: 0.0383  time: 2.9027  data_time: 2.3119  lr: 0.002  max_mem: 6207M
[04/02 21:28:52] d2.utils.events INFO:  eta: 1:26:05  iter: 5759  total_loss: 0.1033  loss_cls: 0.07316  loss_box_reg: 0.03608  time: 2.9031  data_time: 2.5478  lr: 0.002  max_mem: 6207M
[04/02 21:29:52] d2.utils.events INFO:  eta: 1:25:05  iter: 5779  total_loss: 0.1148  loss_cls: 0.07236  loss_box_reg: 0.04141  time: 2.9035  data_time: 2.5207  lr: 0.002  max_mem: 6207M
[04/02 21:30:49] d2.utils.events INFO:  eta: 1:24:02  iter: 5799  total_loss: 0.1042  loss_cls: 0.06476  loss_box_reg: 0.03691  time: 2.9033  data_time: 2.3635  lr: 0.002  max_mem: 6207M
[04/02 21:31:47] d2.utils.events INFO:  eta: 1:23:02  iter: 5819  total_loss: 0.1113  loss_cls: 0.07245  loss_box_reg: 0.03629  time: 2.9033  data_time: 2.4119  lr: 0.002  max_mem: 6207M
[04/02 21:32:49] d2.utils.events INFO:  eta: 1:22:07  iter: 5839  total_loss: 0.1034  loss_cls: 0.07064  loss_box_reg: 0.03539  time: 2.9039  data_time: 2.5922  lr: 0.002  max_mem: 6207M
[04/02 21:33:45] d2.utils.events INFO:  eta: 1:21:07  iter: 5859  total_loss: 0.1009  loss_cls: 0.06198  loss_box_reg: 0.03609  time: 2.9036  data_time: 2.3482  lr: 0.002  max_mem: 6207M
[04/02 21:34:44] d2.utils.events INFO:  eta: 1:20:07  iter: 5879  total_loss: 0.1006  loss_cls: 0.06697  loss_box_reg: 0.03445  time: 2.9037  data_time: 2.4352  lr: 0.002  max_mem: 6207M
[04/02 21:35:39] d2.utils.events INFO:  eta: 1:19:07  iter: 5899  total_loss: 0.1112  loss_cls: 0.0751  loss_box_reg: 0.03803  time: 2.9033  data_time: 2.3031  lr: 0.002  max_mem: 6207M
[04/02 21:36:40] d2.utils.events INFO:  eta: 1:18:04  iter: 5919  total_loss: 0.1024  loss_cls: 0.06704  loss_box_reg: 0.03531  time: 2.9036  data_time: 2.5162  lr: 0.002  max_mem: 6207M
[04/02 21:37:36] d2.utils.events INFO:  eta: 1:17:02  iter: 5939  total_loss: 0.09933  loss_cls: 0.0677  loss_box_reg: 0.03584  time: 2.9034  data_time: 2.3595  lr: 0.002  max_mem: 6207M
[04/02 21:38:35] d2.utils.events INFO:  eta: 1:16:02  iter: 5959  total_loss: 0.09536  loss_cls: 0.06504  loss_box_reg: 0.03382  time: 2.9034  data_time: 2.4348  lr: 0.002  max_mem: 6207M
[04/02 21:39:35] d2.utils.events INFO:  eta: 1:15:05  iter: 5979  total_loss: 0.09755  loss_cls: 0.06321  loss_box_reg: 0.03268  time: 2.9038  data_time: 2.5248  lr: 0.002  max_mem: 6207M
[04/02 21:40:36] d2.utils.events INFO:  eta: 1:14:05  iter: 5999  total_loss: 0.09357  loss_cls: 0.05848  loss_box_reg: 0.03602  time: 2.9042  data_time: 2.5441  lr: 0.002  max_mem: 6207M
[04/02 21:41:33] d2.utils.events INFO:  eta: 1:13:07  iter: 6019  total_loss: 0.1014  loss_cls: 0.06901  loss_box_reg: 0.03386  time: 2.9042  data_time: 2.3996  lr: 0.002  max_mem: 6207M
[04/02 21:42:31] d2.utils.events INFO:  eta: 1:12:08  iter: 6039  total_loss: 0.09909  loss_cls: 0.064  loss_box_reg: 0.03513  time: 2.9041  data_time: 2.3922  lr: 0.002  max_mem: 6207M
[04/02 21:43:28] d2.utils.events INFO:  eta: 1:11:11  iter: 6059  total_loss: 0.09407  loss_cls: 0.06387  loss_box_reg: 0.03413  time: 2.9038  data_time: 2.3436  lr: 0.002  max_mem: 6207M
[04/02 21:44:28] d2.utils.events INFO:  eta: 1:10:13  iter: 6079  total_loss: 0.1044  loss_cls: 0.06872  loss_box_reg: 0.03489  time: 2.9042  data_time: 2.5338  lr: 0.002  max_mem: 6207M
[04/02 21:45:24] d2.utils.events INFO:  eta: 1:09:13  iter: 6099  total_loss: 0.1029  loss_cls: 0.06642  loss_box_reg: 0.03416  time: 2.9038  data_time: 2.2975  lr: 0.002  max_mem: 6207M
[04/02 21:46:20] d2.utils.events INFO:  eta: 1:08:10  iter: 6119  total_loss: 0.1012  loss_cls: 0.06689  loss_box_reg: 0.03509  time: 2.9036  data_time: 2.3526  lr: 0.002  max_mem: 6207M
[04/02 21:47:20] d2.utils.events INFO:  eta: 1:07:13  iter: 6139  total_loss: 0.09713  loss_cls: 0.06459  loss_box_reg: 0.03236  time: 2.9039  data_time: 2.5110  lr: 0.002  max_mem: 6207M
[04/02 21:48:19] d2.utils.events INFO:  eta: 1:06:12  iter: 6159  total_loss: 0.09514  loss_cls: 0.06204  loss_box_reg: 0.03085  time: 2.9040  data_time: 2.4648  lr: 0.002  max_mem: 6207M
[04/02 21:49:18] d2.utils.events INFO:  eta: 1:05:16  iter: 6179  total_loss: 0.1176  loss_cls: 0.07545  loss_box_reg: 0.03293  time: 2.9042  data_time: 2.4688  lr: 0.002  max_mem: 6207M
[04/02 21:50:16] d2.utils.events INFO:  eta: 1:04:17  iter: 6199  total_loss: 0.1014  loss_cls: 0.06656  loss_box_reg: 0.03615  time: 2.9041  data_time: 2.3914  lr: 0.002  max_mem: 6207M
[04/02 21:51:20] d2.utils.events INFO:  eta: 1:03:19  iter: 6219  total_loss: 0.1026  loss_cls: 0.0633  loss_box_reg: 0.03743  time: 2.9050  data_time: 2.7082  lr: 0.002  max_mem: 6207M
[04/02 21:52:20] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0006239.pth
[04/02 21:52:20] d2.utils.events INFO:  eta: 1:02:22  iter: 6239  total_loss: 0.09542  loss_cls: 0.06227  loss_box_reg: 0.03479  time: 2.9053  data_time: 2.4981  lr: 0.002  max_mem: 6207M
[04/02 21:52:48] d2.data.datasets.coco INFO: Loaded 115 images in COCO format from /home/ps/DiskA/project/GZY1/Distill_GID_detectron2/datasets/PCBdataset/Annotations/PCBTRAIN.json
[04/02 21:52:48] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[04/02 21:52:48] d2.data.common INFO: Serializing 115 elements to byte tensors and concatenating them all ...
[04/02 21:52:48] d2.data.common INFO: Serialized dataset takes 0.06 MiB
[04/02 21:52:48] d2.evaluation.evaluator INFO: Start inference on 115 batches
[04/02 21:52:51] d2.evaluation.evaluator INFO: Inference done 11/115. Dataloading: 0.1083 s/iter. Inference: 0.0225 s/iter. Eval: 0.0002 s/iter. Total: 0.1310 s/iter. ETA=0:00:13
[04/02 21:52:56] d2.evaluation.evaluator INFO: Inference done 38/115. Dataloading: 0.1546 s/iter. Inference: 0.0206 s/iter. Eval: 0.0002 s/iter. Total: 0.1754 s/iter. ETA=0:00:13
[04/02 21:53:01] d2.evaluation.evaluator INFO: Inference done 69/115. Dataloading: 0.1496 s/iter. Inference: 0.0208 s/iter. Eval: 0.0002 s/iter. Total: 0.1707 s/iter. ETA=0:00:07
[04/02 21:53:06] d2.evaluation.evaluator INFO: Inference done 99/115. Dataloading: 0.1496 s/iter. Inference: 0.0209 s/iter. Eval: 0.0002 s/iter. Total: 0.1708 s/iter. ETA=0:00:02
[04/02 21:53:08] d2.evaluation.evaluator INFO: Total inference time: 0:00:18.715217 (0.170138 s / iter per device, on 1 devices)
[04/02 21:53:08] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:02 (0.021699 s / iter per device, on 1 devices)
[04/02 21:53:08] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[04/02 21:53:08] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[04/02 21:53:08] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[04/02 21:53:09] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/02 21:53:09] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.01 seconds.
[04/02 21:53:09] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/02 21:53:09] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[04/02 21:53:09] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 63.626 | 97.509 | 75.663 | 60.198 | 61.947 | 79.824 |
[04/02 21:53:09] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[04/02 21:53:09] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/02 21:53:09] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[04/02 21:53:09] d2.evaluation.testing INFO: copypaste: 63.6264,97.5091,75.6634,60.1980,61.9467,79.8237
[04/02 21:53:37] d2.utils.events INFO:  eta: 1:01:18  iter: 6259  total_loss: 0.09933  loss_cls: 0.06671  loss_box_reg: 0.03391  time: 2.9051  data_time: 2.3537  lr: 0.002  max_mem: 6207M
[04/02 21:54:35] d2.utils.events INFO:  eta: 1:00:19  iter: 6279  total_loss: 0.09457  loss_cls: 0.05829  loss_box_reg: 0.03809  time: 2.9050  data_time: 2.4168  lr: 0.002  max_mem: 6207M
[04/02 21:55:34] d2.utils.events INFO:  eta: 0:59:23  iter: 6299  total_loss: 0.1026  loss_cls: 0.06804  loss_box_reg: 0.03541  time: 2.9051  data_time: 2.4424  lr: 0.002  max_mem: 6207M
[04/02 21:56:34] d2.utils.events INFO:  eta: 0:58:20  iter: 6319  total_loss: 0.09973  loss_cls: 0.06389  loss_box_reg: 0.03644  time: 2.9055  data_time: 2.5317  lr: 0.002  max_mem: 6207M
[04/02 21:57:33] d2.utils.events INFO:  eta: 0:57:25  iter: 6339  total_loss: 0.09409  loss_cls: 0.06289  loss_box_reg: 0.03056  time: 2.9056  data_time: 2.4617  lr: 0.002  max_mem: 6207M
[04/02 21:58:30] d2.utils.events INFO:  eta: 0:56:25  iter: 6359  total_loss: 0.1013  loss_cls: 0.06899  loss_box_reg: 0.03232  time: 2.9054  data_time: 2.3486  lr: 0.002  max_mem: 6207M
[04/02 21:59:29] d2.utils.events INFO:  eta: 0:55:21  iter: 6379  total_loss: 0.0998  loss_cls: 0.06605  loss_box_reg: 0.03126  time: 2.9055  data_time: 2.4655  lr: 0.002  max_mem: 6207M
[04/02 22:00:28] d2.utils.events INFO:  eta: 0:54:27  iter: 6399  total_loss: 0.1165  loss_cls: 0.07753  loss_box_reg: 0.03901  time: 2.9056  data_time: 2.4562  lr: 0.002  max_mem: 6207M
[04/02 22:01:24] d2.utils.events INFO:  eta: 0:53:23  iter: 6419  total_loss: 0.1087  loss_cls: 0.0682  loss_box_reg: 0.04007  time: 2.9053  data_time: 2.2949  lr: 0.002  max_mem: 6207M
[04/02 22:02:22] d2.utils.events INFO:  eta: 0:52:24  iter: 6439  total_loss: 0.09115  loss_cls: 0.05817  loss_box_reg: 0.0319  time: 2.9053  data_time: 2.4299  lr: 0.002  max_mem: 6207M
[04/02 22:03:21] d2.utils.events INFO:  eta: 0:51:29  iter: 6459  total_loss: 0.09689  loss_cls: 0.0597  loss_box_reg: 0.03329  time: 2.9054  data_time: 2.4694  lr: 0.002  max_mem: 6207M
[04/02 22:04:18] d2.utils.events INFO:  eta: 0:50:27  iter: 6479  total_loss: 0.09602  loss_cls: 0.06302  loss_box_reg: 0.03058  time: 2.9053  data_time: 2.3850  lr: 0.002  max_mem: 6207M
[04/02 22:05:17] d2.utils.events INFO:  eta: 0:49:28  iter: 6499  total_loss: 0.09843  loss_cls: 0.06086  loss_box_reg: 0.03721  time: 2.9054  data_time: 2.4351  lr: 0.002  max_mem: 6207M
[04/02 22:06:12] d2.utils.events INFO:  eta: 0:48:27  iter: 6519  total_loss: 0.09765  loss_cls: 0.06425  loss_box_reg: 0.03531  time: 2.9050  data_time: 2.2913  lr: 0.002  max_mem: 6207M
[04/02 22:07:12] d2.utils.events INFO:  eta: 0:47:26  iter: 6539  total_loss: 0.09306  loss_cls: 0.06219  loss_box_reg: 0.03002  time: 2.9052  data_time: 2.4907  lr: 0.002  max_mem: 6207M
[04/02 22:08:14] d2.utils.events INFO:  eta: 0:46:31  iter: 6559  total_loss: 0.09896  loss_cls: 0.06277  loss_box_reg: 0.0322  time: 2.9058  data_time: 2.6176  lr: 0.002  max_mem: 6207M
[04/02 22:09:09] d2.utils.events INFO:  eta: 0:45:32  iter: 6579  total_loss: 0.09926  loss_cls: 0.06565  loss_box_reg: 0.03202  time: 2.9053  data_time: 2.2562  lr: 0.002  max_mem: 6207M
[04/02 22:10:08] d2.utils.events INFO:  eta: 0:44:32  iter: 6599  total_loss: 0.1024  loss_cls: 0.06985  loss_box_reg: 0.02953  time: 2.9054  data_time: 2.4439  lr: 0.002  max_mem: 6207M
[04/02 22:11:08] d2.utils.events INFO:  eta: 0:43:37  iter: 6619  total_loss: 0.1055  loss_cls: 0.06654  loss_box_reg: 0.03706  time: 2.9057  data_time: 2.5451  lr: 0.002  max_mem: 6207M
[04/02 22:12:03] d2.utils.events INFO:  eta: 0:42:34  iter: 6639  total_loss: 0.1029  loss_cls: 0.06659  loss_box_reg: 0.03573  time: 2.9052  data_time: 2.2337  lr: 0.002  max_mem: 6207M
[04/02 22:13:02] d2.utils.events INFO:  eta: 0:41:37  iter: 6659  total_loss: 0.1044  loss_cls: 0.06934  loss_box_reg: 0.03621  time: 2.9053  data_time: 2.4616  lr: 0.002  max_mem: 6207M
[04/02 22:14:02] d2.utils.events INFO:  eta: 0:40:47  iter: 6679  total_loss: 0.1001  loss_cls: 0.06039  loss_box_reg: 0.03471  time: 2.9056  data_time: 2.5169  lr: 0.002  max_mem: 6207M
[04/02 22:15:01] d2.utils.events INFO:  eta: 0:39:48  iter: 6699  total_loss: 0.09832  loss_cls: 0.06762  loss_box_reg: 0.03082  time: 2.9057  data_time: 2.4563  lr: 0.002  max_mem: 6207M
[04/02 22:15:59] d2.utils.events INFO:  eta: 0:38:49  iter: 6719  total_loss: 0.09763  loss_cls: 0.06555  loss_box_reg: 0.03174  time: 2.9058  data_time: 2.4463  lr: 0.002  max_mem: 6207M
[04/02 22:17:02] d2.utils.events INFO:  eta: 0:37:53  iter: 6739  total_loss: 0.0875  loss_cls: 0.06075  loss_box_reg: 0.02793  time: 2.9064  data_time: 2.6228  lr: 0.002  max_mem: 6207M
[04/02 22:18:00] d2.utils.events INFO:  eta: 0:36:51  iter: 6759  total_loss: 0.09706  loss_cls: 0.06814  loss_box_reg: 0.03164  time: 2.9065  data_time: 2.4572  lr: 0.002  max_mem: 6207M
[04/02 22:19:01] d2.utils.events INFO:  eta: 0:35:54  iter: 6779  total_loss: 0.08733  loss_cls: 0.05366  loss_box_reg: 0.03219  time: 2.9069  data_time: 2.5464  lr: 0.002  max_mem: 6207M
[04/02 22:20:02] d2.utils.events INFO:  eta: 0:34:56  iter: 6799  total_loss: 0.09577  loss_cls: 0.058  loss_box_reg: 0.03422  time: 2.9072  data_time: 2.5360  lr: 0.002  max_mem: 6207M
[04/02 22:20:59] d2.utils.events INFO:  eta: 0:33:56  iter: 6819  total_loss: 0.1048  loss_cls: 0.06267  loss_box_reg: 0.0332  time: 2.9072  data_time: 2.4057  lr: 0.002  max_mem: 6207M
[04/02 22:21:59] d2.utils.events INFO:  eta: 0:32:54  iter: 6839  total_loss: 0.09454  loss_cls: 0.05889  loss_box_reg: 0.03386  time: 2.9073  data_time: 2.4806  lr: 0.002  max_mem: 6207M
[04/02 22:22:57] d2.utils.events INFO:  eta: 0:31:54  iter: 6859  total_loss: 0.1036  loss_cls: 0.06744  loss_box_reg: 0.0356  time: 2.9073  data_time: 2.4149  lr: 0.002  max_mem: 6207M
[04/02 22:23:09] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0006863.pth
[04/02 22:23:42] d2.data.datasets.coco INFO: Loaded 115 images in COCO format from /home/ps/DiskA/project/GZY1/Distill_GID_detectron2/datasets/PCBdataset/Annotations/PCBTRAIN.json
[04/02 22:23:42] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[04/02 22:23:42] d2.data.common INFO: Serializing 115 elements to byte tensors and concatenating them all ...
[04/02 22:23:42] d2.data.common INFO: Serialized dataset takes 0.06 MiB
[04/02 22:23:42] d2.evaluation.evaluator INFO: Start inference on 115 batches
[04/02 22:23:44] d2.evaluation.evaluator INFO: Inference done 11/115. Dataloading: 0.1120 s/iter. Inference: 0.0252 s/iter. Eval: 0.0002 s/iter. Total: 0.1374 s/iter. ETA=0:00:14
[04/02 22:23:49] d2.evaluation.evaluator INFO: Inference done 39/115. Dataloading: 0.1531 s/iter. Inference: 0.0223 s/iter. Eval: 0.0002 s/iter. Total: 0.1757 s/iter. ETA=0:00:13
[04/02 22:23:54] d2.evaluation.evaluator INFO: Inference done 70/115. Dataloading: 0.1491 s/iter. Inference: 0.0215 s/iter. Eval: 0.0002 s/iter. Total: 0.1708 s/iter. ETA=0:00:07
[04/02 22:23:59] d2.evaluation.evaluator INFO: Inference done 96/115. Dataloading: 0.1555 s/iter. Inference: 0.0215 s/iter. Eval: 0.0002 s/iter. Total: 0.1772 s/iter. ETA=0:00:03
[04/02 22:24:02] d2.evaluation.evaluator INFO: Total inference time: 0:00:19.598161 (0.178165 s / iter per device, on 1 devices)
[04/02 22:24:02] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:02 (0.022288 s / iter per device, on 1 devices)
[04/02 22:24:02] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[04/02 22:24:02] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[04/02 22:24:02] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[04/02 22:24:02] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/02 22:24:02] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.02 seconds.
[04/02 22:24:02] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/02 22:24:02] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[04/02 22:24:02] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 64.637 | 97.532 | 76.397 | 45.050 | 62.814 | 83.779 |
[04/02 22:24:02] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[04/02 22:24:02] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/02 22:24:02] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[04/02 22:24:02] d2.evaluation.testing INFO: copypaste: 64.6374,97.5317,76.3965,45.0495,62.8144,83.7789
[04/02 22:24:15] d2.utils.events INFO:  eta: 0:30:54  iter: 6879  total_loss: 0.09565  loss_cls: 0.06449  loss_box_reg: 0.02943  time: 2.9072  data_time: 2.3689  lr: 0.002  max_mem: 6207M
[04/02 22:25:16] d2.utils.events INFO:  eta: 0:29:56  iter: 6899  total_loss: 0.09466  loss_cls: 0.05545  loss_box_reg: 0.03386  time: 2.9076  data_time: 2.5603  lr: 0.002  max_mem: 6207M
[04/02 22:26:16] d2.utils.events INFO:  eta: 0:28:56  iter: 6919  total_loss: 0.1034  loss_cls: 0.07259  loss_box_reg: 0.03321  time: 2.9078  data_time: 2.5155  lr: 0.002  max_mem: 6207M
[04/02 22:27:16] d2.utils.events INFO:  eta: 0:27:59  iter: 6939  total_loss: 0.09899  loss_cls: 0.06668  loss_box_reg: 0.03539  time: 2.9080  data_time: 2.4816  lr: 0.002  max_mem: 6207M
[04/02 22:28:13] d2.utils.events INFO:  eta: 0:27:00  iter: 6959  total_loss: 0.0886  loss_cls: 0.0614  loss_box_reg: 0.03085  time: 2.9078  data_time: 2.3712  lr: 0.002  max_mem: 6207M
[04/02 22:29:11] d2.utils.events INFO:  eta: 0:25:59  iter: 6979  total_loss: 0.1066  loss_cls: 0.07267  loss_box_reg: 0.0324  time: 2.9078  data_time: 2.4137  lr: 0.002  max_mem: 6207M
[04/02 22:30:11] d2.utils.events INFO:  eta: 0:24:59  iter: 6999  total_loss: 0.09416  loss_cls: 0.06283  loss_box_reg: 0.03165  time: 2.9081  data_time: 2.5335  lr: 0.002  max_mem: 6207M
[04/02 22:31:11] d2.utils.events INFO:  eta: 0:23:59  iter: 7019  total_loss: 0.0966  loss_cls: 0.06699  loss_box_reg: 0.02911  time: 2.9083  data_time: 2.4795  lr: 0.0002  max_mem: 6207M
[04/02 22:32:08] d2.utils.events INFO:  eta: 0:23:01  iter: 7039  total_loss: 0.08175  loss_cls: 0.05679  loss_box_reg: 0.02511  time: 2.9082  data_time: 2.3855  lr: 0.0002  max_mem: 6207M
[04/02 22:33:06] d2.utils.events INFO:  eta: 0:22:01  iter: 7059  total_loss: 0.07689  loss_cls: 0.0553  loss_box_reg: 0.02475  time: 2.9081  data_time: 2.3926  lr: 0.0002  max_mem: 6207M
[04/02 22:34:06] d2.utils.events INFO:  eta: 0:21:02  iter: 7079  total_loss: 0.08266  loss_cls: 0.05516  loss_box_reg: 0.02746  time: 2.9084  data_time: 2.5362  lr: 0.0002  max_mem: 6207M
[04/02 22:35:04] d2.utils.events INFO:  eta: 0:20:03  iter: 7099  total_loss: 0.08092  loss_cls: 0.05523  loss_box_reg: 0.02489  time: 2.9084  data_time: 2.4059  lr: 0.0002  max_mem: 6207M
[04/02 22:36:00] d2.utils.events INFO:  eta: 0:19:03  iter: 7119  total_loss: 0.07806  loss_cls: 0.05012  loss_box_reg: 0.02448  time: 2.9081  data_time: 2.3251  lr: 0.0002  max_mem: 6207M
[04/02 22:36:58] d2.utils.events INFO:  eta: 0:18:02  iter: 7139  total_loss: 0.08227  loss_cls: 0.05596  loss_box_reg: 0.02514  time: 2.9081  data_time: 2.4271  lr: 0.0002  max_mem: 6207M
[04/02 22:37:58] d2.utils.events INFO:  eta: 0:17:04  iter: 7159  total_loss: 0.08593  loss_cls: 0.05886  loss_box_reg: 0.02495  time: 2.9084  data_time: 2.5179  lr: 0.0002  max_mem: 6207M
[04/02 22:38:59] d2.utils.events INFO:  eta: 0:16:04  iter: 7179  total_loss: 0.07451  loss_cls: 0.05077  loss_box_reg: 0.02437  time: 2.9088  data_time: 2.5610  lr: 0.0002  max_mem: 6207M
[04/02 22:39:59] d2.utils.events INFO:  eta: 0:15:02  iter: 7199  total_loss: 0.08037  loss_cls: 0.05606  loss_box_reg: 0.02557  time: 2.9090  data_time: 2.5073  lr: 0.0002  max_mem: 6207M
[04/02 22:40:59] d2.utils.events INFO:  eta: 0:14:02  iter: 7219  total_loss: 0.08269  loss_cls: 0.0562  loss_box_reg: 0.02458  time: 2.9092  data_time: 2.5170  lr: 0.0002  max_mem: 6207M
[04/02 22:41:56] d2.utils.events INFO:  eta: 0:13:01  iter: 7239  total_loss: 0.08252  loss_cls: 0.05753  loss_box_reg: 0.02507  time: 2.9090  data_time: 2.3529  lr: 0.0002  max_mem: 6207M
[04/02 22:42:53] d2.utils.events INFO:  eta: 0:12:01  iter: 7259  total_loss: 0.08571  loss_cls: 0.05758  loss_box_reg: 0.02672  time: 2.9089  data_time: 2.3540  lr: 0.0002  max_mem: 6207M
[04/02 22:43:49] d2.utils.events INFO:  eta: 0:11:00  iter: 7279  total_loss: 0.07971  loss_cls: 0.05598  loss_box_reg: 0.02333  time: 2.9085  data_time: 2.2887  lr: 0.0002  max_mem: 6207M
[04/02 22:44:48] d2.utils.events INFO:  eta: 0:10:00  iter: 7299  total_loss: 0.07568  loss_cls: 0.0528  loss_box_reg: 0.02501  time: 2.9086  data_time: 2.4712  lr: 0.0002  max_mem: 6207M
[04/02 22:45:45] d2.utils.events INFO:  eta: 0:09:00  iter: 7319  total_loss: 0.07834  loss_cls: 0.05472  loss_box_reg: 0.02306  time: 2.9084  data_time: 2.3528  lr: 0.0002  max_mem: 6207M
[04/02 22:46:41] d2.utils.events INFO:  eta: 0:07:59  iter: 7339  total_loss: 0.08344  loss_cls: 0.05793  loss_box_reg: 0.0238  time: 2.9082  data_time: 2.3412  lr: 0.0002  max_mem: 6207M
[04/02 22:47:38] d2.utils.events INFO:  eta: 0:06:59  iter: 7359  total_loss: 0.07281  loss_cls: 0.05259  loss_box_reg: 0.02217  time: 2.9081  data_time: 2.3742  lr: 0.0002  max_mem: 6207M
[04/02 22:48:39] d2.utils.events INFO:  eta: 0:05:59  iter: 7379  total_loss: 0.07915  loss_cls: 0.05282  loss_box_reg: 0.02304  time: 2.9084  data_time: 2.5522  lr: 0.0002  max_mem: 6207M
[04/02 22:49:35] d2.utils.events INFO:  eta: 0:04:58  iter: 7399  total_loss: 0.07975  loss_cls: 0.05613  loss_box_reg: 0.02376  time: 2.9081  data_time: 2.2880  lr: 0.0002  max_mem: 6207M
[04/02 22:50:33] d2.utils.events INFO:  eta: 0:03:58  iter: 7419  total_loss: 0.08041  loss_cls: 0.05441  loss_box_reg: 0.02429  time: 2.9081  data_time: 2.4362  lr: 0.0002  max_mem: 6207M
[04/02 22:51:28] d2.utils.events INFO:  eta: 0:02:57  iter: 7439  total_loss: 0.07412  loss_cls: 0.05279  loss_box_reg: 0.02176  time: 2.9077  data_time: 2.2692  lr: 0.0002  max_mem: 6207M
[04/02 22:52:27] d2.utils.events INFO:  eta: 0:01:57  iter: 7459  total_loss: 0.07598  loss_cls: 0.05222  loss_box_reg: 0.0249  time: 2.9077  data_time: 2.4319  lr: 0.0002  max_mem: 6207M
[04/02 22:53:23] d2.utils.events INFO:  eta: 0:00:57  iter: 7479  total_loss: 0.07834  loss_cls: 0.05402  loss_box_reg: 0.0225  time: 2.9075  data_time: 2.3261  lr: 0.0002  max_mem: 6207M
[04/02 22:53:45] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_0007487.pth
[04/02 22:54:16] fvcore.common.checkpoint INFO: Saving checkpoint to output_2x_smooth_l1/model_final.pth
[04/02 22:54:17] d2.utils.events INFO:  eta: 0:00:00  iter: 7498  total_loss: 0.07982  loss_cls: 0.05543  loss_box_reg: 0.02241  time: 2.9071  data_time: 2.3194  lr: 0.0002  max_mem: 6207M
[04/02 22:54:17] d2.engine.hooks INFO: Overall training speed: 7497 iterations in 6:03:14 (2.9071 s / it)
[04/02 22:54:17] d2.engine.hooks INFO: Total training time: 6:07:16 (0:04:02 on hooks)
[04/02 22:54:17] d2.data.datasets.coco INFO: Loaded 115 images in COCO format from /home/ps/DiskA/project/GZY1/Distill_GID_detectron2/datasets/PCBdataset/Annotations/PCBTRAIN.json
[04/02 22:54:17] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[04/02 22:54:17] d2.data.common INFO: Serializing 115 elements to byte tensors and concatenating them all ...
[04/02 22:54:17] d2.data.common INFO: Serialized dataset takes 0.06 MiB
[04/02 22:54:17] d2.evaluation.evaluator INFO: Start inference on 115 batches
[04/02 22:54:19] d2.evaluation.evaluator INFO: Inference done 11/115. Dataloading: 0.0882 s/iter. Inference: 0.0226 s/iter. Eval: 0.0002 s/iter. Total: 0.1109 s/iter. ETA=0:00:11
[04/02 22:54:24] d2.evaluation.evaluator INFO: Inference done 39/115. Dataloading: 0.1488 s/iter. Inference: 0.0210 s/iter. Eval: 0.0002 s/iter. Total: 0.1700 s/iter. ETA=0:00:12
[04/02 22:54:29] d2.evaluation.evaluator INFO: Inference done 70/115. Dataloading: 0.1454 s/iter. Inference: 0.0207 s/iter. Eval: 0.0002 s/iter. Total: 0.1663 s/iter. ETA=0:00:07
[04/02 22:54:34] d2.evaluation.evaluator INFO: Inference done 104/115. Dataloading: 0.1402 s/iter. Inference: 0.0206 s/iter. Eval: 0.0002 s/iter. Total: 0.1610 s/iter. ETA=0:00:01
[04/02 22:54:36] d2.evaluation.evaluator INFO: Total inference time: 0:00:17.895200 (0.162684 s / iter per device, on 1 devices)
[04/02 22:54:36] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:02 (0.020930 s / iter per device, on 1 devices)
[04/02 22:54:36] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[04/02 22:54:36] d2.evaluation.coco_evaluation INFO: Saving results to output_2x_smooth_l1/inference/coco_instances_results.json
[04/02 22:54:36] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[04/02 22:54:36] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/02 22:54:36] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.01 seconds.
[04/02 22:54:36] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/02 22:54:36] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[04/02 22:54:36] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 67.122 | 98.007 | 80.360 | 60.000 | 65.156 | 86.899 |
[04/02 22:54:36] d2.engine.defaults INFO: Evaluation results for coco_val in csv format:
[04/02 22:54:36] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/02 22:54:36] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[04/02 22:54:36] d2.evaluation.testing INFO: copypaste: 67.1219,98.0070,80.3597,60.0000,65.1560,86.8992
